{"file_contents":{"src/components/layout/Footer.tsx":{"content":"\"use client\";\n\nimport 'remixicon/fonts/remixicon.css'\nimport Link from \"next/link\";\nimport styles from \"./Footer.module.css\";\n\nexport default function Footer() {\n  const currentYear = new Date().getFullYear();\n\n  return (\n    <footer className={styles.footer}>\n      <div className=\"container\">\n        <div className={styles.footerContent}>\n          {/* Company Info */}\n          <div className={styles.section}>\n            <h3 className={styles.sectionTitle}>The Fringe</h3>\n            <p className={styles.description}>\n              Premium salon services and professional beauty education.\n              Transform your look and advance your career with us.\n            </p>\n            <div className={styles.socialLinks}>\n              <a href=\"#\" className={styles.socialLink} aria-label=\"Facebook\">\n                <span><i className=\"ri-facebook-fill\"></i></span>\n              </a>\n              <a href=\"#\" className={styles.socialLink} aria-label=\"Instagram\">\n                <span><i className=\"ri-instagram-line\"></i></span>\n              </a>\n              <a href=\"#\" className={styles.socialLink} aria-label=\"Whatsapp\">\n                <span><i className=\"ri-whatsapp-line\"></i></span>\n              </a>\n            </div>\n          </div>\n\n          {/* Quick Links */}\n          <div className={styles.section}>\n            <h4 className={styles.sectionTitle}>Quick Links</h4>\n            <nav className={styles.linkList}>\n              <Link href=\"/about\" className={styles.footerLink}>\n                About Us\n              </Link>\n              <Link href=\"/services\" className={styles.footerLink}>\n                Services\n              </Link>\n              <Link href=\"/courses\" className={styles.footerLink}>\n                Courses\n              </Link>\n              <Link href=\"/team\" className={styles.footerLink}>\n                Team\n              </Link>\n              <Link href=\"/reviews\" className={styles.footerLink}>\n                Reviews\n              </Link>\n              <Link href=\"/contact\" className={styles.footerLink}>\n                Contact\n              </Link>\n            </nav>\n          </div>\n\n          {/* Services */}\n          <div className={styles.section}>\n            <h4 className={styles.sectionTitle}>Services</h4>\n            <nav className={styles.linkList}>\n              <Link href=\"/services#hair\" className={styles.footerLink}>\n                Hair Styling\n              </Link>\n              <Link href=\"/services#color\" className={styles.footerLink}>\n                Hair Coloring\n              </Link>\n              <Link href=\"/services#makeup\" className={styles.footerLink}>\n                Makeup\n              </Link>\n              <Link href=\"/services#nails\" className={styles.footerLink}>\n                Nail Art\n              </Link>\n              <Link href=\"/services#skincare\" className={styles.footerLink}>\n                Skincare\n              </Link>\n            </nav>\n          </div>\n\n          {/* Contact Info */}\n          <div className={styles.section}>\n            <h4 className={styles.sectionTitle}>Contact Us</h4>\n            <div className={styles.contactInfo}>\n              <p className={styles.contactItem}>\n                <strong>Phone:</strong> (555) 123-4567\n              </p>\n              <p className={styles.contactItem}>\n                <strong>Email:</strong> info@thefringe.com\n              </p>\n              <p className={styles.contactItem}>\n                <strong>Address:</strong> 123 Beauty St, Style City, SC 12345\n              </p>\n              <p className={styles.contactItem}>\n                <strong>Hours:</strong> Mon-Sat 9AM-8PM, Sun 11AM-6PM\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Newsletter Signup */}\n        <div className={styles.newsletter}>\n          <div className={styles.newsletterContent}>\n            <h4 className={styles.newsletterTitle}>Stay Updated</h4>\n            <p className={styles.newsletterDescription}>\n              Get the latest beauty tips, course updates, and special offers.\n            </p>\n          </div>\n          <form className={styles.newsletterForm}>\n            <input\n              type=\"email\"\n              placeholder=\"Enter your email\"\n              className={`input ${styles.newsletterInput}`}\n              required\n            />\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Subscribe\n            </button>\n          </form>\n        </div>\n\n        {/* Bottom Bar */}\n        <div className={styles.bottomBar}>\n          <div className={styles.bottomContent}>\n            <p className={styles.copyright}>\n              © {currentYear} The Fringe. All rights reserved.\n            </p>\n            <nav className={styles.legalLinks}>\n              <Link href=\"/privacy-policy\" className={styles.legalLink}>\n                Privacy Policy\n              </Link>\n              <Link href=\"/cookie-policy\" className={styles.legalLink}>\n                Cookies Policy\n              </Link>\n              <Link href=\"/student/dashboard\" className={styles.legalLink}>\n                Student\n              </Link>\n              <Link href=\"/admin/dashboard\" className={styles.legalLink}>\n                Staff\n              </Link>\n            </nav>\n          </div>\n        </div>\n        <div className={styles.fringeText}>FRINGE</div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":5437},"common/README.md":{"content":"# The Fringe Salon - Common Libraries\r\n\r\nThis directory contains common/shared code used across the frontend-public app.\r\n\r\n## Contents\r\n\r\n- Type definitions\r\n- Utility functions\r\n- Authentication helpers\r\n- Constants\r\n","size_bytes":219},"src/components/sections/Newsletter.tsx":{"content":"\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport styles from \"./Newsletter.module.css\";\r\nimport { newsletterService } from \"@/services/newsletter.service\";\r\nimport type { ApiError } from \"@/lib/api\";\r\n\r\nconst preferenceOptions = [\r\n  \"Hair Styling Updates\",\r\n  \"Makeup Tips & Trends\",\r\n  \"Special Offers\",\r\n  \"Events & Workshops\",\r\n  \"New Services\",\r\n];\r\n\r\nexport default function Newsletter() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    setMessage(\"\");\r\n\r\n    try {\r\n      await newsletterService.subscribe({\r\n        email,\r\n        name,\r\n      });\r\n\r\n      setIsSuccess(true);\r\n      setMessage(\"Successfully subscribed to our newsletter!\");\r\n\r\n      // Reset form\r\n      setEmail(\"\");\r\n      setName(\"\");\r\n    } catch (error) {\r\n      const apiError = error as ApiError;\r\n      setIsSuccess(false);\r\n      setMessage(apiError.message || \"Failed to subscribe. Please try again.\");\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={styles.newsletter}>\r\n      <div className={styles.container}>\r\n        <div className={styles.content}>\r\n          <div className={styles.textContent}>\r\n            <h2 className={styles.title}>Stay in the Loop</h2>\r\n            <p className={styles.description}>\r\n              Get the latest beauty tips, course updates, special offers, and\r\n              exclusive content delivered straight to your inbox.\r\n            </p>\r\n            <ul className={styles.benefits}>\r\n              <li>💄 Weekly beauty tips and tutorials</li>\r\n              <li>📚 Early access to new courses</li>\r\n              <li>🎯 Exclusive member discounts</li>\r\n              <li>✨ Industry news and trends</li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div className={styles.formContainer}>\r\n            <form onSubmit={handleSubmit} className={styles.form}>\r\n              <div className={styles.inputGroup}>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Your name (optional)\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  className={styles.input}\r\n                />\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Enter your email address\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  required\r\n                  className={styles.input}\r\n                />\r\n              </div>\r\n\r\n              {message && (\r\n                <div\r\n                  className={`${styles.message} ${\r\n                    isSuccess ? styles.success : styles.error\r\n                  }`}\r\n                >\r\n                  {message}\r\n                </div>\r\n              )}\r\n\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                className={styles.submitButton}\r\n              >\r\n                {isSubmitting ? \"Subscribing...\" : \"Subscribe Now\"}\r\n              </button>\r\n\r\n              <p className={styles.privacy}>\r\n                We respect your privacy. Unsubscribe at any time.\r\n              </p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","size_bytes":3598},"src/app/admin/settings/Settings.module.css":{"content":".settingsPage {\r\n  padding: 24px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.header {\r\n  margin-bottom: 32px;\r\n}\r\n\r\n.title {\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  color: #ffffff;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.subtitle {\r\n  color: rgba(255, 255, 255, 0.7);\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.message {\r\n  padding: 16px 20px;\r\n  border-radius: 12px;\r\n  margin-bottom: 24px;\r\n  font-weight: 500;\r\n}\r\n\r\n.message.success {\r\n  background: rgba(34, 197, 94, 0.1);\r\n  border: 1px solid rgba(34, 197, 94, 0.3);\r\n  color: #22c55e;\r\n}\r\n\r\n.message.error {\r\n  background: rgba(239, 68, 68, 0.1);\r\n  border: 1px solid rgba(239, 68, 68, 0.3);\r\n  color: #ef4444;\r\n}\r\n\r\n.settingsGrid {\r\n  display: grid;\r\n  gap: 24px;\r\n  grid-template-columns: 1fr;\r\n}\r\n\r\n.settingCard {\r\n  background: rgba(255, 255, 255, 0.05);\r\n  backdrop-filter: blur(20px);\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  border-radius: 16px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n}\r\n\r\n.cardHeader {\r\n  padding: 24px 24px 16px 24px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.cardTitle {\r\n  font-size: 1.3rem;\r\n  font-weight: 600;\r\n  color: #ffffff;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.cardDescription {\r\n  color: rgba(255, 255, 255, 0.6);\r\n  font-size: 0.95rem;\r\n}\r\n\r\n.cardContent {\r\n  padding: 24px;\r\n}\r\n\r\n.toggleContainer {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n}\r\n\r\n.toggleLabel {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-weight: 500;\r\n  color: #ffffff;\r\n  cursor: pointer;\r\n}\r\n\r\n.toggle {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 60px;\r\n  height: 34px;\r\n}\r\n\r\n.toggle input {\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n}\r\n\r\n.toggleSlider {\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  transition: 0.4s;\r\n  border-radius: 34px;\r\n}\r\n\r\n.toggleSlider:before {\r\n  position: absolute;\r\n  content: \"\";\r\n  height: 26px;\r\n  width: 26px;\r\n  left: 4px;\r\n  bottom: 4px;\r\n  background-color: white;\r\n  transition: 0.4s;\r\n  border-radius: 50%;\r\n}\r\n\r\n.toggle input:checked + .toggleSlider {\r\n  background: linear-gradient(135deg, #D0B49F 0%, #B8A082 100%);\r\n}\r\n\r\n.toggle input:checked + .toggleSlider:before {\r\n  transform: translateX(26px);\r\n}\r\n\r\n.toggleDescription {\r\n  color: rgba(255, 255, 255, 0.6);\r\n  font-size: 0.9rem;\r\n  line-height: 1.4;\r\n}\r\n\r\n.formGroup {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.formGroup label {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: 500;\r\n  color: #ffffff;\r\n}\r\n\r\n.formGroup .input {\r\n  width: 100%;\r\n  padding: 12px 16px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-radius: 8px;\r\n  background: rgba(255, 255, 255, 0.05);\r\n  color: #ffffff;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.formGroup .input:focus {\r\n  outline: none;\r\n  border-color: #D0B49F;\r\n  background: rgba(255, 255, 255, 0.08);\r\n  box-shadow: 0 0 0 3px rgba(208, 180, 159, 0.2);\r\n}\r\n\r\n.formGroup .input::placeholder {\r\n  color: rgba(255, 255, 255, 0.4);\r\n}\r\n\r\n.loading,\r\n.error {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 400px;\r\n  font-size: 1.1rem;\r\n  color: rgba(255, 255, 255, 0.7);\r\n}\r\n\r\n.error {\r\n  color: #ef4444;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .settingsPage {\r\n    padding: 16px;\r\n  }\r\n\r\n  .title {\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  .subtitle {\r\n    font-size: 1rem;\r\n  }\r\n\r\n  .cardHeader,\r\n  .cardContent {\r\n    padding: 20px;\r\n  }\r\n\r\n  .toggleLabel {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 12px;\r\n  }\r\n}","size_bytes":3568},"src/components/ui/index.ts":{"content":"// UI Components\r\nexport { default as VideoPlayer } from './VideoPlayer';\r\nexport { default as AnimatedSection } from './animated-components';","size_bytes":142},"src/app/cookie-policy/CookiePolicy.module.css":{"content":".cookiePage {\r\n  padding: 120px 0 80px 0;\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #0f0f0f 0%, #1a1a1a 50%, #0f0f0f 100%);\r\n}\r\n\r\n.header {\r\n  text-align: center;\r\n  margin-bottom: 60px;\r\n  padding-bottom: 40px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.title {\r\n  font-size: clamp(2.5rem, 5vw, 3.5rem);\r\n  font-weight: 800;\r\n  color: #ffffff;\r\n  margin-bottom: 16px;\r\n  background: linear-gradient(135deg, #ffffff 0%, #D0B49F 100%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n}\r\n\r\n.lastUpdated {\r\n  color: rgba(255, 255, 255, 0.6);\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.content {\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  background: rgba(255, 255, 255, 0.05);\r\n  backdrop-filter: blur(20px);\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  border-radius: 20px;\r\n  padding: 40px;\r\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.section {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.section:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.section h2 {\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  color: #D0B49F;\r\n  margin-bottom: 16px;\r\n  padding-bottom: 8px;\r\n  border-bottom: 2px solid rgba(208, 180, 159, 0.3);\r\n}\r\n\r\n.section h3 {\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  color: #ffffff;\r\n  margin: 24px 0 12px 0;\r\n}\r\n\r\n.section p {\r\n  color: rgba(255, 255, 255, 0.8);\r\n  line-height: 1.7;\r\n  margin-bottom: 16px;\r\n  font-size: 1rem;\r\n}\r\n\r\n.section ul {\r\n  margin: 16px 0;\r\n  padding-left: 24px;\r\n}\r\n\r\n.section li {\r\n  color: rgba(255, 255, 255, 0.8);\r\n  line-height: 1.6;\r\n  margin-bottom: 8px;\r\n  font-size: 1rem;\r\n}\r\n\r\n.section li::marker {\r\n  color: #D0B49F;\r\n}\r\n\r\n.link {\r\n  color: #D0B49F;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  transition: all 0.3s ease;\r\n  border-bottom: 1px solid transparent;\r\n}\r\n\r\n.link:hover {\r\n  color: #E6D3B7;\r\n  border-bottom-color: #E6D3B7;\r\n}\r\n\r\n.cookieType {\r\n  margin: 32px 0;\r\n  padding: 24px;\r\n  background: rgba(255, 255, 255, 0.03);\r\n  border: 1px solid rgba(255, 255, 255, 0.08);\r\n  border-radius: 12px;\r\n}\r\n\r\n.cookieType h3 {\r\n  color: #D0B49F;\r\n  margin-top: 0;\r\n  margin-bottom: 16px;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.cookieTable {\r\n  margin-top: 20px;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.tableHeader {\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr 1fr;\r\n  background: rgba(208, 180, 159, 0.2);\r\n  padding: 12px 16px;\r\n  font-weight: 600;\r\n  color: #ffffff;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.tableRow {\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr 1fr;\r\n  padding: 12px 16px;\r\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n  color: rgba(255, 255, 255, 0.8);\r\n  font-size: 0.85rem;\r\n}\r\n\r\n.tableRow:nth-child(even) {\r\n  background: rgba(255, 255, 255, 0.02);\r\n}\r\n\r\n.tableRow span:first-child {\r\n  font-family: 'Courier New', monospace;\r\n  color: #D0B49F;\r\n  font-weight: 500;\r\n}\r\n\r\n.contactInfo {\r\n  background: rgba(208, 180, 159, 0.1);\r\n  border: 1px solid rgba(208, 180, 159, 0.2);\r\n  border-radius: 12px;\r\n  padding: 24px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.contactInfo p {\r\n  margin-bottom: 8px;\r\n  color: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n.contactInfo p:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n/* Mobile Responsiveness */\r\n@media (max-width: 768px) {\r\n  .cookiePage {\r\n    padding: 100px 0 60px 0;\r\n  }\r\n\r\n  .content {\r\n    margin: 0 20px;\r\n    padding: 30px 24px;\r\n    border-radius: 16px;\r\n  }\r\n\r\n  .section h2 {\r\n    font-size: 1.3rem;\r\n  }\r\n\r\n  .section h3 {\r\n    font-size: 1.1rem;\r\n  }\r\n\r\n  .section p,\r\n  .section li {\r\n    font-size: 0.95rem;\r\n  }\r\n\r\n  .cookieType {\r\n    padding: 20px;\r\n  }\r\n\r\n  .tableHeader,\r\n  .tableRow {\r\n    grid-template-columns: 1fr;\r\n    gap: 8px;\r\n    text-align: left;\r\n  }\r\n\r\n  .tableHeader {\r\n    display: none; /* Hide header on mobile for better readability */\r\n  }\r\n\r\n  .tableRow {\r\n    padding: 16px;\r\n    border-radius: 8px;\r\n    margin-bottom: 8px;\r\n    background: rgba(255, 255, 255, 0.05) !important;\r\n    border: 1px solid rgba(255, 255, 255, 0.1);\r\n    display: block;\r\n  }\r\n\r\n  .tableRow span {\r\n    display: block;\r\n    margin-bottom: 4px;\r\n  }\r\n\r\n  .tableRow span:first-child::before {\r\n    content: 'Cookie: ';\r\n    color: rgba(255, 255, 255, 0.6);\r\n    font-family: inherit;\r\n    font-weight: normal;\r\n  }\r\n\r\n  .tableRow span:nth-child(2)::before {\r\n    content: 'Purpose: ';\r\n    color: rgba(255, 255, 255, 0.6);\r\n  }\r\n\r\n  .tableRow span:last-child::before {\r\n    content: 'Duration: ';\r\n    color: rgba(255, 255, 255, 0.6);\r\n  }\r\n\r\n  .contactInfo {\r\n    padding: 20px;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .content {\r\n    margin: 0 16px;\r\n    padding: 24px 20px;\r\n  }\r\n\r\n  .section ul {\r\n    padding-left: 20px;\r\n  }\r\n\r\n  .cookieType {\r\n    padding: 16px;\r\n  }\r\n}","size_bytes":4752},"src/components/ui/LoadingSpinner.module.css":{"content":".loadingContainer {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 16px;\r\n}\r\n\r\n.loadingContainer.small {\r\n  gap: 8px;\r\n}\r\n\r\n.loadingContainer.medium {\r\n  gap: 12px;\r\n}\r\n\r\n.loadingContainer.large {\r\n  gap: 20px;\r\n}\r\n\r\n/* Spinner Styles */\r\n.spinner {\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n.spinner.small {\r\n  width: 24px;\r\n  height: 24px;\r\n}\r\n\r\n.spinner.medium {\r\n  width: 40px;\r\n  height: 40px;\r\n}\r\n\r\n.spinner.large {\r\n  width: 60px;\r\n  height: 60px;\r\n}\r\n\r\n.spinnerRing {\r\n  position: absolute;\r\n  border-radius: 50%;\r\n  border: 2px solid transparent;\r\n  animation: spin 1.5s linear infinite;\r\n}\r\n\r\n.spinner.small .spinnerRing {\r\n  width: 24px;\r\n  height: 24px;\r\n  border-width: 2px;\r\n}\r\n\r\n.spinner.medium .spinnerRing {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-width: 3px;\r\n}\r\n\r\n.spinner.large .spinnerRing {\r\n  width: 60px;\r\n  height: 60px;\r\n  border-width: 4px;\r\n}\r\n\r\n/* Color variants */\r\n.spinner.primary .spinnerRing:nth-child(1) {\r\n  border-top-color: #D0B49F;\r\n  animation-delay: 0s;\r\n}\r\n\r\n.spinner.primary .spinnerRing:nth-child(2) {\r\n  border-top-color: rgba(208, 180, 159, 0.6);\r\n  animation-delay: -0.5s;\r\n}\r\n\r\n.spinner.primary .spinnerRing:nth-child(3) {\r\n  border-top-color: rgba(208, 180, 159, 0.3);\r\n  animation-delay: -1s;\r\n}\r\n\r\n.spinner.secondary .spinnerRing:nth-child(1) {\r\n  border-top-color: #ffffff;\r\n  animation-delay: 0s;\r\n}\r\n\r\n.spinner.secondary .spinnerRing:nth-child(2) {\r\n  border-top-color: rgba(255, 255, 255, 0.6);\r\n  animation-delay: -0.5s;\r\n}\r\n\r\n.spinner.secondary .spinnerRing:nth-child(3) {\r\n  border-top-color: rgba(255, 255, 255, 0.3);\r\n  animation-delay: -1s;\r\n}\r\n\r\n.spinner.white .spinnerRing:nth-child(1) {\r\n  border-top-color: #ffffff;\r\n  animation-delay: 0s;\r\n}\r\n\r\n.spinner.white .spinnerRing:nth-child(2) {\r\n  border-top-color: rgba(255, 255, 255, 0.7);\r\n  animation-delay: -0.5s;\r\n}\r\n\r\n.spinner.white .spinnerRing:nth-child(3) {\r\n  border-top-color: rgba(255, 255, 255, 0.4);\r\n  animation-delay: -1s;\r\n}\r\n\r\n/* Progress Bar Styles */\r\n.progressContainer {\r\n  width: 100%;\r\n  max-width: 300px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.progressBar {\r\n  width: 100%;\r\n  height: 8px;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n\r\n.progressBar.large {\r\n  height: 12px;\r\n  border-radius: 6px;\r\n}\r\n\r\n.progressFill {\r\n  height: 100%;\r\n  background: linear-gradient(90deg, #D0B49F 0%, #E6D3B7 100%);\r\n  border-radius: inherit;\r\n  transition: width 0.3s ease;\r\n  position: relative;\r\n}\r\n\r\n.progressFill::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);\r\n  animation: shimmer 2s infinite;\r\n}\r\n\r\n.progressBar.primary .progressFill {\r\n  background: linear-gradient(90deg, #D0B49F 0%, #E6D3B7 100%);\r\n}\r\n\r\n.progressBar.secondary .progressFill {\r\n  background: linear-gradient(90deg, #ffffff 0%, rgba(255, 255, 255, 0.8) 100%);\r\n}\r\n\r\n.progressBar.white .progressFill {\r\n  background: #ffffff;\r\n}\r\n\r\n.progressText {\r\n  font-size: 0.9rem;\r\n  color: rgba(255, 255, 255, 0.8);\r\n  text-align: center;\r\n  font-weight: 500;\r\n}\r\n\r\n/* Loading Text */\r\n.loadingText {\r\n  color: rgba(255, 255, 255, 0.8);\r\n  font-weight: 500;\r\n  text-align: center;\r\n}\r\n\r\n.loadingContainer.small .loadingText {\r\n  font-size: 0.8rem;\r\n}\r\n\r\n.loadingContainer.medium .loadingText {\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.loadingContainer.large .loadingText {\r\n  font-size: 1.1rem;\r\n}\r\n\r\n/* Loading Overlay */\r\n.loadingOverlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  backdrop-filter: blur(8px);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 10000;\r\n}\r\n\r\n.overlayContent {\r\n  background: rgba(20, 20, 20, 0.95);\r\n  backdrop-filter: blur(20px);\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  border-radius: 20px;\r\n  padding: 40px;\r\n  text-align: center;\r\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n/* Animations */\r\n@keyframes spin {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n@keyframes shimmer {\r\n  0% {\r\n    transform: translateX(-100%);\r\n  }\r\n  100% {\r\n    transform: translateX(100%);\r\n  }\r\n}\r\n\r\n/* Pulse animation for loading states */\r\n@keyframes pulse {\r\n  0%, 100% {\r\n    opacity: 1;\r\n  }\r\n  50% {\r\n    opacity: 0.5;\r\n  }\r\n}\r\n\r\n.loadingContainer.pulse {\r\n  animation: pulse 2s infinite;\r\n}","size_bytes":4568},"src/header/navLinks/FlowingMenu.css":{"content":".menu-wrap {\r\n    width: 30vw;\r\n    height: 100%;\r\n    overflow: hidden;\r\n}\r\n\r\n.menu {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    width: 100% ;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.menu__item {\r\n    flex: 1;\r\n    position: relative;\r\n    overflow: hidden;\r\n    text-align: center;\r\n    width: 100%;\r\n}\r\n\r\n.menu__item-link {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100%;\r\n    position: relative;\r\n    cursor: pointer;\r\n    text-transform: uppercase;\r\n    text-decoration: none;\r\n    white-space: nowrap;\r\n    font-weight: 600;\r\n    color: #101010;\r\n    font-size: 4vh;\r\n}\r\n\r\n.menu__item-link:hover {\r\n    color: #060010;\r\n}\r\n\r\n.menu__item-link:focus:not(:focus-visible) {\r\n    color: #101010;\r\n}\r\n\r\n.marquee {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    overflow: hidden;\r\n    width: 300%;\r\n    height: 100%;\r\n    pointer-events: none;\r\n    background: #101010;\r\n    transform: translate3d(0, 101%, 0);\r\n    transition: transform 0.6s ease-expo;\r\n    \r\n}\r\n\r\n.marquee__inner-wrap {\r\n    height: 100%;\r\n    width: 100%;\r\n    display: flex;\r\n    transform: translateX(0);\r\n}\r\n\r\n.marquee__inner {\r\n    display: flex;\r\n    align-items: center;\r\n    position: relative;\r\n    height: 100%;\r\n    width: 600%;\r\n    will-change: transform;\r\n    animation: marquee 15s linear infinite;\r\n}\r\n\r\n.marquee span {\r\n    color: #f1f1f1;\r\n    white-space: nowrap;\r\n    text-transform: uppercase;\r\n    font-weight: 400;\r\n    font-size: 4vh;\r\n    line-height: 1.2;\r\n    padding: 1vh 1vw 0;\r\n}\r\n\r\n.marquee__img {\r\n    width: 200px;\r\n    height: 7vh;\r\n    margin: 2em 2vw;\r\n    padding: 1em 0;\r\n    border-radius: 50px;\r\n    background-size: cover;\r\n    background-position: 50% 50%;\r\n}\r\n\r\n.menu__item-link:hover+.marquee {\r\n    transform: translate3d(0, 0%, 0);\r\n}\r\n\r\n@keyframes marquee {\r\n    from {\r\n        transform: translateX(0);\r\n    }\r\n\r\n    to {\r\n        transform: translateX(-50%);\r\n    }\r\n}","size_bytes":1973},"src/header/homePage-header.module.css":{"content":"/* ==============================================\r\n   CSS CUSTOM PROPERTIES (Variables)\r\n   ============================================== */\r\n:root {\r\n    --color-primary: #ffffff;\r\n    --color-dark: #000000;\r\n    --transition: all 0.2s ease;\r\n    --animation-duration: 0.4s;\r\n    --border-radius: 5px;\r\n    --shadow: 2px 0 8px rgba(0, 0, 0, 0.04);\r\n}\r\n\r\n/* ==============================================\r\n   HEADER LAYOUT\r\n   ============================================== */\r\n.headerSpacer {\r\n    width: 100%;\r\n    height: 80px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 35px 25px;\r\n    color: var(--color-primary);\r\n    position: fixed;\r\n    z-index: 100;\r\n    background: var(--color-dark);\r\n}\r\n\r\n.headerContainer {\r\n    width: 75%;\r\n    height: 65px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n\r\n\r\n\r\n/* Hide header when menu is open */\r\n.headerHidden {\r\n    display: none !important;\r\n}\r\n\r\n/* ==============================================\r\n   HEADER ELEMENTS\r\n   ============================================== */\r\n.headerLogo_container img {\r\n    height: 80px;\r\n    width: 80px;\r\n}\r\n\r\n.headerLinks {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 50px;\r\n}\r\n\r\n/* Button Base Styles */\r\n.headerCTA_button {\r\n    padding: 5px 15px;\r\n    border-radius: var(--border-radius);\r\n    cursor: pointer;\r\n    font-size: 2.2rem;\r\n    font-weight: 500;\r\n    transition: var(--transition);\r\n    color: var(--color-primary);\r\n    background-color: var(--color-dark);\r\n    border: var(--color-primary) 2px solid;\r\n\r\n}\r\n\r\n.headerCTA_button:hover {\r\n    color: var(--color-dark);\r\n    background-color: var(--color-primary);\r\n    border: var(--color-dark) 2px solid;\r\n}\r\n\r\n.headerMenu_button {\r\n    padding: 7px 12px;\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    color: var(--color-dark);\r\n    background-color: var(--color-primary);\r\n    font-size: 2rem;\r\n    transition: var(--transition);\r\n    border-radius: var(--border-radius);\r\n    border: var(--color-dark) 2px solid;\r\n}\r\n\r\n.headerMenu_button:hover {\r\n    color: var(--color-primary);\r\n    background-color: var(--color-dark);\r\n    border: var(--color-primary) 2px solid;\r\n}\r\n\r\n/* ==============================================\r\n   NAVIGATION POPUP\r\n   ============================================== */\r\n.headerNav_popup {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    z-index: 100;\r\n    overflow: hidden;\r\n}\r\n\r\n.headerNav_popup_left {\r\n    width: 70vw;\r\n    height: 100vh;\r\n    background: var(--color-dark);\r\n    box-shadow: var(--shadow);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n}\r\n\r\n.headerNav_popup_right {\r\n    width: 30vw;\r\n    height: 100vh;\r\n    background: var(--color-primary);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n}\r\n\r\n/* ==============================================\r\n   POPUP CONTENT\r\n   ============================================== */\r\n.headerNav_popup_logo_container {\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 40px;\r\n    z-index: 101;\r\n}\r\n\r\n.headerNav_popup_logo_container img {\r\n    height: 80px;\r\n    width: 80px;\r\n}\r\n\r\n.headerNav_popup_close_container {\r\n    position: absolute;\r\n    top: 30px;\r\n    right: 30px;\r\n    z-index: 101;\r\n}\r\n\r\n.headerNav_popup_close_button {\r\n    background: none;\r\n    border: none;\r\n    font-size: 2.5rem;\r\n    color: var(--color-dark);\r\n    cursor: pointer;\r\n    padding: 10px 20px;\r\n    border-radius: 50px;\r\n    font-weight: 600;\r\n    transition: var(--transition);\r\n}\r\n\r\n.headerNav_popup_close_button:hover {\r\n    background: var(--color-dark);\r\n    color: var(--color-primary);\r\n}\r\n\r\n.headerNav_popup_left_content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.headerNav_popup_left_content_top {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.headerNav_popup_left_content_top p {\r\n    font-size: 40rem;\r\n    font-weight: 500;\r\n    color: #Fff;\r\n    opacity: 1;\r\n    letter-spacing: -15px;\r\n}\r\n\r\n.headerNav_popup_left_content_top_p_firstLetter {\r\n    display: inline-block;\r\n    transform: scaleY(1.5) translateY(6.5%);\r\n    transform-origin: bottom;\r\n\r\n}\r\n\r\n.headerNav_popup_left_content_top h1 {\r\n    font-size: 15rem;\r\n    font-weight: 200;\r\n    color: #fff;\r\n    letter-spacing: -10px;\r\n    position: absolute;\r\n    top: 425px;\r\n    left: 825px;\r\n}\r\n\r\n/* ==============================================\r\n   ANIMATIONS\r\n   ============================================== */\r\n@keyframes slideInLeft {\r\n    from {\r\n        transform: translateX(-100%);\r\n        opacity: 0;\r\n    }\r\n\r\n    to {\r\n        transform: translateX(0);\r\n        opacity: 1;\r\n    }\r\n}\r\n\r\n@keyframes slideInRight {\r\n    from {\r\n        transform: translateX(100%);\r\n        opacity: 0;\r\n    }\r\n\r\n    to {\r\n        transform: translateX(0);\r\n        opacity: 1;\r\n    }\r\n}\r\n\r\n@keyframes slideOutLeft {\r\n    from {\r\n        transform: translateX(0);\r\n        opacity: 1;\r\n    }\r\n\r\n    to {\r\n        transform: translateX(-100%);\r\n        opacity: 0;\r\n    }\r\n}\r\n\r\n@keyframes slideOutRight {\r\n    from {\r\n        transform: translateX(0);\r\n        opacity: 1;\r\n    }\r\n\r\n    to {\r\n        transform: translateX(100%);\r\n        opacity: 0;\r\n    }\r\n}\r\n\r\n.slideInLeft {\r\n    animation: slideInLeft var(--animation-duration) forwards;\r\n}\r\n\r\n.slideOutLeft {\r\n    animation: slideOutLeft var(--animation-duration) forwards;\r\n}\r\n\r\n.slideInRight {\r\n    animation: slideInRight var(--animation-duration) forwards;\r\n}\r\n\r\n.slideOutRight {\r\n    animation: slideOutRight var(--animation-duration) forwards;\r\n}\r\n\r\n/* ==============================================\r\n   RESPONSIVE DESIGN\r\n   ============================================== */\r\n@media (max-width: 1200px) {\r\n    .headerName {\r\n        font-size: 2.5rem;\r\n    }\r\n\r\n    .headerCTA_button {\r\n        font-size: 1.8rem;\r\n        padding: 8px 16px;\r\n    }\r\n\r\n    .headerMenu_button {\r\n        font-size: 2.5rem;\r\n    }\r\n}\r\n\r\n@media (max-width: 2560px) {\r\n    .headerNav_popup_left_content_top p {\r\n        font-size: 28rem;\r\n        margin: 250px 0 -20px 25px;\r\n    }\r\n}\r\n\r\n@media (max-width: 900px) {\r\n    .headerContainer {\r\n        width: 95%;\r\n    }\r\n\r\n    .headerCTA_button.headerCTA_header {\r\n        display: none !important;\r\n    }\r\n\r\n    .headerNav_popup {\r\n        flex-direction: column;\r\n    }\r\n\r\n    .headerNav_popup_left {\r\n        display: none !important;\r\n    }\r\n\r\n    .headerNav_popup_right {\r\n        width: 100vw;\r\n        height: 100vh;\r\n    }\r\n\r\n    .headerNav_popup_close_container {\r\n        top: 24px;\r\n        right: 24px;\r\n    }\r\n\r\n    .headerNav_popup_close_button {\r\n        font-size: 2rem;\r\n        padding: 8px 16px;\r\n        border-radius: 30px;\r\n    }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .headerContainer {\r\n        width: 100%;\r\n    }\r\n}\r\n\r\n@media (max-width: 600px) {\r\n    .headerNav_popup_close_button {\r\n        font-size: 1.5rem;\r\n        padding: 6px 12px;\r\n        border-radius: 20px;\r\n    }\r\n}","size_bytes":7244},"src/styles/globals.css":{"content":"/* Import Google Fonts */\r\n@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400;0,500;0,600;0,700;0,800;0,900;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');\r\n@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');\r\n@import url('https://fonts.googleapis.com/css2?family=Cormorant+Garamond:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap');\r\n@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');\r\n\r\n/* Reset and Base Styles */\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nhtml {\r\n    font-size: 16px;\r\n}\r\n\r\nbody {\r\n    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;\r\n    background-color: #000000;\r\n    color: #ffffff;\r\n    line-height: 1.6;\r\n    overflow-x: hidden;\r\n    opacity: 1;\r\n    visibility: visible;\r\n}\r\n\r\n.page-content {\r\n    opacity: 1;\r\n    visibility: visible;\r\n    min-height: 100vh;\r\n}\r\n\r\n/* CSS Variables for Design System */\r\n:root {\r\n    /* Black & White Color Palette - Bright and Clean */\r\n    --color-dark-charcoal: #000000;\r\n    /* Pure black background */\r\n    --color-warm-taupe: #D0B49F;\r\n    /* Warm taupe accent (project spec) */\r\n    --color-soft-beige: #E4D4C8;\r\n    /* Soft beige accent (project spec) */\r\n    --color-light-gray: #ffffff;\r\n    /* Pure white for maximum contrast */\r\n\r\n    /* Base Colors - Black & White theme */\r\n    --color-primary-bg: #000000;\r\n    --color-secondary-bg: #111111;\r\n    --color-tertiary-bg: #1a1a1a;\r\n    --color-quaternary-bg: #2a2a2a;\r\n    --color-card-bg: #000000;\r\n    --color-card-border: #333333;\r\n\r\n    /* Header specific variables - Black & White */\r\n    --color-primary: #ffffff;\r\n    --color-dark: #000000;\r\n    --transition: all 0.2s ease;\r\n    --animation-duration: 0.4s;\r\n    --border-radius: 5px;\r\n    --shadow: 2px 0 8px rgba(255, 255, 255, 0.1);\r\n\r\n    /* Accent Colors - Warm taupe with white */\r\n    --color-accent-primary: #D0B49F;\r\n    --color-accent-secondary: #E4D4C8;\r\n    --color-accent-tertiary: #ffffff;\r\n    --color-accent-hover: #DBC4A7;\r\n\r\n    /* Text Colors - White text on black backgrounds */\r\n    --color-text-primary: #ffffff;\r\n    --color-text-secondary: #e0e0e0;\r\n    --color-text-tertiary: #D0B49F;\r\n    --color-text-muted: #cccccc;\r\n    --color-text-accent: var(--color-accent-primary);\r\n\r\n    /* Interactive Elements - White and taupe borders */\r\n    --color-border: #333333;\r\n    --color-border-hover: #555555;\r\n    --color-border-active: var(--color-accent-primary);\r\n    --color-border-accent: #ffffff;\r\n\r\n    /* Gradients - Flat colors */\r\n    --gradient-primary: var(--color-primary-bg);\r\n    --gradient-accent: var(--color-accent-primary);\r\n\r\n    /* Flat Colors - No shadows */\r\n    --shadow-accent-sm: none;\r\n    --shadow-accent-md: none;\r\n    --shadow-accent-lg: none;\r\n    --shadow-accent-xl: none;\r\n\r\n    /* Font Families */\r\n    --font-heading: 'Playfair Display', Georgia, serif;\r\n    /* Elegant serif for headings */\r\n    --font-subheading: 'Cormorant Garamond', Georgia, serif;\r\n    /* Classic serif for subheadings */\r\n    --font-body: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;\r\n    /* Clean sans-serif for body */\r\n    --font-accent: 'Montserrat', Helvetica, Arial, sans-serif;\r\n    /* Modern sans-serif for buttons/labels */\r\n\r\n    /* Spacing */\r\n    --spacing-xs: 0.25rem;\r\n    --spacing-sm: 0.5rem;\r\n    --spacing-md: 1rem;\r\n    --spacing-lg: 1.5rem;\r\n    --spacing-xl: 2rem;\r\n    --spacing-2xl: 3rem;\r\n    --spacing-3xl: 4rem;\r\n\r\n    /* Typography */\r\n    --font-size-xs: 0.75rem;\r\n    --font-size-sm: 0.875rem;\r\n    --font-size-base: 1rem;\r\n    --font-size-lg: 1.125rem;\r\n    --font-size-xl: 1.25rem;\r\n    --font-size-2xl: 1.5rem;\r\n    --font-size-3xl: 1.875rem;\r\n    --font-size-4xl: 2.25rem;\r\n    --font-size-5xl: 3rem;\r\n\r\n    /* Enhanced Shadows - None */\r\n    --shadow-sm: none;\r\n    --shadow-md: none;\r\n    --shadow-lg: none;\r\n    --shadow-xl: none;\r\n\r\n    /* Enhanced Transitions */\r\n    --transition-fast: 0.15s cubic-bezier(0.4, 0, 0.2, 1);\r\n    --transition-normal: 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n    --transition-slow: 0.5s cubic-bezier(0.4, 0, 0.2, 1);\r\n    --transition-bounce: 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);\r\n\r\n    /* Enhanced Border Radius */\r\n    --radius-sm: 0.25rem;\r\n    --radius-md: 0.5rem;\r\n    --radius-lg: 0.75rem;\r\n    --radius-xl: 1rem;\r\n    --radius-2xl: 1.5rem;\r\n    --radius-full: 9999px;\r\n\r\n    /* Animation Durations */\r\n    --duration-fast: 200ms;\r\n    --duration-normal: 300ms;\r\n    --duration-slow: 500ms;\r\n    --duration-slower: 800ms;\r\n}\r\n\r\n/* Typography Classes */\r\n.font-heading {\r\n    font-family: var(--font-heading);\r\n}\r\n\r\n.font-subheading {\r\n    font-family: var(--font-subheading);\r\n}\r\n\r\n.font-body {\r\n    font-family: var(--font-body);\r\n}\r\n\r\n.font-accent {\r\n    font-family: var(--font-accent);\r\n}\r\n\r\n.text-xs {\r\n    font-size: var(--font-size-xs);\r\n}\r\n\r\n.text-sm {\r\n    font-size: var(--font-size-sm);\r\n}\r\n\r\n.text-base {\r\n    font-size: var(--font-size-base);\r\n}\r\n\r\n.text-lg {\r\n    font-size: var(--font-size-lg);\r\n}\r\n\r\n.text-xl {\r\n    font-size: var(--font-size-xl);\r\n}\r\n\r\n.text-2xl {\r\n    font-size: var(--font-size-2xl);\r\n}\r\n\r\n.text-3xl {\r\n    font-size: var(--font-size-3xl);\r\n}\r\n\r\n.text-4xl {\r\n    font-size: var(--font-size-4xl);\r\n}\r\n\r\n.text-5xl {\r\n    font-size: var(--font-size-5xl);\r\n}\r\n\r\n.text-primary {\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n.text-secondary {\r\n    color: var(--color-text-secondary);\r\n}\r\n\r\n.text-tertiary {\r\n    color: var(--color-text-tertiary);\r\n}\r\n\r\n.text-muted {\r\n    color: var(--color-text-muted);\r\n}\r\n\r\n.font-light {\r\n    font-weight: 300;\r\n}\r\n\r\n.font-normal {\r\n    font-weight: 400;\r\n}\r\n\r\n.font-medium {\r\n    font-weight: 500;\r\n}\r\n\r\n.font-semibold {\r\n    font-weight: 600;\r\n}\r\n\r\n.font-bold {\r\n    font-weight: 700;\r\n}\r\n\r\n/* Layout Classes */\r\n.container {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 var(--spacing-md);\r\n}\r\n\r\n.section {\r\n    padding: var(--spacing-3xl) 0;\r\n}\r\n\r\n.section-sm {\r\n    padding: var(--spacing-2xl) 0;\r\n}\r\n\r\n/* Flexbox Utilities */\r\n.flex {\r\n    display: flex;\r\n}\r\n\r\n.flex-col {\r\n    flex-direction: column;\r\n}\r\n\r\n.flex-row {\r\n    flex-direction: row;\r\n}\r\n\r\n.items-center {\r\n    align-items: center;\r\n}\r\n\r\n.items-start {\r\n    align-items: flex-start;\r\n}\r\n\r\n.items-end {\r\n    align-items: flex-end;\r\n}\r\n\r\n.justify-center {\r\n    justify-content: center;\r\n}\r\n\r\n.justify-between {\r\n    justify-content: space-between;\r\n}\r\n\r\n.justify-start {\r\n    justify-content: flex-start;\r\n}\r\n\r\n.justify-end {\r\n    justify-content: flex-end;\r\n}\r\n\r\n.gap-xs {\r\n    gap: var(--spacing-xs);\r\n}\r\n\r\n.gap-sm {\r\n    gap: var(--spacing-sm);\r\n}\r\n\r\n.gap-md {\r\n    gap: var(--spacing-md);\r\n}\r\n\r\n.gap-lg {\r\n    gap: var(--spacing-lg);\r\n}\r\n\r\n.gap-xl {\r\n    gap: var(--spacing-xl);\r\n}\r\n\r\n/* Grid Utilities */\r\n.grid {\r\n    display: grid;\r\n}\r\n\r\n.grid-cols-1 {\r\n    grid-template-columns: repeat(1, 1fr);\r\n}\r\n\r\n.grid-cols-2 {\r\n    grid-template-columns: repeat(2, 1fr);\r\n}\r\n\r\n.grid-cols-3 {\r\n    grid-template-columns: repeat(3, 1fr);\r\n}\r\n\r\n.grid-cols-4 {\r\n    grid-template-columns: repeat(4, 1fr);\r\n}\r\n\r\n/* Enhanced Button Styles with Accent Colors */\r\n.btn {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: var(--spacing-sm) var(--spacing-lg);\r\n    font-size: var(--font-size-base);\r\n    font-weight: 500;\r\n    text-decoration: none;\r\n    border-radius: var(--radius-md);\r\n    transition: all var(--transition-normal);\r\n    cursor: pointer;\r\n    border: 2px solid transparent;\r\n    min-height: 44px;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n\r\n.btn::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: -100%;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(255, 255, 255, 0.1);\r\n    opacity: 0;\r\n    transition: all var(--transition-normal);\r\n    z-index: -1;\r\n}\r\n\r\n.btn:hover::before {\r\n    left: 0;\r\n    opacity: 1;\r\n}\r\n\r\n.btn-primary {\r\n    background: var(--color-accent-primary);\r\n    color: #000000;\r\n    border-color: rgba(255, 255, 255, 0.3);\r\n    box-shadow: none;\r\n}\r\n\r\n.btn-primary:hover {\r\n    background: var(--color-accent-hover);\r\n    border-color: rgba(255, 255, 255, 0.5);\r\n    transform: translateY(-3px) scale(1.02);\r\n    box-shadow: none;\r\n}\r\n\r\n.btn-secondary {\r\n    background: rgba(255, 255, 255, 0.1);\r\n    color: #ffffff;\r\n    border-color: rgba(255, 255, 255, 0.3);\r\n    box-shadow: none;\r\n}\r\n\r\n.btn-secondary:hover {\r\n    background: var(--color-accent-primary);\r\n    color: #000000;\r\n    border-color: rgba(255, 255, 255, 0.5);\r\n    transform: translateY(-3px) scale(1.02);\r\n    box-shadow: none;\r\n}\r\n\r\n.btn-accent {\r\n    background: transparent;\r\n    color: var(--color-text-primary);\r\n    border-color: var(--color-text-primary);\r\n    position: relative;\r\n}\r\n\r\n.btn-accent::after {\r\n    content: '';\r\n    position: absolute;\r\n    inset: 0;\r\n    border-radius: inherit;\r\n    padding: 2px;\r\n    background: var(--gradient-accent);\r\n    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);\r\n    mask-composite: exclude;\r\n    opacity: 0;\r\n    transition: opacity var(--transition-normal);\r\n}\r\n\r\n.btn-accent:hover {\r\n    color: var(--color-accent-primary);\r\n    transform: translateY(-3px) scale(1.02);\r\n}\r\n\r\n.btn-accent:hover::after {\r\n    opacity: 1;\r\n}\r\n\r\n.btn-lg {\r\n    padding: var(--spacing-md) var(--spacing-xl);\r\n    font-size: var(--font-size-lg);\r\n    min-height: 52px;\r\n}\r\n\r\n.btn-sm {\r\n    padding: var(--spacing-xs) var(--spacing-md);\r\n    font-size: var(--font-size-sm);\r\n    min-height: 36px;\r\n}\r\n\r\n/* Enhanced Card Styles with Animations */\r\n.card {\r\n    background: var(--color-card-bg);\r\n    border: 1px solid rgba(255, 255, 255, 0.1);\r\n    border-radius: 20px;\r\n    padding: var(--spacing-xl);\r\n    transition: all var(--transition-normal);\r\n    position: relative;\r\n    overflow: hidden;\r\n    cursor: pointer;\r\n    box-shadow: none;\r\n}\r\n\r\n.card::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: transparent;\r\n    opacity: 0;\r\n    transition: opacity var(--transition-normal);\r\n    pointer-events: none;\r\n}\r\n\r\n.card:hover {\r\n    border-color: rgba(255, 255, 255, 0.2);\r\n    border-radius: 25px;\r\n    transform: translateY(-8px) scale(1.02);\r\n    box-shadow: none;\r\n}\r\n\r\n.card:hover::before {\r\n    opacity: 0;\r\n}\r\n\r\n.card-interactive {\r\n    background: var(--color-card-bg);\r\n    border: 2px solid rgba(255, 255, 255, 0.1);\r\n    background-clip: padding-box;\r\n    border-radius: 20px;\r\n    box-shadow: none;\r\n}\r\n\r\n.card-interactive::after {\r\n    content: '';\r\n    position: absolute;\r\n    inset: 0;\r\n    border-radius: inherit;\r\n    padding: 2px;\r\n    background: var(--gradient-accent);\r\n    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);\r\n    mask-composite: exclude;\r\n    opacity: 0;\r\n    transition: all var(--transition-bounce);\r\n}\r\n\r\n.card-interactive:hover {\r\n    transform: translateY(-12px) scale(1.05);\r\n    border-radius: 25px;\r\n    border-color: rgba(255, 255, 255, 0.2);\r\n    box-shadow: none;\r\n}\r\n\r\n.card-interactive:hover::after {\r\n    opacity: 1;\r\n}\r\n\r\n/* Input Styles */\r\n.input {\r\n    width: 100%;\r\n    padding: var(--spacing-sm) var(--spacing-md);\r\n    background: var(--color-tertiary-bg);\r\n    border: 1px solid rgba(255, 255, 255, 0.1);\r\n    border-radius: 12px;\r\n    color: var(--color-text-primary);\r\n    font-size: var(--font-size-base);\r\n    transition: all var(--transition-normal);\r\n    box-shadow: none;\r\n}\r\n\r\n.input:focus {\r\n    outline: none;\r\n    border-color: rgba(255, 255, 255, 0.3);\r\n    border-width: 2px;\r\n    box-shadow: none;\r\n}\r\n\r\n.input::placeholder {\r\n    color: var(--color-text-muted);\r\n}\r\n\r\n\r\n\r\n/* Loading Animation */\r\n@keyframes fadeIn {\r\n    from {\r\n        opacity: 0;\r\n        transform: translateY(20px);\r\n    }\r\n\r\n    to {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n    }\r\n}\r\n\r\n@keyframes fadeInUp {\r\n    from {\r\n        opacity: 0;\r\n        transform: translateY(60px);\r\n    }\r\n\r\n    to {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n    }\r\n}\r\n\r\n@keyframes fadeInLeft {\r\n    from {\r\n        opacity: 0;\r\n        transform: translateX(-60px);\r\n    }\r\n\r\n    to {\r\n        opacity: 1;\r\n        transform: translateX(0);\r\n    }\r\n}\r\n\r\n@keyframes fadeInRight {\r\n    from {\r\n        opacity: 0;\r\n        transform: translateX(60px);\r\n    }\r\n\r\n    to {\r\n        opacity: 1;\r\n        transform: translateX(0);\r\n    }\r\n}\r\n\r\n@keyframes scaleIn {\r\n    from {\r\n        opacity: 0;\r\n        transform: scale(0.8);\r\n    }\r\n\r\n    to {\r\n        opacity: 1;\r\n        transform: scale(1);\r\n    }\r\n}\r\n\r\n@keyframes slideInDown {\r\n    from {\r\n        opacity: 0;\r\n        transform: translateY(-100%);\r\n    }\r\n\r\n    to {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n    }\r\n}\r\n\r\n/* Removed glow pulse animation to eliminate yellow glow effect */\r\n\r\n@keyframes borderFlow {\r\n    0% {\r\n        border-image-source: linear-gradient(90deg, var(--color-accent-primary) 0%, transparent 50%, transparent 100%);\r\n    }\r\n\r\n    50% {\r\n        border-image-source: linear-gradient(90deg, transparent 0%, var(--color-accent-primary) 50%, transparent 100%);\r\n    }\r\n\r\n    100% {\r\n        border-image-source: linear-gradient(90deg, transparent 0%, transparent 50%, var(--color-accent-primary) 100%);\r\n    }\r\n}\r\n\r\n/* Animation Classes */\r\n.fade-in {\r\n    animation: fadeIn 0.6s ease-out;\r\n}\r\n\r\n.fade-in-up {\r\n    animation: fadeInUp 0.8s ease-out;\r\n}\r\n\r\n.fade-in-left {\r\n    animation: fadeInLeft 0.8s ease-out;\r\n}\r\n\r\n.fade-in-right {\r\n    animation: fadeInRight 0.8s ease-out;\r\n}\r\n\r\n.scale-in {\r\n    animation: scaleIn 0.6s ease-out;\r\n}\r\n\r\n.slide-in-down {\r\n    animation: slideInDown 0.8s ease-out;\r\n}\r\n\r\n/* Removed glow pulse class */\r\n\r\n/* Hover Effect Classes */\r\n.hover-lift {\r\n    transition: all var(--transition-normal);\r\n}\r\n\r\n.hover-lift:hover {\r\n    transform: translateY(-8px);\r\n}\r\n\r\n.hover-glow {\r\n    transition: all var(--transition-normal);\r\n}\r\n\r\n.hover-glow:hover {\r\n    border-color: var(--color-accent-primary);\r\n}\r\n\r\n.hover-scale {\r\n    transition: all var(--transition-bounce);\r\n}\r\n\r\n.hover-scale:hover {\r\n    transform: scale(1.05);\r\n}\r\n\r\n.hover-border-flow {\r\n    border: 2px solid transparent;\r\n    border-image: linear-gradient(90deg, var(--color-accent-primary) 0%, transparent 50%, transparent 100%) 1;\r\n    transition: all var(--transition-normal);\r\n}\r\n\r\n.hover-border-flow:hover {\r\n    animation: borderFlow 1.5s ease-in-out infinite;\r\n    border-radius: var(--radius-xl);\r\n}\r\n\r\n/* Interactive Elements */\r\n.interactive-box {\r\n    position: relative;\r\n    padding: var(--spacing-xl);\r\n    border: 2px solid rgba(255, 255, 255, 0.1);\r\n    border-radius: 20px;\r\n    background: linear-gradient(145deg, var(--color-card-bg) 0%, var(--color-tertiary-bg) 100%);\r\n    cursor: pointer;\r\n    transition: all var(--transition-normal);\r\n    overflow: hidden;\r\n    box-shadow: var(--shadow-md);\r\n}\r\n\r\n.interactive-box::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: -50%;\r\n    left: -50%;\r\n    width: 200%;\r\n    height: 200%;\r\n    background: transparent;\r\n    opacity: 0;\r\n    transition: all var(--transition-slow);\r\n    transform: scale(0);\r\n}\r\n\r\n.interactive-box:hover {\r\n    border-color: rgba(255, 255, 255, 0.2);\r\n    border-radius: 25px;\r\n    transform: translateY(-5px) scale(1.02);\r\n    box-shadow: var(--shadow-lg);\r\n}\r\n\r\n.interactive-box:hover::before {\r\n    opacity: 0;\r\n    transform: scale(0);\r\n}\r\n\r\n/* Claymorphism Effect - No glow */\r\n.glass {\r\n    background: linear-gradient(145deg, rgba(0, 0, 0, 0.8) 0%, rgba(26, 26, 26, 0.6) 100%);\r\n    backdrop-filter: blur(10px);\r\n    border: 1px solid rgba(255, 255, 255, 0.1);\r\n    border-radius: 20px;\r\n    box-shadow: var(--shadow-md);\r\n}\r\n\r\n\r\n\r\n/* Enhanced Gradient Text - Black & White theme */\r\n.gradient-text {\r\n    background: linear-gradient(135deg, #ffffff 0%, #e0e0e0 100%);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    background-clip: text;\r\n}\r\n\r\n.gradient-text-accent {\r\n    background: var(--gradient-accent);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    background-clip: text;\r\n}\r\n\r\n/* Responsive Design */\r\n@media (max-width: 768px) {\r\n    .container {\r\n        padding: 0 var(--spacing-sm);\r\n    }\r\n\r\n    .section {\r\n        padding: var(--spacing-2xl) 0;\r\n    }\r\n\r\n    .grid-cols-2 {\r\n        grid-template-columns: 1fr;\r\n    }\r\n\r\n    .grid-cols-3 {\r\n        grid-template-columns: 1fr;\r\n    }\r\n\r\n    .grid-cols-4 {\r\n        grid-template-columns: repeat(2, 1fr);\r\n    }\r\n\r\n    .text-5xl {\r\n        font-size: var(--font-size-4xl);\r\n    }\r\n\r\n    .text-4xl {\r\n        font-size: var(--font-size-3xl);\r\n    }\r\n\r\n    .text-3xl {\r\n        font-size: var(--font-size-2xl);\r\n    }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n    .grid-cols-4 {\r\n        grid-template-columns: 1fr;\r\n    }\r\n\r\n    .btn-lg {\r\n        padding: var(--spacing-sm) var(--spacing-lg);\r\n        font-size: var(--font-size-base);\r\n    }\r\n}\r\n\r\n/* Accessibility */\r\n@media (prefers-reduced-motion: reduce) {\r\n    * {\r\n        animation-duration: 0.01ms !important;\r\n        animation-iteration-count: 1 !important;\r\n        transition-duration: 0.01ms !important;\r\n    }\r\n}\r\n\r\n/* Focus Styles for Keyboard Navigation - Removed */\r\n*:focus {\r\n    outline: none;\r\n}\r\n\r\n.btn:focus {\r\n    outline: none;\r\n}\r\n\r\n/* Remove all focus outlines and borders */\r\nbutton:focus,\r\ninput:focus,\r\na:focus,\r\n*:focus {\r\n    outline: none !important;\r\n    box-shadow: none !important;\r\n}\r\n\r\n/* Remove active state borders */\r\nbutton:active,\r\ninput:active,\r\na:active,\r\n*:active {\r\n    outline: none !important;\r\n    box-shadow: none !important;\r\n}\r\n\r\n/* Remove webkit focus rings */\r\nbutton:focus-visible,\r\ninput:focus-visible,\r\na:focus-visible,\r\n*:focus-visible {\r\n    outline: none !important;\r\n}\r\n\r\n/* Remove tap highlights on mobile */\r\n* {\r\n    -webkit-tap-highlight-color: transparent;\r\n    -webkit-focus-ring-color: transparent;\r\n    -webkit-appearance: none;\r\n}\r\n\r\n/* Ensure buttons don't retain focus styles */\r\nbutton,\r\n.btn,\r\n[role=\"button\"] {\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    user-select: none;\r\n}\r\n\r\nbutton::-moz-focus-inner,\r\ninput::-moz-focus-inner {\r\n    border: 0;\r\n    padding: 0;\r\n}\r\n\r\n/* Custom Scrollbar - Dark theme */\r\n::-webkit-scrollbar {\r\n    width: 8px;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n    background: var(--color-secondary-bg);\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n    background: var(--color-accent-primary);\r\n    border-radius: var(--radius-full);\r\n}\r\n\r\n::-webkit-scrollbar-thumb:hover {\r\n    background: var(--color-accent-hover);\r\n}","size_bytes":18863},"src/app/admin/certificates/Certificates.module.css":{"content":".certificatesPage {\n    padding: 24px;\n    max-width: 1400px;\n    margin: 0 auto;\n    background: transparent;\n}\n\n.loading {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 60vh;\n    font-size: 1.2rem;\n    color: #D0B49F;\n    font-weight: 600;\n}\n\n.header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 32px;\n    padding: 24px 0;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.title {\n    font-size: 2.5rem;\n    font-weight: 800;\n    color: #ffffff;\n    background: linear-gradient(135deg, #ffffff 0%, #D0B49F 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n}\n\n.headerActions {\n    display: flex;\n    gap: 16px;\n    align-items: center;\n}\n\n.headerActions .btn {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    padding: 12px 24px;\n    border-radius: 12px;\n    font-weight: 600;\n    transition: all 0.3s ease;\n}\n\n.headerActions .btn i {\n    font-size: 1.1rem;\n}\n\n.filters {\n    display: flex;\n    gap: 20px;\n    margin-bottom: 32px;\n    padding: 20px;\n    background: rgba(255, 255, 255, 0.05);\n    backdrop-filter: blur(20px);\n    border-radius: 16px;\n    border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.searchBox {\n    flex: 1;\n    max-width: 400px;\n}\n\n.searchBox .input {\n    width: 100%;\n    padding: 12px 16px;\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    border-radius: 12px;\n    background: rgba(255, 255, 255, 0.08);\n    color: #ffffff;\n    font-size: 1rem;\n    transition: all 0.3s ease;\n}\n\n.searchBox .input:focus {\n    outline: none;\n    border-color: #D0B49F;\n    background: rgba(255, 255, 255, 0.12);\n    box-shadow: 0 0 0 3px rgba(208, 180, 159, 0.2);\n}\n\n.statusFilter {\n    padding: 12px 16px;\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    border-radius: 12px;\n    background: rgba(255, 255, 255, 0.08);\n    color: #ffffff;\n    font-size: 1rem;\n    font-weight: 500;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    min-width: 150px;\n}\n\n.statusFilter:focus {\n    outline: none;\n    border-color: #D0B49F;\n    background: rgba(255, 255, 255, 0.12);\n}\n\n.certificatesList {\n    display: grid;\n    gap: 20px;\n}\n\n.certificateCard {\n    background: rgba(255, 255, 255, 0.05);\n    backdrop-filter: blur(20px);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    border-radius: 16px;\n    padding: 24px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    transition: all 0.3s ease;\n    position: relative;\n    overflow: hidden;\n}\n\n.certificateCard::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 1px;\n    background: linear-gradient(90deg, transparent, rgba(208, 180, 159, 0.5), transparent);\n}\n\n.certificateCard:hover {\n    transform: translateY(-4px);\n    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.3);\n    border-color: rgba(208, 180, 159, 0.3);\n}\n\n.certificateInfo {\n    flex: 1;\n}\n\n.studentName {\n    font-size: 1.3rem;\n    font-weight: 700;\n    color: #ffffff;\n    margin-bottom: 8px;\n    display: block;\n}\n\n.courseInfo,\n.completionInfo,\n.generatedInfo {\n    color: rgba(255, 255, 255, 0.7);\n    margin-bottom: 6px;\n    font-size: 0.95rem;\n}\n\n.courseInfo strong,\n.completionInfo strong,\n.generatedInfo strong {\n    color: #D0B49F;\n    font-weight: 600;\n}\n\n.status {\n    display: inline-block;\n    padding: 6px 12px;\n    border-radius: 20px;\n    font-size: 0.8rem;\n    font-weight: 600;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n    margin-top: 8px;\n}\n\n.status.issued {\n    background: rgba(34, 197, 94, 0.2);\n    color: #22c55e;\n    border: 1px solid rgba(34, 197, 94, 0.3);\n}\n\n.status.pending {\n    background: rgba(251, 191, 36, 0.2);\n    color: #fbbf24;\n    border: 1px solid rgba(251, 191, 36, 0.3);\n}\n\n.status.revoked {\n    background: rgba(239, 68, 68, 0.2);\n    color: #ef4444;\n    border: 1px solid rgba(239, 68, 68, 0.3);\n}\n\n.actions {\n    display: flex;\n    gap: 12px;\n    align-items: center;\n}\n\n.actions .btn {\n    padding: 8px 16px;\n    border-radius: 8px;\n    font-size: 0.9rem;\n    font-weight: 600;\n    transition: all 0.3s ease;\n}\n\n.noCertificates {\n    text-align: center;\n    padding: 60px 20px;\n    color: rgba(255, 255, 255, 0.6);\n    font-size: 1.1rem;\n}\n\n/* Modal Styles */\n.modal {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.8);\n    backdrop-filter: blur(10px);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 9999;\n    padding: 20px;\n}\n\n.modalContent {\n    background: rgba(20, 20, 20, 0.98);\n    backdrop-filter: blur(20px);\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 20px;\n    max-width: 600px;\n    width: 100%;\n    max-height: 90vh;\n    overflow-y: auto;\n    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);\n}\n\n.modalHeader {\n    padding: 24px 24px 16px 24px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.modalHeader h2 {\n    font-size: 1.5rem;\n    font-weight: 700;\n    color: #ffffff;\n    margin: 0;\n}\n\n.closeBtn {\n    background: rgba(255, 255, 255, 0.1);\n    border: none;\n    color: #ffffff;\n    font-size: 1.5rem;\n    cursor: pointer;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all 0.3s ease;\n}\n\n.closeBtn:hover {\n    background: rgba(239, 68, 68, 0.2);\n    color: #ef4444;\n}\n\n.modalBody {\n    padding: 24px;\n}\n\n.formGroup {\n    margin-bottom: 20px;\n}\n\n.formGroup label {\n    display: block;\n    margin-bottom: 8px;\n    font-weight: 600;\n    color: #ffffff;\n}\n\n.formGroup .input,\n.formGroup select {\n    width: 100%;\n    padding: 12px 16px;\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    border-radius: 12px;\n    background: rgba(255, 255, 255, 0.08);\n    color: #ffffff;\n    font-size: 1rem;\n    transition: all 0.3s ease;\n}\n\n.formGroup .input:focus,\n.formGroup select:focus {\n    outline: none;\n    border-color: #D0B49F;\n    background: rgba(255, 255, 255, 0.12);\n    box-shadow: 0 0 0 3px rgba(208, 180, 159, 0.2);\n}\n\n.studentPreview {\n    background: rgba(255, 255, 255, 0.05);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    border-radius: 12px;\n    padding: 20px;\n    margin-top: 16px;\n}\n\n.studentPreview h4 {\n    color: #D0B49F;\n    font-size: 1.1rem;\n    font-weight: 600;\n    margin-bottom: 12px;\n}\n\n.previewInfo p {\n    color: rgba(255, 255, 255, 0.8);\n    margin-bottom: 8px;\n    font-size: 0.95rem;\n}\n\n.previewInfo strong {\n    color: #ffffff;\n    font-weight: 600;\n}\n\n.fileNote {\n    color: rgba(255, 255, 255, 0.6);\n    font-size: 0.85rem;\n    margin-top: 6px;\n    display: block;\n}\n\n.filePreview {\n    background: rgba(208, 180, 159, 0.1);\n    border: 1px solid rgba(208, 180, 159, 0.2);\n    border-radius: 12px;\n    padding: 20px;\n    margin-top: 16px;\n}\n\n.filePreview h4 {\n    color: #D0B49F;\n    font-size: 1.1rem;\n    font-weight: 600;\n    margin-bottom: 12px;\n}\n\n.fileInfo p {\n    color: rgba(255, 255, 255, 0.8);\n    margin-bottom: 8px;\n    font-size: 0.95rem;\n}\n\n.fileInfo strong {\n    color: #D0B49F;\n    font-weight: 600;\n}\n\n.formGroup input[type=\"file\"] {\n    padding: 16px;\n    border: 2px dashed rgba(208, 180, 159, 0.3);\n    border-radius: 12px;\n    background: rgba(255, 255, 255, 0.02);\n    color: #ffffff;\n    font-size: 1rem;\n    transition: all 0.3s ease;\n    cursor: pointer;\n}\n\n.formGroup input[type=\"file\"]:hover {\n    border-color: rgba(208, 180, 159, 0.5);\n    background: rgba(255, 255, 255, 0.05);\n}\n\n.formGroup input[type=\"file\"]:focus {\n    outline: none;\n    border-color: #D0B49F;\n    background: rgba(255, 255, 255, 0.08);\n    box-shadow: 0 0 0 3px rgba(208, 180, 159, 0.2);\n}\n\n/* Enhanced File Upload Area */\n.fileUploadArea {\n    position: relative;\n    width: 100%;\n}\n\n.fileInput {\n    position: absolute;\n    opacity: 0;\n    width: 100%;\n    height: 100%;\n    cursor: pointer;\n    z-index: 2;\n}\n\n.fileUploadLabel {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 40px 20px;\n    border: 2px dashed rgba(208, 180, 159, 0.3);\n    border-radius: 16px;\n    background: rgba(255, 255, 255, 0.02);\n    cursor: pointer;\n    transition: all 0.3s ease;\n    min-height: 120px;\n}\n\n.fileUploadLabel:hover {\n    border-color: rgba(208, 180, 159, 0.5);\n    background: rgba(255, 255, 255, 0.05);\n    transform: translateY(-2px);\n}\n\n.uploadIcon {\n    font-size: 3rem;\n    color: #D0B49F;\n    margin-bottom: 16px;\n    transition: all 0.3s ease;\n}\n\n.fileUploadLabel:hover .uploadIcon {\n    transform: scale(1.1);\n    color: #E6D3B7;\n}\n\n.uploadText {\n    text-align: center;\n}\n\n.uploadTitle {\n    display: block;\n    font-size: 1.1rem;\n    font-weight: 600;\n    color: #ffffff;\n    margin-bottom: 4px;\n}\n\n.uploadSubtitle {\n    display: block;\n    font-size: 0.9rem;\n    color: rgba(255, 255, 255, 0.6);\n}\n\n/* When file is selected */\n.fileUploadArea:has(.fileInput[value]) .fileUploadLabel {\n    border-color: rgba(34, 197, 94, 0.5);\n    background: rgba(34, 197, 94, 0.1);\n}\n\n.fileUploadArea:has(.fileInput[value]) .uploadIcon {\n    color: #22c55e;\n}\n\n.fileUploadArea:has(.fileInput[value]) .uploadTitle {\n    color: #22c55e;\n}\n\n/* Drag and drop states */\n.fileUploadArea.dragOver .fileUploadLabel {\n    border-color: #D0B49F;\n    background: rgba(208, 180, 159, 0.1);\n    transform: scale(1.02);\n}\n\n.fileUploadArea.dragOver .uploadIcon {\n    color: #D0B49F;\n    transform: scale(1.2);\n}\n\n.fileUploadArea.dragOver .uploadTitle {\n    color: #D0B49F;\n}\n\n.formActions {\n    padding: 16px 24px 24px 24px;\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n    display: flex;\n    gap: 12px;\n    justify-content: flex-end;\n}\n\n.formActions .btn {\n    padding: 12px 24px;\n    border-radius: 12px;\n    font-weight: 600;\n    transition: all 0.3s ease;\n}\n\n/* Mobile Responsiveness */\n@media (max-width: 768px) {\n    .certificatesPage {\n        padding: 16px;\n    }\n\n    .header {\n        flex-direction: column;\n        gap: 16px;\n        align-items: flex-start;\n    }\n\n    .title {\n        font-size: 2rem;\n    }\n\n    .filters {\n        flex-direction: column;\n        gap: 16px;\n    }\n\n    .searchBox {\n        max-width: 100%;\n    }\n\n    .certificateCard {\n        flex-direction: column;\n        gap: 16px;\n        align-items: flex-start;\n        padding: 20px;\n    }\n\n    .actions {\n        width: 100%;\n        justify-content: flex-start;\n    }\n\n    .modalContent {\n        margin: 10px;\n        max-width: calc(100% - 20px);\n    }\n\n    .formActions {\n        flex-direction: column;\n    }\n\n    .formActions .btn {\n        width: 100%;\n    }\n}\n\n.uploadMessage {\n  padding: 16px 20px;\n  border-radius: 12px;\n  margin-bottom: 24px;\n  font-weight: 500;\n  animation: slideIn 0.3s ease;\n}\n\n.uploadMessage.success {\n  background: rgba(34, 197, 94, 0.1);\n  border: 1px solid rgba(34, 197, 94, 0.3);\n  color: #22c55e;\n}\n\n.uploadMessage.error {\n  background: rgba(239, 68, 68, 0.1);\n  border: 1px solid rgba(239, 68, 68, 0.3);\n  color: #ef4444;\n}\n\n@keyframes slideIn {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}","size_bytes":11262},"src/app/admin/courses/page.tsx":{"content":"\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport AdminLayout from \"../../../components/layout/AdminLayout\";\nimport styles from \"./Courses.module.css\";\n\ninterface Course {\n  id: string;\n  title: string;\n  description: string;\n  duration: string;\n  price: number;\n  maxStudents: number;\n  currentStudents: number;\n  status: \"active\" | \"draft\" | \"archived\";\n  instructor: string;\n  modules: number;\n}\n\nexport default function CoursesPage() {\n  const [courses, setCourses] = useState<Course[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [editingCourse, setEditingCourse] = useState<Course | null>(null);\n  const [newCourse, setNewCourse] = useState({\n    title: \"\",\n    description: \"\",\n    duration: \"\",\n    price: \"\",\n    maxStudents: \"\",\n    instructor: \"\",\n  });\n  const [editCourse, setEditCourse] = useState({\n    title: \"\",\n    description: \"\",\n    duration: \"\",\n    price: \"\",\n    maxStudents: \"\",\n    instructor: \"\",\n  });\n  const router = useRouter();\n\n  useEffect(() => {\n    const adminSession = localStorage.getItem(\"admin_session\");\n    if (!adminSession) {\n      router.push(\"/admin/login\");\n      return;\n    }\n    fetchCourses();\n  }, []);\n\n  const fetchCourses = async () => {\n    try {\n      const response = await fetch(\"/api/admin/courses\");\n      const data = await response.json();\n      if (response.ok) {\n        setCourses(data.courses);\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch courses:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleAddCourse = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"/api/admin/courses\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          ...newCourse,\n          price: parseFloat(newCourse.price),\n          maxStudents: parseInt(newCourse.maxStudents),\n        }),\n      });\n\n      if (response.ok) {\n        setShowAddForm(false);\n        setNewCourse({\n          title: \"\",\n          description: \"\",\n          duration: \"\",\n          price: \"\",\n          maxStudents: \"\",\n          instructor: \"\",\n        });\n        fetchCourses();\n        alert(\"Course created successfully!\");\n      } else {\n        const data = await response.json();\n        alert(data.error || \"Failed to create course\");\n      }\n    } catch (error) {\n      alert(\"Error creating course\");\n    }\n  };\n\n  const handleEditCourse = (course: Course) => {\n    setEditingCourse(course);\n    setEditCourse({\n      title: course.title,\n      description: course.description,\n      duration: course.duration,\n      price: course.price.toString(),\n      maxStudents: course.maxStudents.toString(),\n      instructor: course.instructor,\n    });\n    setShowEditForm(true);\n  };\n\n  const handleUpdateCourse = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!editingCourse) return;\n\n    try {\n      const response = await fetch(`/api/admin/courses/${editingCourse.id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          ...editCourse,\n          price: parseFloat(editCourse.price),\n          maxStudents: parseInt(editCourse.maxStudents),\n        }),\n      });\n\n      if (response.ok) {\n        setShowEditForm(false);\n        setEditingCourse(null);\n        setEditCourse({\n          title: \"\",\n          description: \"\",\n          duration: \"\",\n          price: \"\",\n          maxStudents: \"\",\n          instructor: \"\",\n        });\n        fetchCourses();\n        alert(\"Course updated successfully!\");\n      } else {\n        const data = await response.json();\n        alert(data.error || \"Failed to update course\");\n      }\n    } catch (error) {\n      alert(\"Error updating course\");\n    }\n  };\n\n  const handleDeleteCourse = async (courseId: string) => {\n    if (confirm(\"Are you sure you want to delete this course?\")) {\n      try {\n        const response = await fetch(`/api/admin/courses/${courseId}`, {\n          method: \"DELETE\",\n        });\n        if (response.ok) {\n          fetchCourses();\n          alert(\"Course deleted successfully!\");\n        }\n      } catch (error) {\n        alert(\"Error deleting course\");\n      }\n    }\n  };\n\n  const toggleCourseStatus = async (\n    courseId: string,\n    currentStatus: string\n  ) => {\n    const newStatus = currentStatus === \"active\" ? \"draft\" : \"active\";\n    try {\n      const response = await fetch(`/api/admin/courses/${courseId}`, {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ status: newStatus }),\n      });\n      if (response.ok) {\n        fetchCourses();\n      }\n    } catch (error) {\n      alert(\"Error updating course status\");\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <AdminLayout>\n        <div className={styles.loading}>Loading courses...</div>\n      </AdminLayout>\n    );\n  }\n\n  return (\n    <AdminLayout>\n      <div className={styles.coursesPage}>\n        <div className={styles.header}>\n          <h1 className={styles.title}>Courses Management</h1>\n          <button\n            onClick={() => setShowAddForm(true)}\n            className=\"btn btn-primary\"\n          >\n            Create New Course\n          </button>\n        </div>\n\n        {/* Courses Grid */}\n        <div className={styles.coursesGrid}>\n          {courses.map((course) => (\n            <div key={course.id} className={`card ${styles.courseCard}`}>\n              <div className={styles.courseHeader}>\n                <h3 className={styles.courseTitle}>{course.title}</h3>\n                <span className={`${styles.status} ${styles[course.status]}`}>\n                  {course.status}\n                </span>\n              </div>\n\n              <p className={styles.courseDescription}>{course.description}</p>\n\n              <div className={styles.courseDetails}>\n                <div className={styles.detailItem}>\n                  <span className={styles.detailLabel}>Duration:</span>\n                  <span className={styles.detailValue}>{course.duration}</span>\n                </div>\n                <div className={styles.detailItem}>\n                  <span className={styles.detailLabel}>Price:</span>\n                  <span className={styles.detailValue}>${course.price}</span>\n                </div>\n                <div className={styles.detailItem}>\n                  <span className={styles.detailLabel}>Students:</span>\n                  <span className={styles.detailValue}>\n                    {course.currentStudents}/{course.maxStudents}\n                  </span>\n                </div>\n                <div className={styles.detailItem}>\n                  <span className={styles.detailLabel}>Instructor:</span>\n                  <span className={styles.detailValue}>\n                    {course.instructor}\n                  </span>\n                </div>\n                <div className={styles.detailItem}>\n                  <span className={styles.detailLabel}>Modules:</span>\n                  <span className={styles.detailValue}>{course.modules}</span>\n                </div>\n              </div>\n\n              <div className={styles.courseActions}>\n                <button\n                  className={`btn btn-secondary btn-sm`}\n                  onClick={() => handleEditCourse(course)}\n                >\n                  Edit\n                </button>\n                <button\n                  className={`btn ${\n                    course.status === \"active\" ? \"btn-secondary\" : \"btn-primary\"\n                  } btn-sm`}\n                  onClick={() => toggleCourseStatus(course.id, course.status)}\n                >\n                  {course.status === \"active\" ? \"Deactivate\" : \"Activate\"}\n                </button>\n                <button\n                  className={`btn ${styles.deleteBtn} btn-sm`}\n                  onClick={() => handleDeleteCourse(course.id)}\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Add Course Modal */}\n        {showAddForm && (\n          <div className={styles.modal}>\n            <div className={styles.modalContent}>\n              <div className={styles.modalHeader}>\n                <h2>Create New Course</h2>\n                <button\n                  onClick={() => setShowAddForm(false)}\n                  className={styles.closeBtn}\n                >\n                  ×\n                </button>\n              </div>\n\n              <form onSubmit={handleAddCourse} className={styles.form}>\n                <div className={styles.formGroup}>\n                  <label>Course Title</label>\n                  <input\n                    type=\"text\"\n                    value={newCourse.title}\n                    onChange={(e) =>\n                      setNewCourse({ ...newCourse, title: e.target.value })\n                    }\n                    required\n                    className=\"input\"\n                    placeholder=\"Enter course title\"\n                  />\n                </div>\n\n                <div className={styles.formGroup}>\n                  <label>Description</label>\n                  <textarea\n                    value={newCourse.description}\n                    onChange={(e) =>\n                      setNewCourse({\n                        ...newCourse,\n                        description: e.target.value,\n                      })\n                    }\n                    required\n                    className={`input ${styles.textarea}`}\n                    placeholder=\"Enter course description\"\n                    rows={4}\n                  />\n                </div>\n\n                <div className={styles.formRow}>\n                  <div className={styles.formGroup}>\n                    <label>Duration</label>\n                    <input\n                      type=\"text\"\n                      value={newCourse.duration}\n                      onChange={(e) =>\n                        setNewCourse({ ...newCourse, duration: e.target.value })\n                      }\n                      required\n                      className=\"input\"\n                      placeholder=\"e.g., 8 weeks\"\n                    />\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Price ($)</label>\n                    <input\n                      type=\"number\"\n                      value={newCourse.price}\n                      onChange={(e) =>\n                        setNewCourse({ ...newCourse, price: e.target.value })\n                      }\n                      required\n                      className=\"input\"\n                      placeholder=\"Course price\"\n                      min=\"0\"\n                      step=\"0.01\"\n                    />\n                  </div>\n                </div>\n\n                <div className={styles.formRow}>\n                  <div className={styles.formGroup}>\n                    <label>Max Students</label>\n                    <input\n                      type=\"number\"\n                      value={newCourse.maxStudents}\n                      onChange={(e) =>\n                        setNewCourse({\n                          ...newCourse,\n                          maxStudents: e.target.value,\n                        })\n                      }\n                      required\n                      className=\"input\"\n                      placeholder=\"Maximum students\"\n                      min=\"1\"\n                    />\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Instructor</label>\n                    <input\n                      type=\"text\"\n                      value={newCourse.instructor}\n                      onChange={(e) =>\n                        setNewCourse({\n                          ...newCourse,\n                          instructor: e.target.value,\n                        })\n                      }\n                      required\n                      className=\"input\"\n                      placeholder=\"Instructor name\"\n                    />\n                  </div>\n                </div>\n\n                <div className={styles.formActions}>\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowAddForm(false)}\n                    className=\"btn btn-secondary\"\n                  >\n                    Cancel\n                  </button>\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Create Course\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n\n        {/* Edit Course Modal */}\n        {showEditForm && editingCourse && (\n          <div className={styles.modal}>\n            <div className={styles.modalContent}>\n              <div className={styles.modalHeader}>\n                <h2>Edit Course</h2>\n                <button\n                  onClick={() => {\n                    setShowEditForm(false);\n                    setEditingCourse(null);\n                  }}\n                  className={styles.closeBtn}\n                >\n                  ×\n                </button>\n              </div>\n\n              <form onSubmit={handleUpdateCourse} className={styles.form}>\n                <div className={styles.formGroup}>\n                  <label>Course Title</label>\n                  <input\n                    type=\"text\"\n                    value={editCourse.title}\n                    onChange={(e) =>\n                      setEditCourse({ ...editCourse, title: e.target.value })\n                    }\n                    required\n                    className=\"input\"\n                    placeholder=\"Enter course title\"\n                  />\n                </div>\n\n                <div className={styles.formGroup}>\n                  <label>Description</label>\n                  <textarea\n                    value={editCourse.description}\n                    onChange={(e) =>\n                      setEditCourse({\n                        ...editCourse,\n                        description: e.target.value,\n                      })\n                    }\n                    required\n                    className={`input ${styles.textarea}`}\n                    placeholder=\"Enter course description\"\n                    rows={4}\n                  />\n                </div>\n\n                <div className={styles.formRow}>\n                  <div className={styles.formGroup}>\n                    <label>Duration</label>\n                    <input\n                      type=\"text\"\n                      value={editCourse.duration}\n                      onChange={(e) =>\n                        setEditCourse({\n                          ...editCourse,\n                          duration: e.target.value,\n                        })\n                      }\n                      required\n                      className=\"input\"\n                      placeholder=\"e.g., 8 weeks\"\n                    />\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Price ($)</label>\n                    <input\n                      type=\"number\"\n                      value={editCourse.price}\n                      onChange={(e) =>\n                        setEditCourse({ ...editCourse, price: e.target.value })\n                      }\n                      required\n                      className=\"input\"\n                      placeholder=\"Course price\"\n                      min=\"0\"\n                      step=\"0.01\"\n                    />\n                  </div>\n                </div>\n\n                <div className={styles.formRow}>\n                  <div className={styles.formGroup}>\n                    <label>Max Students</label>\n                    <input\n                      type=\"number\"\n                      value={editCourse.maxStudents}\n                      onChange={(e) =>\n                        setEditCourse({\n                          ...editCourse,\n                          maxStudents: e.target.value,\n                        })\n                      }\n                      required\n                      className=\"input\"\n                      placeholder=\"Maximum students\"\n                      min=\"1\"\n                    />\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Instructor</label>\n                    <input\n                      type=\"text\"\n                      value={editCourse.instructor}\n                      onChange={(e) =>\n                        setEditCourse({\n                          ...editCourse,\n                          instructor: e.target.value,\n                        })\n                      }\n                      required\n                      className=\"input\"\n                      placeholder=\"Instructor name\"\n                    />\n                  </div>\n                </div>\n\n                <div className={styles.formActions}>\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowEditForm(false);\n                      setEditingCourse(null);\n                    }}\n                    className=\"btn btn-secondary\"\n                  >\n                    Cancel\n                  </button>\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Update Course\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n      </div>\n    </AdminLayout>\n  );\n}\n","size_bytes":17882},"src/app/book-now/BookNow.module.css":{"content":".bookNowPage {\n  padding-top: 100px;\n  min-height: 100vh;\n}\n\n.hero {\n  text-align: center;\n  margin-bottom: var(--spacing-3xl);\n  padding: var(--spacing-3xl) 0;\n}\n\n.pageTitle {\n  font-size: var(--font-size-5xl);\n  font-weight: 700;\n  color: var(--color-text-primary);\n  margin-bottom: var(--spacing-lg);\n}\n\n.pageSubtitle {\n  font-size: var(--font-size-xl);\n  color: var(--color-text-secondary);\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.bookingContainer {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: var(--spacing-3xl);\n  margin-bottom: var(--spacing-3xl);\n}\n\n.sectionTitle {\n  font-size: var(--font-size-2xl);\n  font-weight: 700;\n  color: var(--color-text-primary);\n  margin-bottom: var(--spacing-xl);\n}\n\n/* Booking Options */\n.bookingOptions {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-xl);\n}\n\n.optionCard {\n  background-color: var(--color-tertiary-bg);\n  border: 1px solid var(--color-border);\n  border-radius: var(--radius-lg);\n  padding: var(--spacing-xl);\n  display: flex;\n  gap: var(--spacing-lg);\n  transition: all var(--transition-normal);\n}\n\n.optionCard:hover {\n  border-color: var(--color-border-hover);\n  transform: translateY(-4px);\n  box-shadow: var(--shadow-lg);\n}\n\n.optionIcon {\n  font-size: var(--font-size-3xl);\n  flex-shrink: 0;\n  margin-top: var(--spacing-xs);\n}\n\n.optionContent h3 {\n  font-size: var(--font-size-xl);\n  font-weight: 600;\n  color: var(--color-text-primary);\n  margin-bottom: var(--spacing-sm);\n}\n\n.optionContent p {\n  color: var(--color-text-secondary);\n  margin-bottom: var(--spacing-md);\n  line-height: 1.6;\n}\n\n.contactDetails {\n  background-color: var(--color-secondary-bg);\n  padding: var(--spacing-md);\n  border-radius: var(--radius-md);\n  margin-bottom: var(--spacing-md);\n  font-size: var(--font-size-sm);\n  color: var(--color-text-secondary);\n}\n\n.contactDetails strong {\n  color: var(--color-text-primary);\n}\n\n.hours,\n.textInstructions,\n.walkInNote {\n  font-size: var(--font-size-sm);\n  color: var(--color-text-tertiary);\n  font-style: italic;\n}\n\n/* Services Info */\n.servicesInfo {\n  background-color: var(--color-tertiary-bg);\n  border: 1px solid var(--color-border);\n  border-radius: var(--radius-lg);\n  padding: var(--spacing-xl);\n}\n\n.servicesList {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-md);\n  margin-bottom: var(--spacing-xl);\n}\n\n.serviceItem {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: var(--spacing-md);\n  background-color: var(--color-secondary-bg);\n  border-radius: var(--radius-md);\n  border: 1px solid var(--color-border);\n}\n\n.serviceDetails h4 {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--color-text-primary);\n  margin-bottom: var(--spacing-xs);\n}\n\n.serviceDetails p {\n  font-size: var(--font-size-sm);\n  color: var(--color-text-secondary);\n}\n\n.servicePrice {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: var(--spacing-xs);\n}\n\n.duration {\n  font-size: var(--font-size-xs);\n  color: var(--color-text-tertiary);\n}\n\n.price {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--color-text-primary);\n}\n\n.viewAllServices {\n  text-align: center;\n}\n\n/* Booking Tips */\n.bookingTips {\n  margin-bottom: var(--spacing-3xl);\n}\n\n.tipsGrid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: var(--spacing-xl);\n}\n\n.tip {\n  background-color: var(--color-tertiary-bg);\n  border: 1px solid var(--color-border);\n  border-radius: var(--radius-lg);\n  padding: var(--spacing-xl);\n  text-align: center;\n  transition: all var(--transition-normal);\n}\n\n.tip:hover {\n  transform: translateY(-4px);\n  border-color: var(--color-border-hover);\n}\n\n.tipIcon {\n  font-size: var(--font-size-3xl);\n  margin-bottom: var(--spacing-md);\n}\n\n.tip h3 {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--color-text-primary);\n  margin-bottom: var(--spacing-sm);\n}\n\n.tip p {\n  color: var(--color-text-secondary);\n  line-height: 1.6;\n}\n\n/* Contact CTA */\n.contactCta {\n  text-align: center;\n  padding: var(--spacing-3xl);\n  background-color: var(--color-secondary-bg);\n  border-radius: var(--radius-xl);\n  border: 1px solid var(--color-border);\n}\n\n.contactCta h2 {\n  font-size: var(--font-size-3xl);\n  font-weight: 700;\n  color: var(--color-text-primary);\n  margin-bottom: var(--spacing-md);\n}\n\n.contactCta p {\n  font-size: var(--font-size-lg);\n  color: var(--color-text-secondary);\n  margin-bottom: var(--spacing-xl);\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.ctaButtons {\n  display: flex;\n  gap: var(--spacing-lg);\n  justify-content: center;\n}\n\n/* Mobile Responsive */\n@media (max-width: 768px) {\n  .bookingContainer {\n    grid-template-columns: 1fr;\n    gap: var(--spacing-2xl);\n  }\n\n  .pageTitle {\n    font-size: var(--font-size-4xl);\n  }\n\n  .optionCard {\n    flex-direction: column;\n    text-align: center;\n    gap: var(--spacing-md);\n  }\n\n  .serviceItem {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: var(--spacing-md);\n  }\n\n  .servicePrice {\n    align-items: flex-start;\n    flex-direction: row;\n    gap: var(--spacing-lg);\n  }\n\n  .tipsGrid {\n    grid-template-columns: 1fr;\n  }\n\n  .ctaButtons {\n    flex-direction: column;\n    align-items: center;\n  }\n}\n\n@media (max-width: 480px) {\n  .bookNowPage {\n    padding-top: 80px;\n  }\n\n  .hero {\n    padding: var(--spacing-2xl) 0;\n  }\n\n  .optionCard,\n  .servicesInfo,\n  .tip,\n  .contactCta {\n    padding: var(--spacing-lg);\n  }\n}","size_bytes":5472},"src/header/homePage-header.js":{"content":"\"use client\";\r\nimport { useState } from \"react\";\r\nimport styles from \"./homePage-header.module.css\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport \"remixicon/fonts/remixicon.css\";\r\nimport FlowingMenu from \"./navLinks/FlowingMenu\";\r\n\r\nexport default function HomepageHeader() {\r\n  const [navOpen, setNavOpen] = useState(false);\r\n  const [isClosing, setIsClosing] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setIsClosing(true);\r\n    setTimeout(() => {\r\n      setNavOpen(false);\r\n      setIsClosing(false);\r\n    }, 400); // Match animation duration\r\n  };\r\n\r\n  const demoItems = [\r\n    {\r\n      link: \"#\",\r\n      text: \"Home\",\r\n      image: \"https://picsum.photos/600/400?random=1\",\r\n    },\r\n    {\r\n      link: \"#\",\r\n      text: \"About Us\",\r\n      image: \"https://picsum.photos/600/400?random=2\",\r\n    },\r\n    {\r\n      link: \"#\",\r\n      text: \"Services\",\r\n      image: \"https://picsum.photos/600/400?random=3\",\r\n    },\r\n    {\r\n      link: \"#\",\r\n      text: \"Courses\",\r\n      image: \"https://picsum.photos/600/400?random=1\",\r\n    },\r\n    {\r\n      link: \"#\",\r\n      text: \"Team\",\r\n      image: \"https://picsum.photos/600/400?random=4\",\r\n    },\r\n    {\r\n      link: \"#\",\r\n      text: \"Contact Us\",\r\n      image: \"https://picsum.photos/600/400?random=3\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.headerSpacer}>\r\n        <div className={styles.headerContainer}>\r\n          <div className={styles.headerLogo_container}>\r\n            <img src=\"/logoDark-0.svg\" />\r\n          </div>\r\n          <div className={styles.headerLinks}>\r\n            <button\r\n              className={`${styles.headerCTA_button} ${styles.headerCTA_header}`}\r\n            >\r\n              Book Now\r\n            </button>\r\n            <button\r\n              className={styles.headerMenu_button}\r\n              onClick={() => setNavOpen(true)}\r\n              aria-label=\"Open navigation\"\r\n            >\r\n              <i className=\"ri-menu-4-fill\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Navigation Pop Up Menu */}\r\n      {navOpen && (\r\n        <div className={styles.headerNav_popup}>\r\n          {/* Navigation Pop Up Menu Left */}\r\n          <div\r\n            className={\r\n              isClosing\r\n                ? `${styles.headerNav_popup_left} ${styles.slideOutLeft}`\r\n                : `${styles.headerNav_popup_left} ${styles.slideInLeft}`\r\n            }\r\n          >\r\n            <div className={styles.headerNav_popup_left_content}>\r\n              <div className={styles.headerNav_popup_left_content_top}>\r\n                <h1>The</h1>\r\n                <p>\r\n                  <span\r\n                    className={\r\n                      styles.headerNav_popup_left_content_top_p_firstLetter\r\n                    }\r\n                  >\r\n                    F\r\n                  </span>\r\n                  ringe\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Navigation Pop Up Menu Right */}\r\n          <div\r\n            className={\r\n              isClosing\r\n                ? `${styles.headerNav_popup_right} ${styles.slideOutRight}`\r\n                : `${styles.headerNav_popup_right} ${styles.slideInRight}`\r\n            }\r\n          >\r\n            {/* Navigation Pop Up Menu Right Div's Top Left Corner Logo */}\r\n            <div className={styles.headerNav_popup_logo_container}>\r\n              <Link href=\"/\">\r\n                {\" \"}\r\n                <Image\r\n                  src=\"/logo.png\"\r\n                  alt=\"The Fringe Logo\"\r\n                  width={100}\r\n                  height={100}\r\n                />\r\n              </Link>\r\n            </div>\r\n            {/* Navigation Pop Up Menu Close Button */}\r\n            <div className={styles.headerNav_popup_close_container}>\r\n              <button\r\n                className={styles.headerNav_popup_close_button}\r\n                onClick={handleClose}\r\n                aria-label=\"Close navigation\"\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n\r\n            {/* Navigation Pop Up Menu Links */}\r\n            <div className={styles.headerNav_popup_menu_container}>\r\n              <div\r\n                style={{ height: \"600px\", width: \"100%\", position: \"relative\" }}\r\n              >\r\n                <FlowingMenu items={demoItems} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","size_bytes":4480},"src/components/ui/VideoPlayer.tsx":{"content":"\"use client\";\n\nimport { useRef, useEffect, useState } from \"react\";\nimport styles from \"./VideoPlayer.module.css\";\n\ninterface VideoPlayerProps {\n  src: string;\n  onProgress?: (progress: number, watchTime: number) => void;\n  startTime?: number;\n}\n\nexport default function VideoPlayer({\n  src,\n  onProgress,\n  startTime = 0,\n}: VideoPlayerProps) {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [watchTime, setWatchTime] = useState(0);\n\n  useEffect(() => {\n    const video = videoRef.current;\n    if (!video) return;\n\n    // Set start time\n    if (startTime > 0) {\n      video.currentTime = startTime;\n    }\n\n    const handleLoadedMetadata = () => {\n      setDuration(video.duration);\n    };\n\n    const handleTimeUpdate = () => {\n      setCurrentTime(video.currentTime);\n      setWatchTime((prev) => prev + 1);\n\n      // Report progress every 5 seconds\n      if (watchTime % 5 === 0 && onProgress) {\n        const progress = (video.currentTime / video.duration) * 100;\n        onProgress(progress, watchTime);\n      }\n    };\n\n    const handlePlay = () => setIsPlaying(true);\n    const handlePause = () => setIsPlaying(false);\n\n    video.addEventListener(\"loadedmetadata\", handleLoadedMetadata);\n    video.addEventListener(\"timeupdate\", handleTimeUpdate);\n    video.addEventListener(\"play\", handlePlay);\n    video.addEventListener(\"pause\", handlePause);\n\n    return () => {\n      video.removeEventListener(\"loadedmetadata\", handleLoadedMetadata);\n      video.removeEventListener(\"timeupdate\", handleTimeUpdate);\n      video.removeEventListener(\"play\", handlePlay);\n      video.removeEventListener(\"pause\", handlePause);\n    };\n  }, [watchTime, onProgress, startTime]);\n\n  const togglePlay = () => {\n    const video = videoRef.current;\n    if (!video) return;\n\n    if (isPlaying) {\n      video.pause();\n    } else {\n      video.play();\n    }\n  };\n\n  const handleSeek = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const video = videoRef.current;\n    if (!video) return;\n\n    const seekTime = (parseFloat(e.target.value) / 100) * duration;\n    video.currentTime = seekTime;\n  };\n\n  const formatTime = (time: number) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, \"0\")}`;\n  };\n\n  return (\n    <div className={styles.videoPlayer}>\n      <div className={styles.videoContainer}>\n        <video ref={videoRef} className={styles.video} onClick={togglePlay}>\n          <source src={src} type=\"video/mp4\" />\n          Your browser does not support the video tag.\n        </video>\n\n        <div className={styles.controls}>\n          <button\n            onClick={togglePlay}\n            className={styles.playButton}\n            aria-label={isPlaying ? \"Pause\" : \"Play\"}\n          >\n            {isPlaying ? \"⏸️\" : \"▶️\"}\n          </button>\n\n          <div className={styles.progressContainer}>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"100\"\n              value={duration ? (currentTime / duration) * 100 : 0}\n              onChange={handleSeek}\n              className={styles.progressSlider}\n            />\n          </div>\n\n          <div className={styles.timeDisplay}>\n            <span>{formatTime(currentTime)}</span>\n            <span>/</span>\n            <span>{formatTime(duration)}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":3572},"src/components/layout/SmoothScrollProvider.tsx":{"content":"\"use client\";\nimport { useEffect } from \"react\";\nimport { useSmoothScroll } from \"../../hooks/useSmoothScroll\";\n\nexport default function SmoothScrollProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  // Initialize smooth scroll for the entire app\n  useSmoothScroll();\n\n  return <>{children}</>;\n}\n","size_bytes":310},"src/components/layout/StudentLayout.tsx":{"content":"\"use client\";\n\nimport { useState } from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/navigation\";\nimport styles from \"./StudentLayout.module.css\";\n\ninterface StudentLayoutProps {\n  children: React.ReactNode;\n}\n\nexport default function StudentLayout({ children }: StudentLayoutProps) {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const router = useRouter();\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"student_session\");\n    router.push(\"/student/login\");\n  };\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n\n  return (\n    <div className={styles.studentLayout}>\n      {/* Mobile Hamburger Button - Always visible on mobile */}\n      <button\n        onClick={toggleSidebar}\n        className={styles.mobileToggle}\n        aria-label=\"Toggle sidebar\"\n      >\n        <span className={styles.hamburgerLine}></span>\n        <span className={styles.hamburgerLine}></span>\n        <span className={styles.hamburgerLine}></span>\n      </button>\n\n      {/* Sidebar Overlay for mobile */}\n      {isSidebarOpen && (\n        <div \n          className={styles.sidebarOverlay}\n          onClick={() => setIsSidebarOpen(false)}\n        />\n      )}\n\n      {/* Sidebar */}\n      <aside\n        className={`${styles.sidebar} ${\n          isSidebarOpen ? styles.open : styles.closed\n        }`}\n      >\n        <div className={styles.sidebarHeader}>\n          <Link href=\"/student/dashboard\" className={styles.logo}>\n            <span className={styles.logoText}>The Fringe</span>\n            <span className={styles.logoSubtext}>Student Portal</span>\n          </Link>\n          \n          {/* Hamburger Toggle - Right side of sidebar */}\n          <button\n            onClick={toggleSidebar}\n            className={styles.toggleButton}\n            aria-label=\"Toggle sidebar\"\n          >\n            <span className={styles.hamburgerLine}></span>\n            <span className={styles.hamburgerLine}></span>\n            <span className={styles.hamburgerLine}></span>\n          </button>\n        </div>\n\n        <nav className={styles.nav}>\n          <Link href=\"/student/dashboard\" className={styles.navLink}>\n            <span className={styles.navIcon}>📊</span>\n            <span className={styles.navText}>Dashboard</span>\n          </Link>\n\n          <Link href=\"/student/my-course\" className={styles.navLink}>\n            <span className={styles.navIcon}>📚</span>\n            <span className={styles.navText}>My Course</span>\n          </Link>\n\n          <Link href=\"/student/certificate\" className={styles.navLink}>\n            <span className={styles.navIcon}>🏆</span>\n            <span className={styles.navText}>Certificate</span>\n          </Link>\n\n          <Link href=\"/student/profile\" className={styles.navLink}>\n            <span className={styles.navIcon}>👤</span>\n            <span className={styles.navText}>Profile</span>\n          </Link>\n\n          <Link href=\"/student/settings\" className={styles.navLink}>\n            <span className={styles.navIcon}>⚙️</span>\n            <span className={styles.navText}>Settings</span>\n          </Link>\n        </nav>\n\n        <div className={styles.sidebarFooter}>\n          <button onClick={handleLogout} className={styles.logoutButton}>\n            <span className={styles.navIcon}>🚪</span>\n            <span className={styles.navText}>Logout</span>\n          </button>\n        </div>\n      </aside>\n\n      {/* Main Content */}\n      <main\n        className={`${styles.main} ${\n          isSidebarOpen ? styles.mainWithSidebar : styles.mainFullWidth\n        }`}\n      >\n        <div className={styles.content}>{children}</div>\n      </main>\n    </div>\n  );\n}\n","size_bytes":3713},"src/app/admin/courses/Courses.module.css":{"content":".coursesPage {\n    padding: var(--spacing-xl);\n}\n\n.loading {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 50vh;\n    font-size: var(--font-size-lg);\n    color: var(--color-text-secondary);\n}\n\n.header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: var(--spacing-2xl);\n}\n\n.title {\n    font-size: var(--font-size-3xl);\n    font-weight: 700;\n    color: var(--color-text-primary);\n}\n\n.coursesGrid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n    gap: var(--spacing-xl);\n}\n\n.courseCard {\n    background: var(--color-card-bg);\n    border: 1px solid var(--color-card-border);\n    border-radius: var(--radius-lg);\n    padding: var(--spacing-xl);\n    transition: all var(--transition-normal);\n}\n\n.courseCard:hover {\n    border-color: var(--color-border-hover);\n    transform: translateY(-4px);\n    box-shadow: var(--shadow-lg);\n}\n\n.courseHeader {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    margin-bottom: var(--spacing-lg);\n}\n\n.courseTitle {\n    font-size: var(--font-size-xl);\n    font-weight: 600;\n    color: var(--color-text-primary);\n    margin: 0;\n    flex: 1;\n    margin-right: var(--spacing-md);\n}\n\n.status {\n    padding: var(--spacing-xs) var(--spacing-sm);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n    text-transform: uppercase;\n}\n\n.status.active {\n    background: rgba(34, 197, 94, 0.2);\n    color: #22c55e;\n    border: 1px solid #22c55e;\n}\n\n.status.draft {\n    background: rgba(251, 191, 36, 0.2);\n    color: #fbbf24;\n    border: 1px solid #fbbf24;\n}\n\n.status.archived {\n    background: rgba(156, 163, 175, 0.2);\n    color: #9ca3af;\n    border: 1px solid #9ca3af;\n}\n\n.courseDescription {\n    color: var(--color-text-secondary);\n    line-height: 1.6;\n    margin-bottom: var(--spacing-lg);\n}\n\n.courseDetails {\n    margin-bottom: var(--spacing-lg);\n}\n\n.detailItem {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: var(--spacing-sm);\n    padding: var(--spacing-xs) 0;\n}\n\n.detailLabel {\n    font-weight: 500;\n    color: var(--color-text-secondary);\n}\n\n.detailValue {\n    font-weight: 600;\n    color: var(--color-text-primary);\n}\n\n.courseActions {\n    display: flex;\n    gap: var(--spacing-sm);\n    flex-wrap: wrap;\n}\n\n.deleteBtn {\n    background: rgba(239, 68, 68, 0.2) !important;\n    color: #ef4444 !important;\n    border: 1px solid #ef4444 !important;\n}\n\n.deleteBtn:hover {\n    background: #ef4444 !important;\n    color: white !important;\n}\n\n/* Modal Styles */\n.modal {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.8);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 1000;\n}\n\n.modalContent {\n    background: var(--color-card-bg);\n    border-radius: var(--radius-lg);\n    border: 1px solid var(--color-card-border);\n    width: 100%;\n    max-width: 600px;\n    max-height: 90vh;\n    overflow-y: auto;\n}\n\n.modalHeader {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: var(--spacing-xl);\n    border-bottom: 1px solid var(--color-border);\n}\n\n.modalHeader h2 {\n    font-size: var(--font-size-xl);\n    font-weight: 600;\n    color: var(--color-text-primary);\n    margin: 0;\n}\n\n.closeBtn {\n    background: none;\n    border: none;\n    font-size: var(--font-size-2xl);\n    color: var(--color-text-secondary);\n    cursor: pointer;\n    padding: 0;\n    width: 30px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: var(--radius-sm);\n    transition: all var(--transition-normal);\n}\n\n.closeBtn:hover {\n    background: var(--color-tertiary-bg);\n    color: var(--color-text-primary);\n}\n\n.form {\n    padding: var(--spacing-xl);\n}\n\n.formGroup {\n    margin-bottom: var(--spacing-lg);\n}\n\n.formGroup label {\n    display: block;\n    margin-bottom: var(--spacing-sm);\n    font-weight: 500;\n    color: var(--color-text-primary);\n}\n\n.formRow {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-lg);\n}\n\n.textarea {\n    resize: vertical;\n    min-height: 100px;\n}\n\n.formActions {\n    display: flex;\n    gap: var(--spacing-md);\n    justify-content: flex-end;\n    margin-top: var(--spacing-xl);\n    padding-top: var(--spacing-lg);\n    border-top: 1px solid var(--color-border);\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n    .coursesPage {\n        padding: var(--spacing-md);\n    }\n\n    .header {\n        flex-direction: column;\n        gap: var(--spacing-lg);\n        align-items: stretch;\n    }\n\n    .coursesGrid {\n        grid-template-columns: 1fr;\n    }\n\n    .courseActions {\n        flex-direction: column;\n    }\n\n    .formRow {\n        grid-template-columns: 1fr;\n    }\n\n    .modalContent {\n        margin: var(--spacing-md);\n        max-width: none;\n    }\n}\n\n@media (max-width: 480px) {\n    .form {\n        padding: var(--spacing-lg);\n    }\n\n    .formActions {\n        flex-direction: column;\n    }\n\n    .modalHeader {\n        padding: var(--spacing-lg);\n    }\n\n    .courseCard {\n        padding: var(--spacing-lg);\n    }\n}","size_bytes":5232},"src/components/layout/AdminLayout.module.css":{"content":".adminLayout {\r\n    display: flex;\r\n    min-height: 100vh;\r\n    background-color: var(--color-primary-bg);\r\n}\r\n\r\n.sidebar {\r\n    width: 280px;\r\n    background-color: var(--color-secondary-bg);\r\n    border-right: 1px solid var(--color-border);\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: fixed;\r\n    height: 100vh;\r\n    z-index: 1000;\r\n    transition: width 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n    overflow: hidden;\r\n}\r\n\r\n.sidebar.closed {\r\n    width: 80px;\r\n}\r\n\r\n.sidebarHeader {\r\n    padding: var(--spacing-lg);\r\n    border-bottom: 1px solid var(--color-border);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    position: relative;\r\n    height: 80px;\r\n    flex-shrink: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\n.logo {\r\n    text-decoration: none;\r\n    display: flex;\r\n    flex-direction: column;\r\n    transition: opacity 0.3s ease;\r\n    min-width: 0;\r\n    flex: 1;\r\n}\r\n\r\n.logoText {\r\n    font-size: var(--font-size-xl);\r\n    font-weight: 700;\r\n    color: var(--color-text-primary);\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    transition: opacity 0.3s ease;\r\n}\r\n\r\n.logoSubtext {\r\n    font-size: var(--font-size-sm);\r\n    color: var(--color-text-secondary);\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    transition: opacity 0.3s ease;\r\n}\r\n\r\n.toggleButton {\r\n    background: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n    padding: 8px;\r\n    border-radius: var(--radius-md);\r\n    transition: all 0.2s ease;\r\n    width: 40px;\r\n    height: 40px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 4px;\r\n    flex-shrink: 0;\r\n    position: relative;\r\n}\r\n\r\n.toggleButton:hover {\r\n    background-color: var(--color-tertiary-bg);\r\n    transform: scale(1.05);\r\n}\r\n\r\n.toggleButton:active {\r\n    transform: scale(0.95);\r\n}\r\n\r\n.hamburgerLine {\r\n    width: 20px;\r\n    height: 2px;\r\n    background-color: var(--color-text-primary);\r\n    border-radius: 1px;\r\n    display: block;\r\n}\r\n\r\n.nav {\r\n    flex: 1;\r\n    padding: var(--spacing-lg);\r\n}\r\n\r\n.navLink {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: var(--spacing-md);\r\n    padding: var(--spacing-md);\r\n    color: var(--color-text-secondary);\r\n    text-decoration: none;\r\n    border-radius: var(--radius-md);\r\n    transition: all 0.2s ease;\r\n    margin-bottom: var(--spacing-xs);\r\n    position: relative;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n}\r\n\r\n.navLink:hover {\r\n    background-color: var(--color-tertiary-bg);\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n.navText {\r\n    font-weight: 500;\r\n    transition: opacity 0.3s ease;\r\n    min-width: 0;\r\n}\r\n\r\n/* Tooltip for minimized sidebar */\r\n.sidebar.closed .navLink {\r\n    justify-content: center;\r\n    padding: var(--spacing-md);\r\n    text-align: center;\r\n    gap: 0;\r\n}\r\n\r\n.sidebar.closed .navLink:hover::after {\r\n    content: attr(title);\r\n    position: absolute;\r\n    left: calc(100% + 10px);\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    background-color: var(--color-text-primary);\r\n    color: var(--color-primary-bg);\r\n    padding: var(--spacing-xs) var(--spacing-sm);\r\n    border-radius: var(--radius-sm);\r\n    font-size: var(--font-size-sm);\r\n    white-space: nowrap;\r\n    z-index: 1002;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\r\n    opacity: 0;\r\n    animation: tooltipFadeIn 0.2s ease forwards;\r\n}\r\n\r\n@keyframes tooltipFadeIn {\r\n    from {\r\n        opacity: 0;\r\n        transform: translateY(-50%) translateX(-5px);\r\n    }\r\n    to {\r\n        opacity: 1;\r\n        transform: translateY(-50%) translateX(0);\r\n    }\r\n}\r\n\r\n.navIcon {\r\n    font-size: var(--font-size-lg);\r\n    width: 20px;\r\n    text-align: center;\r\n    flex-shrink: 0;\r\n}\r\n\r\n.sidebarFooter {\r\n    padding: var(--spacing-lg);\r\n    border-top: 1px solid var(--color-border);\r\n}\r\n\r\n.logoutButton {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: var(--spacing-md);\r\n    padding: var(--spacing-md);\r\n    background: none;\r\n    border: none;\r\n    color: var(--color-text-secondary);\r\n    cursor: pointer;\r\n    border-radius: var(--radius-md);\r\n    transition: all 0.2s ease;\r\n    width: 100%;\r\n    font-size: var(--font-size-base);\r\n    position: relative;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n}\r\n\r\n.logoutButton:hover {\r\n    background-color: var(--color-tertiary-bg);\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n.main {\r\n    flex: 1;\r\n    transition: margin-left 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n\r\n.mainWithSidebar {\r\n    margin-left: 280px;\r\n}\r\n\r\n.mainFullWidth {\r\n    margin-left: 80px;\r\n}\r\n\r\n.content {\r\n    padding: var(--spacing-xl);\r\n    min-height: 100vh;\r\n}\r\n\r\n/* Mobile Responsive */\r\n@media (max-width: 768px) {\r\n    .sidebar {\r\n        width: 100%;\r\n        transform: translateX(-100%);\r\n    }\r\n\r\n    .sidebar.open {\r\n        transform: translateX(0);\r\n    }\r\n\r\n    .sidebar.closed {\r\n        transform: translateX(-100%);\r\n    }\r\n\r\n    .main {\r\n        margin-left: 0;\r\n    }\r\n\r\n    .mainWithSidebar,\r\n    .mainFullWidth {\r\n        margin-left: 0;\r\n    }\r\n\r\n    .content {\r\n        padding: var(--spacing-lg);\r\n    }\r\n}\r\n\r\n/* When sidebar is closed, fade out text smoothly */\r\n.sidebar.closed .logoText,\r\n.sidebar.closed .logoSubtext,\r\n.sidebar.closed .navText {\r\n    opacity: 0;\r\n    pointer-events: none;\r\n}\r\n\r\n.sidebar.closed .sidebarHeader {\r\n    justify-content: center;\r\n    padding: var(--spacing-lg) var(--spacing-md);\r\n    height: 80px;\r\n}\r\n\r\n.sidebar.closed .toggleButton {\r\n    position: static;\r\n    transform: none;\r\n}\r\n\r\n.sidebar.closed .logo {\r\n    display: none;\r\n}\r\n\r\n.sidebar.closed .logoutButton {\r\n    justify-content: center;\r\n    padding: var(--spacing-md);\r\n    text-align: center;\r\n    gap: 0;\r\n}\r\n\r\n.sidebar.closed .logoutButton:hover::after {\r\n    content: attr(title);\r\n    position: absolute;\r\n    left: calc(100% + 10px);\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    background-color: var(--color-text-primary);\r\n    color: var(--color-primary-bg);\r\n    padding: var(--spacing-xs) var(--spacing-sm);\r\n    border-radius: var(--radius-sm);\r\n    font-size: var(--font-size-sm);\r\n    white-space: nowrap;\r\n    z-index: 1002;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\r\n    opacity: 0;\r\n    animation: tooltipFadeIn 0.2s ease forwards;\r\n}","size_bytes":6257},"src/app/admin/login/page.tsx":{"content":"\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport styles from \"./AdminLogin.module.css\";\r\nimport { useAuth } from \"@/hooks/useAuth\";\r\n\r\nexport default function AdminLoginPage() {\r\n  const [credentials, setCredentials] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const router = useRouter();\r\n  const { login } = useAuth();\r\n\r\n  const handleChange = (e: any) => {\r\n    setCredentials({\r\n      ...credentials,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      const user = await login(credentials.email, credentials.password);\r\n      if (user.role !== 'admin') {\r\n        setError(\"Access denied. Admin privileges required.\");\r\n        return;\r\n      }\r\n      // Navigation is handled in useAuth hook\r\n    } catch (err: any) {\r\n      setError(err?.message || \"Login failed\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.loginPage}>\r\n      <div className={styles.loginContainer}>\r\n        <div className={styles.loginCard}>\r\n          <div className={styles.header}>\r\n            <h1 className={styles.title}>Admin Login</h1>\r\n            <p className={styles.subtitle}>Access The Fringe Admin Panel</p>\r\n          </div>\r\n\r\n          {error && <div className={styles.errorMessage}>{error}</div>}\r\n\r\n          <form onSubmit={handleSubmit} className={styles.form}>\r\n            <div className={styles.formGroup}>\r\n              <label htmlFor=\"email\">Email Address</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={credentials.email}\r\n                onChange={handleChange}\r\n                required\r\n                className=\"input\"\r\n                placeholder=\"admin@thefringe.com\"\r\n              />\r\n            </div>\r\n\r\n            <div className={styles.formGroup}>\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                value={credentials.password}\r\n                onChange={handleChange}\r\n                required\r\n                className=\"input\"\r\n                placeholder=\"Enter your password\"\r\n              />\r\n            </div>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className={`btn btn-primary btn-lg ${styles.submitButton}`}\r\n            >\r\n              {isLoading ? \"Signing In...\" : \"Sign In\"}\r\n            </button>\r\n          </form>\r\n\r\n          <div className={styles.forgotPassword}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                const email = prompt(\"Enter your admin email address:\");\r\n                if (email) {\r\n                  // API call to send reset email\r\n                  fetch(\"/api/admin/forgot-password\", {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ email }),\r\n                  }).then(() => {\r\n                    alert(\"Password reset instructions sent to your email!\");\r\n                  }).catch(() => {\r\n                    alert(\"Failed to send reset email. Please try again.\");\r\n                  });\r\n                }\r\n              }}\r\n              className={styles.forgotLink}\r\n            >\r\n              Forgot Password?\r\n            </button>\r\n          </div>\r\n\r\n          <div className={styles.footer}>\r\n            <p>\r\n              <a href=\"/\" className={styles.backLink}>\r\n                ← Back to Website\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","size_bytes":4005},"src/services/newsletter.service.ts":{"content":"import { fetchApi } from '@/lib/api';\nimport { mockNewsletters } from './mockData';\n\nexport interface NewsletterSubscription {\n  email: string;\n  name?: string;\n  preferences?: string[];\n}\n\nexport const newsletterService = {\n  async subscribe(data: NewsletterSubscription): Promise<void> {\n    try {\n      return await fetchApi<void>('/newsletter/subscribe', {\n        method: 'POST',\n        body: JSON.stringify(data),\n      });\n    } catch (error) {\n      console.log('Simulating newsletter subscription', error);\n    }\n  },\n\n  async unsubscribe(email: string): Promise<void> {\n    try {\n      return await fetchApi<void>('/newsletter/unsubscribe', {\n        method: 'POST',\n        body: JSON.stringify({ email }),\n      });\n    } catch (error) {\n      console.log('Simulating newsletter unsubscription', error);\n    }\n  },\n\n  async updatePreferences(email: string, preferences: string[]): Promise<void> {\n    try {\n      return await fetchApi<void>('/newsletter/preferences', {\n        method: 'PUT',\n        body: JSON.stringify({ email, preferences }),\n      });\n    } catch (error) {\n      console.log('Simulating preference update', error);\n    }\n  },\n\n  // Additional methods for frontend-only version\n  async getAllNewsletters(): Promise<any[]> {\n    try {\n      return await fetchApi<any[]>('/newsletters');\n    } catch (error) {\n      console.log('Falling back to mock data for newsletters', error);\n      return mockNewsletters;\n    }\n  }\n};","size_bytes":1455},"src/components/navigation/index.ts":{"content":"// Navigation Components\nexport { default as FlowingMenu } from './FlowingMenu';","size_bytes":80},"src/components/sections/Services.module.css":{"content":"/* ==============================================\r\n   SERVICES - FULL SCREEN SMOOTH SCROLL LAYOUT\r\n   ============================================== */\r\n\r\n.servicesWrapper {\r\n    position: relative;\r\n    background: var(--color-primary-bg);\r\n    margin: 0 !important;\r\n    padding: 0 !important;\r\n    font-family: var(--font-body);\r\n    display: block;\r\n}\r\n\r\n/* ==============================================\r\n   SERVICE NAVIGATION - COMPACT DESIGN\r\n   ============================================== */\r\n.serviceNavigation {\r\n    position: sticky;\r\n    top: 80px;\r\n    z-index: 50;\r\n    background: rgba(0, 0, 0, 0.95);\r\n    backdrop-filter: blur(15px);\r\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n    padding: 15px 0;\r\n    transition: all 0.4s cubic-bezier(0.4, 0.0, 0.2, 1);\r\n    margin: 0 !important;\r\n}\r\n\r\n/* Hide service navigation on screens smaller than 1250px */\r\n@media (max-width: 1249px) {\r\n    .serviceNavigation {\r\n        display: none;\r\n    }\r\n}\r\n\r\n.serviceNavigation.compact {\r\n    top: 60px;\r\n    padding: 8px 0;\r\n    background: rgba(0, 0, 0, 0.98);\r\n    backdrop-filter: blur(20px);\r\n    border-top: 1px solid rgba(255, 255, 255, 0.15);\r\n}\r\n\r\n.navContainer {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.categoryButtons {\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 12px;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.categoryNavButton {\r\n    padding: 12px 24px;\r\n    background: transparent;\r\n    border: 2px solid rgba(255, 255, 255, 0.3);\r\n    color: #ffffff;\r\n    font-size: 0.95rem;\r\n    font-weight: 600;\r\n    font-family: var(--font-accent);\r\n    border-radius: 25px;\r\n    cursor: pointer;\r\n    transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);\r\n    text-transform: uppercase;\r\n    letter-spacing: 0.5px;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n\r\n.serviceNavigation.compact .categoryNavButton {\r\n    padding: 8px 18px;\r\n    font-size: 0.85rem;\r\n    border-radius: 20px;\r\n}\r\n\r\n.categoryNavButton::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: -100%;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(255, 255, 255, 0.1);\r\n    transition: left 0.5s;\r\n}\r\n\r\n.categoryNavButton:hover::before {\r\n    left: 100%;\r\n}\r\n\r\n.categoryNavButton:hover {\r\n    background: #ffffff;\r\n    border-color: #ffffff;\r\n    color: #000000;\r\n    transform: translateY(-2px);\r\n}\r\n\r\n.categoryNavButton:active {\r\n    transform: translateY(0);\r\n    transition: all 0.1s ease;\r\n    outline: none;\r\n}\r\n\r\n/* ==============================================\r\n   CATEGORY SECTIONS - FULL SCREEN\r\n   ============================================== */\r\n.categorySection {\r\n    min-height: auto;\r\n    display: flex;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n    position: relative;\r\n    padding: 120px 0 120px 0;\r\n    background: var(--color-primary-bg);\r\n}\r\n\r\n.categorySection:nth-child(even) {\r\n    background: var(--color-secondary-bg);\r\n}\r\n\r\n.categoryContainer {\r\n    max-width: 1400px;\r\n    margin: 0 auto;\r\n    padding: 0 40px;\r\n    width: 100%;\r\n}\r\n\r\n.categoryHeader {\r\n    text-align: center;\r\n    margin-bottom: 60px;\r\n}\r\n\r\n.categoryTitle {\r\n    font-size: 4rem;\r\n    font-weight: 800;\r\n    font-family: var(--font-heading);\r\n    color: var(--color-text-primary);\r\n    margin-bottom: 20px;\r\n    text-transform: uppercase;\r\n    letter-spacing: 3px;\r\n    position: relative;\r\n}\r\n\r\n.categoryTitle::after {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: -10px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    width: 100px;\r\n    height: 4px;\r\n    background: var(--color-accent-primary);\r\n    border-radius: 2px;\r\n}\r\n\r\n.categorySubtitle {\r\n    font-size: 1.8rem;\r\n    font-weight: 400;\r\n    font-family: var(--font-subheading);\r\n    color: var(--color-accent-primary);\r\n    margin-bottom: 15px;\r\n    font-style: italic;\r\n}\r\n\r\n.categoryDescription {\r\n    font-size: 1.2rem;\r\n    font-family: var(--font-body);\r\n    color: var(--color-text-secondary);\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n    line-height: 1.6;\r\n}\r\n\r\n/* ==============================================\r\n   SERVICES GRID\r\n   ============================================== */\r\n.servicesContainer {\r\n    position: relative;\r\n    margin-bottom: 40px;\r\n}\r\n\r\n.sliderNavigation {\r\n    display: none;\r\n}\r\n\r\n.servicesGrid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\r\n    gap: 30px;\r\n    max-width: 1400px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n}\r\n\r\n/* Carousel styles for mobile devices */\r\n@media (max-width: 1024px) {\r\n    .servicesContainer {\r\n        position: relative;\r\n        padding-bottom: 40px;\r\n    }\r\n\r\n    .servicesGrid {\r\n        display: flex;\r\n        overflow-x: auto;\r\n        scroll-behavior: smooth;\r\n        gap: 30px;\r\n        padding: 0 calc(50vw - 175px);\r\n        margin: 0;\r\n        scrollbar-width: none;\r\n        /* Firefox */\r\n        -ms-overflow-style: none;\r\n        /* IE and Edge */\r\n        scroll-snap-type: x mandatory;\r\n        -webkit-overflow-scrolling: touch;\r\n        /* iOS smooth scrolling */\r\n        touch-action: pan-x;\r\n        /* Enable horizontal touch scrolling */\r\n    }\r\n\r\n    .servicesGrid::-webkit-scrollbar {\r\n        display: none;\r\n        /* Chrome, Safari, Opera */\r\n    }\r\n\r\n    .serviceCard {\r\n        flex: 0 0 350px;\r\n        min-width: 350px;\r\n        scroll-snap-align: center;\r\n    }\r\n\r\n    .sliderNavigation {\r\n        display: flex;\r\n        justify-content: center;\r\n        gap: 8px;\r\n        margin-top: 20px;\r\n    }\r\n\r\n    .sliderDot {\r\n        width: 12px;\r\n        height: 12px;\r\n        border-radius: 50%;\r\n        border: 2px solid rgba(255, 255, 255, 0.4);\r\n        background-color: transparent;\r\n        cursor: pointer;\r\n        transition: all 0.3s ease;\r\n        padding: 0;\r\n    }\r\n\r\n    .sliderDot:hover {\r\n        border-color: rgba(255, 255, 255, 0.6);\r\n        transform: scale(1.1);\r\n    }\r\n\r\n    .sliderDot.active {\r\n        background-color: rgba(255, 255, 255, 0.9);\r\n        border-color: rgba(255, 255, 255, 0.9);\r\n        transform: scale(1.2);\r\n    }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .servicesGrid {\r\n        padding: 0 calc(50vw - 160px);\r\n        gap: 25px;\r\n        -webkit-overflow-scrolling: touch;\r\n        touch-action: pan-x;\r\n    }\r\n\r\n    .serviceCard {\r\n        flex: 0 0 320px;\r\n        min-width: 320px;\r\n    }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n    .servicesGrid {\r\n        padding: 0 calc(50vw - 145px);\r\n        gap: 20px;\r\n        -webkit-overflow-scrolling: touch;\r\n        touch-action: pan-x;\r\n    }\r\n\r\n    .serviceCard {\r\n        flex: 0 0 290px;\r\n        min-width: 290px;\r\n    }\r\n}\r\n\r\n@media (max-width: 320px) {\r\n    .servicesGrid {\r\n        padding: 0 calc(50vw - 135px);\r\n        gap: 15px;\r\n        -webkit-overflow-scrolling: touch;\r\n        touch-action: pan-x;\r\n    }\r\n\r\n    .serviceCard {\r\n        flex: 0 0 270px;\r\n        min-width: 270px;\r\n    }\r\n}\r\n\r\n.serviceCard {\r\n    background: rgba(255, 255, 255, 0.05);\r\n    backdrop-filter: blur(20px);\r\n    border-radius: 24px;\r\n    overflow: hidden;\r\n    transition: all 0.4s ease;\r\n    position: relative;\r\n    border: 1px solid rgba(255, 255, 255, 0.1);\r\n    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.serviceCard::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 1px;\r\n    background: linear-gradient(90deg, transparent, rgba(208, 180, 159, 0.5), transparent);\r\n}\r\n\r\n.serviceCard:hover {\r\n    transform: translateY(-12px) scale(1.02);\r\n    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.4);\r\n    border-color: rgba(208, 180, 159, 0.3);\r\n}\r\n\r\n.serviceImageContainer {\r\n    position: relative;\r\n    height: 280px;\r\n    overflow: hidden;\r\n}\r\n\r\n.serviceImage {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    transition: transform 0.6s ease;\r\n}\r\n\r\n.serviceCard:hover .serviceImage {\r\n    transform: scale(1.15);\r\n}\r\n\r\n.serviceOverlay {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: linear-gradient(135deg, rgba(0, 0, 0, 0.7) 0%, rgba(0, 0, 0, 0.4) 100%);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    opacity: 0;\r\n    transition: all 0.4s ease;\r\n}\r\n\r\n.serviceCard:hover .serviceOverlay {\r\n    opacity: 1;\r\n}\r\n\r\n.servicePrice {\r\n    background: linear-gradient(135deg, #D0B49F 0%, #B8A082 100%);\r\n    color: #1a1a1a;\r\n    padding: 12px 20px;\r\n    border-radius: 20px;\r\n    font-weight: 700;\r\n    font-size: 1.1rem;\r\n    box-shadow: 0 4px 12px rgba(208, 180, 159, 0.3);\r\n}\r\n\r\n.serviceContent {\r\n    padding: 32px;\r\n}\r\n\r\n.serviceTitle {\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    color: #ffffff;\r\n    margin-bottom: 12px;\r\n    line-height: 1.3;\r\n}\r\n\r\n.serviceDescription {\r\n    color: rgba(255, 255, 255, 0.7);\r\n    line-height: 1.6;\r\n    margin-bottom: 24px;\r\n    font-size: 1rem;\r\n}\r\n\r\n.serviceDetails {\r\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n    padding-top: 20px;\r\n}\r\n\r\n.serviceMeta {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.duration {\r\n    color: rgba(255, 255, 255, 0.6);\r\n    font-size: 0.9rem;\r\n    font-weight: 500;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 6px;\r\n}\r\n\r\n.price {\r\n    font-size: 1.3rem;\r\n    font-weight: 700;\r\n    color: #D0B49F;\r\n    background: linear-gradient(135deg, #D0B49F 0%, #E6D3B7 100%);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    background-clip: text;\r\n}\r\n\r\n.contactPrice {\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    color: rgba(255, 255, 255, 0.8);\r\n    font-style: italic;\r\n}\r\n\r\n.serviceOverlayButton {\r\n    background: linear-gradient(135deg, #D0B49F 0%, #B8A082 100%);\r\n    color: #1a1a1a;\r\n    border: none;\r\n    padding: 16px 32px;\r\n    border-radius: 50px;\r\n    font-weight: 700;\r\n    font-size: 1.1rem;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    box-shadow: 0 8px 24px rgba(208, 180, 159, 0.3);\r\n}\r\n\r\n.serviceOverlayButton:hover {\r\n    transform: translateY(-3px) scale(1.05);\r\n    box-shadow: 0 12px 32px rgba(208, 180, 159, 0.5);\r\n}\r\n\r\n/* ==============================================\r\n   SCROLL INDICATOR\r\n   ============================================== */\r\n.scrollIndicator {\r\n    position: absolute;\r\n    bottom: 20px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    text-align: center;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    margin-top: 50px;\r\n    padding: 50px 0;\r\n}\r\n\r\n.scrollIndicator:hover {\r\n    transform: translateX(-50%) translateY(-5px);\r\n}\r\n\r\n.scrollIndicator span {\r\n    display: block;\r\n    color: #e0e0e0;\r\n    font-size: 0.9rem;\r\n    font-family: var(--font-accent);\r\n    margin-bottom: 10px;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n}\r\n\r\n.scrollArrow {\r\n    width: 40px;\r\n    height: 40px;\r\n    border: 2px solid rgba(255, 255, 255, 0.3);\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    animation: bounce 2s infinite;\r\n}\r\n\r\n.scrollArrow i {\r\n    color: #ffffff;\r\n    font-size: 1.2rem;\r\n}\r\n\r\n@keyframes bounce {\r\n\r\n    0%,\r\n    20%,\r\n    50%,\r\n    80%,\r\n    100% {\r\n        transform: translateY(0);\r\n    }\r\n\r\n    40% {\r\n        transform: translateY(-10px);\r\n    }\r\n\r\n    60% {\r\n        transform: translateY(-5px);\r\n    }\r\n}\r\n\r\n/* ==============================================\r\n   CTA SECTION\r\n   ============================================== */\r\n.ctaSection {\r\n    min-height: 50vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: var(--color-primary-bg);\r\n    position: relative;\r\n    padding: 120px 0;\r\n}\r\n\r\n.ctaContainer {\r\n    text-align: center;\r\n    max-width: 800px;\r\n    padding: 0 40px;\r\n}\r\n\r\n.ctaTitle {\r\n    font-size: 3.5rem;\r\n    font-weight: 800;\r\n    font-family: var(--font-heading);\r\n    color: var(--color-text-primary);\r\n    margin-bottom: 30px;\r\n    line-height: 1.2;\r\n}\r\n\r\n.ctaDescription {\r\n    font-size: 1.3rem;\r\n    font-family: var(--font-subheading);\r\n    color: var(--color-text-secondary);\r\n    margin-bottom: 50px;\r\n    line-height: 1.6;\r\n}\r\n\r\n.ctaButton {\r\n    background: #ffffff;\r\n    color: #000000;\r\n    border: 2px solid rgba(255, 255, 255, 0.3);\r\n    padding: 20px 50px;\r\n    border-radius: 25px;\r\n    font-size: 1.2rem;\r\n    font-weight: 700;\r\n    font-family: var(--font-accent);\r\n    cursor: pointer;\r\n    transition: all 0.4s ease;\r\n    text-transform: uppercase;\r\n    letter-spacing: 2px;\r\n}\r\n\r\n.ctaButton:hover {\r\n    transform: translateY(-5px) scale(1.05);\r\n    background: #f5f5f5;\r\n    border-color: rgba(255, 255, 255, 0.5);\r\n}\r\n\r\n/* ==============================================\r\n   RESPONSIVE DESIGN - COMPREHENSIVE BREAKPOINTS\r\n   ============================================== */\r\n\r\n/* Extra Large Desktop (≥1440px) */\r\n@media (min-width: 1440px) {\r\n    .categoryTitle {\r\n        font-size: 4.5rem;\r\n    }\r\n\r\n    .categorySubtitle {\r\n        font-size: 2rem;\r\n    }\r\n\r\n    .servicesGrid {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\r\n        gap: 50px;\r\n        overflow: visible;\r\n        padding: 0;\r\n    }\r\n\r\n    .serviceCard {\r\n        flex: none;\r\n        min-width: auto;\r\n    }\r\n\r\n    .serviceNavigation {\r\n        padding: 18px 0;\r\n    }\r\n\r\n    .serviceNavigation.compact {\r\n        padding: 10px 0;\r\n    }\r\n\r\n    .categoryNavButton {\r\n        padding: 14px 28px;\r\n        font-size: 1.1rem;\r\n    }\r\n\r\n    .serviceNavigation.compact .categoryNavButton {\r\n        padding: 10px 20px;\r\n        font-size: 1rem;\r\n    }\r\n}\r\n\r\n/* Large Desktop (1200px-1439px) */\r\n@media (max-width: 1439px) and (min-width: 1200px) {\r\n    .categoryTitle {\r\n        font-size: 3.8rem;\r\n    }\r\n\r\n    .categorySubtitle {\r\n        font-size: 1.9rem;\r\n    }\r\n\r\n    .servicesGrid {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\r\n        gap: 40px;\r\n        overflow: visible;\r\n        padding: 0;\r\n    }\r\n\r\n    .serviceCard {\r\n        flex: none;\r\n        min-width: auto;\r\n    }\r\n\r\n    .serviceNavigation {\r\n        padding: 16px 0;\r\n    }\r\n\r\n    .serviceNavigation.compact {\r\n        padding: 9px 0;\r\n    }\r\n\r\n    .categoryNavButton {\r\n        padding: 13px 26px;\r\n        font-size: 1.05rem;\r\n    }\r\n\r\n    .serviceNavigation.compact .categoryNavButton {\r\n        padding: 9px 18px;\r\n        font-size: 0.95rem;\r\n    }\r\n}\r\n\r\n/* Medium Desktop (1025px-1199px) - Use Grid */\r\n@media (max-width: 1199px) and (min-width: 1025px) {\r\n    .categoryTitle {\r\n        font-size: 3.4rem;\r\n    }\r\n\r\n    .categorySubtitle {\r\n        font-size: 1.7rem;\r\n    }\r\n\r\n    .servicesGrid {\r\n        display: grid !important;\r\n        grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\r\n        gap: 35px;\r\n        overflow: visible !important;\r\n        padding: 0 !important;\r\n    }\r\n\r\n    .serviceCard {\r\n        flex: none !important;\r\n        min-width: auto !important;\r\n    }\r\n\r\n    .serviceNavigation {\r\n        top: 80px;\r\n        padding: 14px 0;\r\n    }\r\n\r\n    .serviceNavigation.compact {\r\n        top: 60px;\r\n        padding: 8px 0;\r\n    }\r\n\r\n    .categoryNavButton {\r\n        padding: 11px 22px;\r\n        font-size: 0.98rem;\r\n    }\r\n\r\n    .serviceNavigation.compact .categoryNavButton {\r\n        padding: 8px 16px;\r\n        font-size: 0.88rem;\r\n    }\r\n}\r\n\r\n/* Small Desktop/Large Tablet (769px-991px) */\r\n@media (max-width: 991px) and (min-width: 769px) {\r\n    .categoryTitle {\r\n        font-size: 3rem;\r\n    }\r\n\r\n    .categorySubtitle {\r\n        font-size: 1.5rem;\r\n    }\r\n\r\n    .servicesGrid {\r\n        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\r\n        gap: 30px;\r\n    }\r\n\r\n    .serviceNavigation {\r\n        top: 80px;\r\n        padding: 13px 0;\r\n    }\r\n\r\n    .serviceNavigation.compact {\r\n        top: 60px;\r\n        padding: 7px 0;\r\n    }\r\n\r\n    .categoryNavButton {\r\n        padding: 10px 20px;\r\n        font-size: 0.9rem;\r\n        gap: 10px;\r\n    }\r\n\r\n    .serviceNavigation.compact .categoryNavButton {\r\n        padding: 7px 14px;\r\n        font-size: 0.82rem;\r\n    }\r\n\r\n    .categoryContainer {\r\n        padding: 0 25px;\r\n    }\r\n}\r\n\r\n/* Mobile Landscape (481px-768px) */\r\n@media (max-width: 768px) and (min-width: 481px) {\r\n    .categorySection {\r\n        min-height: 100vh;\r\n        padding: 40px 0;\r\n        align-items: center;\r\n    }\r\n\r\n    .categoryContainer {\r\n        padding: 0 20px;\r\n    }\r\n\r\n    .categoryHeader {\r\n        margin-bottom: 40px;\r\n    }\r\n\r\n    .categoryTitle {\r\n        font-size: 2.2rem;\r\n        margin-bottom: 15px;\r\n    }\r\n\r\n    .categorySubtitle {\r\n        font-size: 1.2rem;\r\n        margin-bottom: 10px;\r\n    }\r\n\r\n    .categoryDescription {\r\n        font-size: 1rem;\r\n        margin-bottom: 30px;\r\n    }\r\n\r\n    .servicesGrid {\r\n        grid-template-columns: 1fr;\r\n        gap: 25px;\r\n        margin-bottom: 30px;\r\n    }\r\n\r\n    .serviceCard {\r\n        max-width: 100%;\r\n    }\r\n\r\n    .serviceImageContainer {\r\n        height: 220px;\r\n    }\r\n\r\n    .serviceContent {\r\n        padding: 25px;\r\n    }\r\n\r\n    .viewAllCard {\r\n        min-height: 350px;\r\n    }\r\n\r\n    .viewAllContent {\r\n        padding: 35px 25px;\r\n    }\r\n\r\n    .viewAllTitle {\r\n        font-size: 1.3rem;\r\n    }\r\n\r\n    .viewAllButton {\r\n        padding: 14px 28px;\r\n        font-size: 0.9rem;\r\n    }\r\n\r\n    .ctaTitle {\r\n        font-size: 2.2rem;\r\n    }\r\n\r\n    .ctaDescription {\r\n        font-size: 1.1rem;\r\n    }\r\n\r\n    .ctaButton {\r\n        padding: 16px 35px;\r\n        font-size: 1rem;\r\n    }\r\n}\r\n\r\n/* Mobile Portrait (320px-480px) */\r\n@media (max-width: 480px) and (min-width: 320px) {\r\n    .categorySection {\r\n        min-height: 100vh;\r\n        padding: 30px 0;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .categoryContainer {\r\n        padding: 0 15px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        height: 100%;\r\n    }\r\n\r\n    .categoryHeader {\r\n        margin-bottom: 30px;\r\n    }\r\n\r\n    .categoryTitle {\r\n        font-size: 1.8rem;\r\n        margin-bottom: 12px;\r\n    }\r\n\r\n    .categorySubtitle {\r\n        font-size: 1.1rem;\r\n        margin-bottom: 8px;\r\n    }\r\n\r\n    .categoryDescription {\r\n        font-size: 0.95rem;\r\n        margin-bottom: 25px;\r\n    }\r\n\r\n    .servicesGrid {\r\n        gap: 15px;\r\n        margin-bottom: 25px;\r\n        padding: 0 15px;\r\n    }\r\n\r\n    .serviceCard {\r\n        border-radius: 16px;\r\n    }\r\n\r\n    .serviceImageContainer {\r\n        height: 180px;\r\n    }\r\n\r\n    .serviceContent {\r\n        padding: 20px;\r\n    }\r\n\r\n    .serviceTitle {\r\n        font-size: 1.3rem;\r\n        margin-bottom: 12px;\r\n    }\r\n\r\n    .serviceDescription {\r\n        font-size: 0.9rem;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    .serviceDetails {\r\n        padding-top: 16px;\r\n    }\r\n\r\n    .serviceMeta {\r\n        flex-direction: column;\r\n        gap: 8px;\r\n        align-items: flex-start;\r\n    }\r\n\r\n    .duration {\r\n        font-size: 0.85rem;\r\n    }\r\n\r\n    .price {\r\n        font-size: 1.1rem;\r\n    }\r\n\r\n    .serviceOverlayButton {\r\n        padding: 12px 24px;\r\n        font-size: 0.9rem;\r\n    }\r\n\r\n    .ctaTitle {\r\n        font-size: 1.8rem;\r\n    }\r\n\r\n    .ctaDescription {\r\n        font-size: 1rem;\r\n    }\r\n\r\n    .ctaContainer {\r\n        padding: 0 20px;\r\n    }\r\n\r\n    .ctaButton {\r\n        padding: 14px 28px;\r\n        font-size: 0.9rem;\r\n    }\r\n}\r\n\r\n/* Extra Small Mobile (≤320px) */\r\n@media (max-width: 320px) {\r\n    .categorySection {\r\n        min-height: 100vh;\r\n        padding: 25px 0;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .categoryContainer {\r\n        padding: 0 10px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        height: 100%;\r\n    }\r\n\r\n    .categoryHeader {\r\n        margin-bottom: 25px;\r\n    }\r\n\r\n    .categoryTitle {\r\n        font-size: 1.6rem;\r\n        margin-bottom: 10px;\r\n    }\r\n\r\n    .categorySubtitle {\r\n        font-size: 1rem;\r\n        margin-bottom: 8px;\r\n    }\r\n\r\n    .categoryDescription {\r\n        font-size: 0.9rem;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    .servicesGrid {\r\n        gap: 18px;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    .serviceCard {\r\n        border-radius: 14px;\r\n    }\r\n\r\n    .serviceImageContainer {\r\n        height: 160px;\r\n    }\r\n\r\n    .serviceContent {\r\n        padding: 15px;\r\n    }\r\n\r\n    .serviceTitle {\r\n        font-size: 1.2rem;\r\n        margin-bottom: 10px;\r\n    }\r\n\r\n    .serviceDescription {\r\n        font-size: 0.85rem;\r\n        margin-bottom: 18px;\r\n    }\r\n\r\n    .serviceDetails {\r\n        padding-top: 14px;\r\n    }\r\n\r\n    .serviceMeta {\r\n        flex-direction: column;\r\n        gap: 6px;\r\n        align-items: flex-start;\r\n    }\r\n\r\n    .duration {\r\n        font-size: 0.8rem;\r\n    }\r\n\r\n    .price {\r\n        font-size: 1rem;\r\n    }\r\n\r\n    .serviceOverlayButton {\r\n        padding: 10px 20px;\r\n        font-size: 0.8rem;\r\n    }\r\n\r\n\r\n\r\n    .viewAllCard {\r\n        min-height: 300px;\r\n    }\r\n\r\n    .viewAllContent {\r\n        padding: 30px 20px;\r\n    }\r\n\r\n    .viewAllTitle {\r\n        font-size: 1.2rem;\r\n        margin-bottom: 12px;\r\n    }\r\n\r\n    .viewAllDescription {\r\n        font-size: 0.9rem;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    .viewAllButton {\r\n        padding: 12px 24px;\r\n        font-size: 0.8rem;\r\n    }\r\n\r\n    .ctaTitle {\r\n        font-size: 1.6rem;\r\n    }\r\n\r\n    .ctaDescription {\r\n        font-size: 0.95rem;\r\n    }\r\n\r\n    .ctaContainer {\r\n        padding: 0 15px;\r\n    }\r\n\r\n    .ctaButton {\r\n        padding: 12px 24px;\r\n        font-size: 0.8rem;\r\n        letter-spacing: 1px;\r\n    }\r\n}\r\n\r\n/* \r\n==============================================\r\n   LOADING AND ERROR STATES\r\n   ============================================== */\r\n.loadingContainer,\r\n.errorContainer {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    min-height: 60vh;\r\n    text-align: center;\r\n    padding: 40px 20px;\r\n}\r\n\r\n.loader {\r\n    color: #D0B49F;\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n    animation: pulse 2s infinite;\r\n}\r\n\r\n@keyframes pulse {\r\n\r\n    0%,\r\n    100% {\r\n        opacity: 1;\r\n    }\r\n\r\n    50% {\r\n        opacity: 0.5;\r\n    }\r\n}\r\n\r\n.errorContainer p {\r\n    color: rgba(255, 255, 255, 0.7);\r\n    font-size: 1.1rem;\r\n}","size_bytes":22464},"src/components/layout/Header.module.css":{"content":"/* ==============================================\n   HEADER LAYOUT\n   ============================================== */\n.headerSpacer {\n    width: 100%;\n    height: 80px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 20px 25px;\n    color: var(--color-text-primary);\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 100;\n    background: var(--color-primary-bg);\n    backdrop-filter: blur(10px);\n    transition: all 0.4s cubic-bezier(0.4, 0.0, 0.2, 1);\n    border-bottom: 1px solid transparent;\n    font-family: var(--font-accent);\n}\n\n/* Scrolled state - Much smaller */\n.headerScrolled {\n    height: 60px;\n    padding: 10px 20px;\n    background: rgba(32, 26, 30, 0.95);\n    border-bottom: 1px solid rgba(208, 180, 159, 0.2);\n    backdrop-filter: blur(20px);\n}\n\n/* Auth pages header */\n.headerAuth {\n    background: rgba(32, 26, 30, 0.98);\n}\n\n.headerContainer {\n    width: min(1400px, 90%);\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    max-width: 1400px;\n    margin: 0 auto;\n}\n\n/* Hide header when menu is open */\n.headerHidden {\n    display: none !important;\n}\n\n/* ==============================================\n   HEADER ELEMENTS\n   ============================================== */\n.headerLogo_container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: transform 0.3s ease;\n    cursor: pointer;\n}\n\n.headerLogo_container:hover {\n    transform: scale(1.05);\n}\n\n.headerLogo {\n    height: 60px;\n    width: 60px;\n    transition: all 0.4s cubic-bezier(0.4, 0.0, 0.2, 1);\n}\n\n.headerScrolled .headerLogo {\n    height: 45px;\n    width: 45px;\n}\n\n/* Navigation */\n.headerNav {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    flex: 1;\n}\n\n.headerLinks {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 20px;\n}\n\n/* Button Base Styles */\n.headerCTA_button {\n    padding: 12px 24px;\n    border-radius: var(--border-radius, 8px);\n    cursor: pointer;\n    font-size: 1rem;\n    font-weight: 600;\n    font-family: var(--font-accent);\n    transition: all 0.4s cubic-bezier(0.4, 0.0, 0.2, 1);\n    color: var(--color-primary-bg);\n    background-color: var(--color-accent-primary);\n    border: 2px solid var(--color-accent-primary);\n    text-decoration: none;\n    display: inline-block;\n    white-space: nowrap;\n    min-width: 120px;\n    text-align: center;\n    letter-spacing: 0.5px;\n}\n\n.headerScrolled .headerCTA_button {\n    padding: 8px 18px;\n    font-size: 0.9rem;\n    min-width: 100px;\n}\n\n.headerCTA_button:hover {\n    color: var(--color-accent-primary);\n    background-color: transparent;\n    transform: translateY(-2px);\n}\n\n.headerCTA_button:active {\n    transform: translateY(0);\n    outline: none;\n}\n\n.headerMenu_button {\n    padding: 12px;\n    background: none;\n    border: none;\n    cursor: pointer;\n    color: var(--color-primary-bg);\n    background-color: var(--color-accent-primary);\n    font-size: 1.5rem;\n    font-family: var(--font-accent);\n    transition: all 0.4s cubic-bezier(0.4, 0.0, 0.2, 1);\n    border-radius: var(--border-radius, 8px);\n    border: 2px solid var(--color-accent-primary);\n    width: 48px;\n    height: 48px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.headerScrolled .headerMenu_button {\n    width: 42px;\n    height: 42px;\n    padding: 9px;\n    font-size: 1.3rem;\n}\n\n.headerMenu_button:hover {\n    color: var(--color-accent-primary);\n    background-color: transparent;\n    border: 2px solid var(--color-accent-primary);\n    transform: translateY(-2px);\n}\n\n.headerMenu_button:active {\n    transform: translateY(0);\n    outline: none;\n}\n\n/* ==============================================\n   NAVIGATION POPUP\n   ============================================== */\n.headerNav_popup {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    z-index: 100;\n    overflow: hidden;\n}\n\n.headerNav_popup_left {\n    width: 70vw;\n    height: 100vh;\n    background: var(--color-primary-bg);\n    box-shadow: var(--shadow);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n}\n\n.headerNav_popup_right {\n    width: 30vw;\n    height: 100vh;\n    background: var(--color-accent-primary);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n}\n\n/* ==============================================\n   POPUP CONTENT\n   ============================================== */\n.headerNav_popup_logo_container {\n    position: absolute;\n    top: 10px;\n    left: 30px;\n    z-index: 101;\n}\n\n.headerNav_popup_logo_container img {\n    height: 60px;\n    width: 60px;\n}\n\n.headerNav_popup_close_container {\n    position: absolute;\n    top: 30px;\n    right: 30px;\n    z-index: 101;\n}\n\n.headerNav_popup_close_button {\n    background: none;\n    border: none;\n    font-size: 2.5rem;\n    color: var(--color-primary-bg);\n    cursor: pointer;\n    padding: 10px 20px;\n    border-radius: 50px;\n    font-weight: 600;\n    transition: var(--transition);\n}\n\n.headerNav_popup_close_button:hover {\n    background: var(--color-primary-bg);\n    color: var(--color-accent-primary);\n}\n\n.headerNav_popup_left_content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n\n.headerNav_popup_left_content_top {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n    text-align: center;\n    position: relative;\n}\n\n.headerNav_popup_left_content_top h1 {\n    font-size: clamp(8rem, 15vw, 18rem);\n    font-weight: 100;\n    font-family: var(--font-heading);\n    color: var(--color-text-primary);\n    letter-spacing: -8px;\n    margin: 0;\n    line-height: 1;\n    opacity: 1;\n    background: linear-gradient(135deg, #ffffff 0%, #D0B49F 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n}\n\n.headerNav_popup_left_content_top p {\n    font-size: clamp(12rem, 25vw, 28rem);\n    font-weight: 300;\n    font-family: var(--font-heading);\n    color: #ebd0bc;\n    margin: -10rem 0 0 0;\n    letter-spacing: -12px;\n    line-height: 1.5;\n    opacity:0.7;\n    background: linear-gradient(135deg, #D0B49F 0%, #B8A082 100%);\n    background-clip: text;\n}\n\n.headerNav_popup_left_content_top_p_firstLetter {\n    display: inline-block;\n    transform: scaleY(1.2) translateY(4%);\n    transform-origin: bottom;\n    font-weight: 400;\n}\n\n/* ==============================================\n   ANIMATIONS\n   ============================================== */\n@keyframes slideInLeft {\n    from {\n        transform: translateX(-100%);\n        opacity: 0;\n    }\n\n    to {\n        transform: translateX(0);\n        opacity: 1;\n    }\n}\n\n@keyframes slideInRight {\n    from {\n        transform: translateX(100%);\n        opacity: 0;\n    }\n\n    to {\n        transform: translateX(0);\n        opacity: 1;\n    }\n}\n\n@keyframes slideOutLeft {\n    from {\n        transform: translateX(0);\n        opacity: 1;\n    }\n\n    to {\n        transform: translateX(-100%);\n        opacity: 0;\n    }\n}\n\n@keyframes slideOutRight {\n    from {\n        transform: translateX(0);\n        opacity: 1;\n    }\n\n    to {\n        transform: translateX(100%);\n        opacity: 0;\n    }\n}\n\n.slideInLeft {\n    animation: slideInLeft var(--animation-duration) forwards;\n}\n\n.slideOutLeft {\n    animation: slideOutLeft var(--animation-duration) forwards;\n}\n\n.slideInRight {\n    animation: slideInRight var(--animation-duration) forwards;\n}\n\n.slideOutRight {\n    animation: slideOutRight var(--animation-duration) forwards;\n}\n\n/* ==============================================\n   RESPONSIVE DESIGN\n   ============================================== */\n\n/* Large Desktop (1440px+) */\n@media (min-width: 1440px) {\n    .headerContainer {\n        width: 85%;\n        max-width: 1600px;\n    }\n\n    .headerLogo {\n        height: 70px;\n        width: 70px;\n    }\n\n    .headerScrolled .headerLogo {\n        height: 55px;\n        width: 55px;\n    }\n\n    .headerCTA_button {\n        padding: 14px 28px;\n        font-size: 1.1rem;\n        min-width: 140px;\n    }\n\n    .headerScrolled .headerCTA_button {\n        padding: 10px 22px;\n        font-size: 1rem;\n        min-width: 120px;\n    }\n\n    .headerMenu_button {\n        width: 52px;\n        height: 52px;\n        font-size: 1.6rem;\n    }\n\n    .headerScrolled .headerMenu_button {\n        width: 46px;\n        height: 46px;\n        font-size: 1.4rem;\n    }\n}\n\n/* Desktop (1200px - 1439px) */\n@media (max-width: 1439px) and (min-width: 1200px) {\n    .headerContainer {\n        width: 90%;\n        max-width: 1400px;\n    }\n\n    .headerLogo {\n        height: 65px;\n        width: 65px;\n    }\n\n    .headerScrolled .headerLogo {\n        height: 50px;\n        width: 50px;\n    }\n\n    .headerCTA_button {\n        padding: 13px 26px;\n        font-size: 1.05rem;\n        min-width: 130px;\n    }\n\n    .headerScrolled .headerCTA_button {\n        padding: 9px 20px;\n        font-size: 0.95rem;\n        min-width: 110px;\n    }\n\n    .headerMenu_button {\n        width: 50px;\n        height: 50px;\n        font-size: 1.55rem;\n    }\n\n    .headerScrolled .headerMenu_button {\n        width: 44px;\n        height: 44px;\n        font-size: 1.35rem;\n    }\n}\n\n/* Large Tablet (992px - 1199px) */\n@media (max-width: 1199px) and (min-width: 992px) {\n    .headerContainer {\n        width: 95%;\n        max-width: 1200px;\n    }\n\n    .headerSpacer {\n        height: 75px;\n        padding: 18px 24px;\n    }\n\n    .headerScrolled {\n        height: 55px;\n        padding: 10px 20px;\n    }\n\n    .headerLogo {\n        height: 58px;\n        width: 58px;\n    }\n\n    .headerScrolled .headerLogo {\n        height: 45px;\n        width: 45px;\n    }\n\n    .headerCTA_button {\n        padding: 10px 20px;\n        font-size: 0.95rem;\n        min-width: 100px;\n    }\n\n    .headerScrolled .headerCTA_button {\n        padding: 8px 16px;\n        font-size: 0.9rem;\n        min-width: 90px;\n    }\n\n    .headerMenu_button {\n        width: 46px;\n        height: 46px;\n        font-size: 1.4rem;\n    }\n\n    .headerScrolled .headerMenu_button {\n        width: 40px;\n        height: 40px;\n        font-size: 1.25rem;\n    }\n}\n\n/* Tablet (768px - 991px) */\n@media (max-width: 991px) and (min-width: 769px) {\n    .headerSpacer {\n        height: 70px;\n        padding: 15px 20px;\n    }\n\n    .headerScrolled {\n        height: 50px;\n        padding: 12px 20px;\n    }\n\n    .headerContainer {\n        width: 100%;\n        max-width: 992px;\n    }\n\n    .headerLogo {\n        height: 55px;\n        width: 55px;\n    }\n\n    .headerScrolled .headerLogo {\n        height: 42px;\n        width: 42px;\n    }\n\n    .headerLinks {\n        gap: 15px;\n    }\n\n    .headerCTA_button {\n        padding: 10px 16px;\n        font-size: 0.9rem;\n        min-width: 90px;\n    }\n\n    .headerScrolled .headerCTA_button {\n        padding: 8px 14px;\n        font-size: 0.85rem;\n        min-width: 80px;\n    }\n\n    .headerMenu_button {\n        width: 44px;\n        height: 44px;\n        font-size: 1.3rem;\n        padding: 10px;\n    }\n\n    .headerScrolled .headerMenu_button {\n        width: 38px;\n        height: 38px;\n        font-size: 1.15rem;\n        padding: 8px;\n    }\n}\n\n/* Mobile Landscape (481px - 768px) */\n@media (max-width: 768px) and (min-width: 481px) {\n    .headerSpacer {\n        height: 65px;\n        padding: 12px 16px;\n    }\n\n    .headerScrolled {\n        height: 45px;\n        padding: 8px 16px;\n    }\n\n    .headerContainer {\n        width: 100%;\n        max-width: 768px;\n    }\n\n    .headerLogo {\n        height: 48px;\n        width: 48px;\n    }\n\n    .headerScrolled .headerLogo {\n        height: 38px;\n        width: 38px;\n    }\n\n    .headerCTA_button.headerCTA_header {\n        display: none;\n    }\n\n    .headerMenu_button {\n        width: 40px;\n        height: 40px;\n        font-size: 1.15rem;\n        padding: 9px;\n    }\n\n    .headerScrolled .headerMenu_button {\n        width: 35px;\n        height: 35px;\n        font-size: 1rem;\n        padding: 7px;\n    }\n\n    .headerNav_popup {\n        flex-direction: column;\n    }\n\n    .headerNav_popup_left {\n        display: none;\n    }\n\n    .headerNav_popup_right {\n        width: 100vw;\n        height: 100vh;\n    }\n\n    .headerNav_popup_close_container {\n        top: 20px;\n        right: 20px;\n    }\n\n    .headerNav_popup_close_button {\n        font-size: 1.8rem;\n        padding: 8px 16px;\n    }\n}\n\n/* Mobile Portrait (320px - 480px) */\n@media (max-width: 480px) {\n    .headerSpacer {\n        height: 60px;\n        padding: 10px 14px;\n    }\n\n    .headerScrolled {\n        height: 40px;\n        padding: 6px 14px;\n    }\n\n    .headerContainer {\n        width: 100%;\n        max-width: 480px;\n    }\n\n    .headerLogo {\n        height: 42px;\n        width: 42px;\n    }\n\n    .headerScrolled .headerLogo {\n        height: 34px;\n        width: 34px;\n    }\n\n    .headerCTA_button.headerCTA_header {\n        display: none;\n    }\n\n    .headerMenu_button {\n        width: 38px;\n        height: 38px;\n        font-size: 1.05rem;\n        padding: 8px;\n    }\n\n    .headerScrolled .headerMenu_button {\n        width: 32px;\n        height: 32px;\n        font-size: 0.95rem;\n        padding: 6px;\n    }\n\n    .headerNav_popup {\n        flex-direction: column;\n    }\n\n    .headerNav_popup_left {\n        display: none;\n    }\n\n    .headerNav_popup_right {\n        width: 100vw;\n        height: 100vh;\n    }\n\n    .headerNav_popup_close_container {\n        top: 15px;\n        right: 15px;\n    }\n\n    .headerNav_popup_close_button {\n        font-size: 1.5rem;\n        padding: 6px 12px;\n        border-radius: 20px;\n    }\n}\n\n/* Extra Small Mobile (max 320px) */\n@media (max-width: 320px) {\n    .headerSpacer {\n        height: 55px;\n        padding: 8px 10px;\n    }\n\n    .headerScrolled {\n        height: 35px;\n        padding: 5px 10px;\n    }\n\n    .headerContainer {\n        width: 100%;\n        max-width: 320px;\n    }\n\n    .headerLogo {\n        height: 38px;\n        width: 38px;\n    }\n\n    .headerScrolled .headerLogo {\n        height: 30px;\n        width: 30px;\n    }\n\n    .headerMenu_button {\n        width: 35px;\n        height: 35px;\n        font-size: 0.95rem;\n        padding: 7px;\n    }\n\n    .headerScrolled .headerMenu_button {\n        width: 30px;\n        height: 30px;\n        font-size: 0.85rem;\n        padding: 5px;\n    }\n\n    .headerNav_popup_close_container {\n        top: 12px;\n        right: 12px;\n    }\n\n    .headerNav_popup_close_button {\n        font-size: 1.2rem;\n        padding: 5px 10px;\n        border-radius: 15px;\n    }\n}","size_bytes":14617},"src/components/layout/Layout.tsx":{"content":"import { ReactNode } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\ninterface LayoutProps {\n  children: ReactNode;\n}\n\nexport default function Layout({ children }: LayoutProps) {\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        {children}\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":385},"src/app/student/login/StudentLogin.module.css":{"content":".loginPage {\r\n    min-height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: linear-gradient(135deg, #000000 0%, #1a1a1a 100%);\r\n    padding: var(--spacing-lg);\r\n}\r\n\r\n.loginContainer {\r\n    width: 100%;\r\n    max-width: 400px;\r\n}\r\n\r\n.loginCard {\r\n    background-color: var(--color-card-bg);\r\n    border: 1px solid var(--color-border);\r\n    border-radius: var(--radius-xl);\r\n    padding: var(--spacing-3xl);\r\n    box-shadow: var(--shadow-xl);\r\n}\r\n\r\n.header {\r\n    text-align: center;\r\n    margin-bottom: var(--spacing-2xl);\r\n}\r\n\r\n.title {\r\n    font-size: var(--font-size-3xl);\r\n    font-weight: 700;\r\n    color: var(--color-text-primary);\r\n    margin-bottom: var(--spacing-sm);\r\n}\r\n\r\n.subtitle {\r\n    color: var(--color-text-secondary);\r\n    font-size: var(--font-size-base);\r\n}\r\n\r\n.errorMessage {\r\n    background-color: rgba(244, 67, 54, 0.1);\r\n    border: 1px solid rgba(244, 67, 54, 0.3);\r\n    border-radius: var(--radius-md);\r\n    padding: var(--spacing-md);\r\n    margin-bottom: var(--spacing-lg);\r\n    color: #f44336;\r\n    text-align: center;\r\n    font-size: var(--font-size-sm);\r\n}\r\n\r\n.form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: var(--spacing-lg);\r\n    margin-bottom: var(--spacing-xl);\r\n}\r\n\r\n.formGroup {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: var(--spacing-sm);\r\n}\r\n\r\n.formGroup label {\r\n    font-weight: 600;\r\n    color: var(--color-text-primary);\r\n    font-size: var(--font-size-sm);\r\n}\r\n\r\n.submitButton {\r\n    width: 100%;\r\n    margin-top: var(--spacing-md);\r\n}\r\n\r\n.submitButton:disabled {\r\n    opacity: 0.6;\r\n    cursor: not-allowed;\r\n}\r\n\r\n.forgotPassword {\r\n    text-align: center;\r\n    margin: var(--spacing-lg) 0;\r\n}\r\n\r\n.forgotLink {\r\n    background: none;\r\n    border: none;\r\n    color: var(--color-accent-primary);\r\n    text-decoration: underline;\r\n    font-size: var(--font-size-sm);\r\n    cursor: pointer;\r\n    transition: color var(--transition-normal);\r\n}\r\n\r\n.forgotLink:hover {\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n.footer {\r\n    text-align: center;\r\n    padding-top: var(--spacing-lg);\r\n    border-top: 1px solid var(--color-border);\r\n}\r\n\r\n.footer p {\r\n    margin-bottom: var(--spacing-sm);\r\n}\r\n\r\n.helpLink,\r\n.backLink {\r\n    color: var(--color-text-secondary);\r\n    text-decoration: none;\r\n    font-size: var(--font-size-sm);\r\n    transition: color var(--transition-normal);\r\n}\r\n\r\n.helpLink:hover,\r\n.backLink:hover {\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n@media (max-width: 480px) {\r\n    .loginCard {\r\n        padding: var(--spacing-xl);\r\n    }\r\n\r\n    .title {\r\n        font-size: var(--font-size-2xl);\r\n    }\r\n}","size_bytes":2644},"tailwind.config.js":{"content":"/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/components/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/app/**/*.{js,ts,jsx,tsx,mdx}',\n  ],\n  theme: {\n    extend: {\n      backgroundImage: {\n        'gradient-radial': 'radial-gradient(var(--tw-gradient-stops))',\n        'gradient-conic':\n          'conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))',\n      },\n    },\n  },\n  plugins: [],\n}","size_bytes":479},"src/app/admin/dashboard/Dashboard.module.css":{"content":".dashboard {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n}\r\n\r\n.header {\r\n    margin-bottom: var(--spacing-3xl);\r\n}\r\n\r\n.title {\r\n    font-size: var(--font-size-4xl);\r\n    font-weight: 700;\r\n    color: var(--color-text-primary);\r\n    margin-bottom: var(--spacing-sm);\r\n}\r\n\r\n.subtitle {\r\n    font-size: var(--font-size-lg);\r\n    color: var(--color-text-secondary);\r\n}\r\n\r\n.loading {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    min-height: 50vh;\r\n    color: var(--color-text-secondary);\r\n    font-size: var(--font-size-lg);\r\n}\r\n\r\n/* Stats Grid */\r\n.statsGrid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n    gap: var(--spacing-xl);\r\n    margin-bottom: var(--spacing-3xl);\r\n}\r\n\r\n.statCard {\r\n    padding: var(--spacing-xl);\r\n    display: flex;\r\n    align-items: center;\r\n    gap: var(--spacing-lg);\r\n    transition: all var(--transition-normal);\r\n}\r\n\r\n.statCard:hover {\r\n    transform: translateY(-4px);\r\n    border-color: var(--color-border-hover);\r\n}\r\n\r\n.statIcon {\r\n    font-size: var(--font-size-3xl);\r\n    background-color: var(--color-tertiary-bg);\r\n    padding: var(--spacing-lg);\r\n    border-radius: var(--radius-lg);\r\n    border: 1px solid var(--color-border);\r\n}\r\n\r\n.statContent {\r\n    flex: 1;\r\n}\r\n\r\n.statNumber {\r\n    font-size: var(--font-size-3xl);\r\n    font-weight: 700;\r\n    color: var(--color-text-primary);\r\n    margin-bottom: var(--spacing-xs);\r\n}\r\n\r\n.statLabel {\r\n    font-size: var(--font-size-sm);\r\n    color: var(--color-text-secondary);\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n}\r\n\r\n/* Sections */\r\n.sectionTitle {\r\n    font-size: var(--font-size-2xl);\r\n    font-weight: 600;\r\n    color: var(--color-text-primary);\r\n    margin-bottom: var(--spacing-xl);\r\n}\r\n\r\n/* Quick Actions */\r\n.quickActions {\r\n    margin-bottom: var(--spacing-3xl);\r\n}\r\n\r\n.actionsGrid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n    gap: var(--spacing-lg);\r\n}\r\n\r\n.actionCard {\r\n    padding: var(--spacing-xl);\r\n    display: flex;\r\n    align-items: center;\r\n    gap: var(--spacing-lg);\r\n    text-decoration: none;\r\n    transition: all var(--transition-normal);\r\n}\r\n\r\n.actionCard:hover {\r\n    transform: translateY(-4px);\r\n    border-color: var(--color-text-primary);\r\n}\r\n\r\n.actionIcon {\r\n    font-size: var(--font-size-2xl);\r\n    background-color: var(--color-text-primary);\r\n    color: var(--color-primary-bg);\r\n    padding: var(--spacing-md);\r\n    border-radius: var(--radius-md);\r\n}\r\n\r\n.actionContent h3 {\r\n    font-size: var(--font-size-lg);\r\n    font-weight: 600;\r\n    color: var(--color-text-primary);\r\n    margin-bottom: var(--spacing-xs);\r\n}\r\n\r\n.actionContent p {\r\n    font-size: var(--font-size-sm);\r\n    color: var(--color-text-secondary);\r\n}\r\n\r\n/* Recent Activity */\r\n.recentActivity {\r\n    margin-bottom: var(--spacing-3xl);\r\n}\r\n\r\n.activityCard {\r\n    padding: var(--spacing-xl);\r\n}\r\n\r\n.activityList {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: var(--spacing-lg);\r\n}\r\n\r\n.activityItem {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    gap: var(--spacing-md);\r\n    padding: var(--spacing-md);\r\n    background-color: var(--color-secondary-bg);\r\n    border-radius: var(--radius-md);\r\n    border: 1px solid var(--color-border);\r\n}\r\n\r\n.activityIcon {\r\n    font-size: var(--font-size-lg);\r\n    background-color: var(--color-tertiary-bg);\r\n    padding: var(--spacing-sm);\r\n    border-radius: var(--radius-md);\r\n    border: 1px solid var(--color-border);\r\n}\r\n\r\n.activityContent {\r\n    flex: 1;\r\n}\r\n\r\n.activityText {\r\n    color: var(--color-text-secondary);\r\n    margin-bottom: var(--spacing-xs);\r\n    line-height: 1.5;\r\n}\r\n\r\n.activityTime {\r\n    font-size: var(--font-size-xs);\r\n    color: var(--color-text-muted);\r\n}\r\n\r\n.noActivity {\r\n    text-align: center;\r\n    padding: var(--spacing-2xl);\r\n    color: var(--color-text-secondary);\r\n}\r\n\r\n/* Mobile Responsive */\r\n@media (max-width: 768px) {\r\n    .statsGrid {\r\n        grid-template-columns: 1fr;\r\n    }\r\n\r\n    .actionsGrid {\r\n        grid-template-columns: 1fr;\r\n    }\r\n\r\n    .title {\r\n        font-size: var(--font-size-3xl);\r\n    }\r\n\r\n    .statCard,\r\n    .actionCard {\r\n        flex-direction: column;\r\n        text-align: center;\r\n        gap: var(--spacing-md);\r\n    }\r\n\r\n    .activityItem {\r\n        flex-direction: column;\r\n        text-align: center;\r\n    }\r\n}","size_bytes":4380},"src/app/privacy-policy/PrivacyPolicy.module.css":{"content":".privacyPage {\r\n  padding: 120px 0 80px 0;\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #0f0f0f 0%, #1a1a1a 50%, #0f0f0f 100%);\r\n}\r\n\r\n.header {\r\n  text-align: center;\r\n  margin-bottom: 60px;\r\n  padding-bottom: 40px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.title {\r\n  font-size: clamp(2.5rem, 5vw, 3.5rem);\r\n  font-weight: 800;\r\n  color: #ffffff;\r\n  margin-bottom: 16px;\r\n  background: linear-gradient(135deg, #ffffff 0%, #D0B49F 100%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n}\r\n\r\n.lastUpdated {\r\n  color: rgba(255, 255, 255, 0.6);\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.content {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  background: rgba(255, 255, 255, 0.05);\r\n  backdrop-filter: blur(20px);\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  border-radius: 20px;\r\n  padding: 40px;\r\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.section {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.section:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.section h2 {\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  color: #D0B49F;\r\n  margin-bottom: 16px;\r\n  padding-bottom: 8px;\r\n  border-bottom: 2px solid rgba(208, 180, 159, 0.3);\r\n}\r\n\r\n.section h3 {\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  color: #ffffff;\r\n  margin: 24px 0 12px 0;\r\n}\r\n\r\n.section p {\r\n  color: rgba(255, 255, 255, 0.8);\r\n  line-height: 1.7;\r\n  margin-bottom: 16px;\r\n  font-size: 1rem;\r\n}\r\n\r\n.section ul {\r\n  margin: 16px 0;\r\n  padding-left: 24px;\r\n}\r\n\r\n.section li {\r\n  color: rgba(255, 255, 255, 0.8);\r\n  line-height: 1.6;\r\n  margin-bottom: 8px;\r\n  font-size: 1rem;\r\n}\r\n\r\n.section li::marker {\r\n  color: #D0B49F;\r\n}\r\n\r\n.link {\r\n  color: #D0B49F;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  transition: all 0.3s ease;\r\n  border-bottom: 1px solid transparent;\r\n}\r\n\r\n.link:hover {\r\n  color: #E6D3B7;\r\n  border-bottom-color: #E6D3B7;\r\n}\r\n\r\n.contactInfo {\r\n  background: rgba(208, 180, 159, 0.1);\r\n  border: 1px solid rgba(208, 180, 159, 0.2);\r\n  border-radius: 12px;\r\n  padding: 24px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.contactInfo p {\r\n  margin-bottom: 8px;\r\n  color: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n.contactInfo p:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n/* Mobile Responsiveness */\r\n@media (max-width: 768px) {\r\n  .privacyPage {\r\n    padding: 100px 0 60px 0;\r\n  }\r\n\r\n  .content {\r\n    margin: 0 20px;\r\n    padding: 30px 24px;\r\n    border-radius: 16px;\r\n  }\r\n\r\n  .section h2 {\r\n    font-size: 1.3rem;\r\n  }\r\n\r\n  .section h3 {\r\n    font-size: 1.1rem;\r\n  }\r\n\r\n  .section p,\r\n  .section li {\r\n    font-size: 0.95rem;\r\n  }\r\n\r\n  .contactInfo {\r\n    padding: 20px;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .content {\r\n    margin: 0 16px;\r\n    padding: 24px 20px;\r\n  }\r\n\r\n  .section ul {\r\n    padding-left: 20px;\r\n  }\r\n}","size_bytes":2766},"src/app/admin/services/page.tsx":{"content":"\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport AdminLayout from \"../../../components/layout/AdminLayout\";\nimport styles from \"./Services.module.css\";\n\ninterface Service {\n  id: string;\n  name: string;\n  description: string;\n  duration: string;\n  price: number;\n  category: string;\n  status: \"active\" | \"inactive\";\n}\n\nexport default function ServicesPage() {\n  const [services, setServices] = useState<Service[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [editingService, setEditingService] = useState<Service | null>(null);\n  const [newService, setNewService] = useState({\n    name: \"\",\n    description: \"\",\n    duration: \"\",\n    price: \"\",\n    category: \"\",\n  });\n  const [editService, setEditService] = useState({\n    name: \"\",\n    description: \"\",\n    duration: \"\",\n    price: \"\",\n    category: \"\",\n  });\n  const router = useRouter();\n\n  useEffect(() => {\n    const adminSession = localStorage.getItem(\"admin_session\");\n    if (!adminSession) {\n      router.push(\"/admin/login\");\n      return;\n    }\n    fetchServices();\n  }, []);\n\n  const fetchServices = async () => {\n    try {\n      const response = await fetch(\"/api/admin/services\");\n      const data = await response.json();\n      if (response.ok) {\n        setServices(data.services);\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch services:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleAddService = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"/api/admin/services\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          ...newService,\n          price: parseFloat(newService.price),\n        }),\n      });\n\n      if (response.ok) {\n        setShowAddForm(false);\n        setNewService({\n          name: \"\",\n          description: \"\",\n          duration: \"\",\n          price: \"\",\n          category: \"\",\n        });\n        fetchServices();\n        alert(\"Service added successfully!\");\n      }\n    } catch (error) {\n      alert(\"Error adding service\");\n    }\n  };\n\n  const handleEditService = (service: Service) => {\n    setEditingService(service);\n    setEditService({\n      name: service.name,\n      description: service.description,\n      duration: service.duration,\n      price: service.price.toString(),\n      category: service.category,\n    });\n    setShowEditForm(true);\n  };\n\n  const handleUpdateService = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!editingService) return;\n\n    try {\n      const response = await fetch(`/api/admin/services/${editingService.id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          ...editService,\n          price: parseFloat(editService.price),\n        }),\n      });\n\n      if (response.ok) {\n        setShowEditForm(false);\n        setEditingService(null);\n        setEditService({\n          name: \"\",\n          description: \"\",\n          duration: \"\",\n          price: \"\",\n          category: \"\",\n        });\n        fetchServices();\n        alert(\"Service updated successfully!\");\n      } else {\n        const data = await response.json();\n        alert(data.error || \"Failed to update service\");\n      }\n    } catch (error) {\n      alert(\"Error updating service\");\n    }\n  };\n\n  const toggleServiceStatus = async (\n    serviceId: string,\n    currentStatus: string\n  ) => {\n    const newStatus = currentStatus === \"active\" ? \"inactive\" : \"active\";\n    try {\n      const response = await fetch(`/api/admin/services/${serviceId}`, {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ status: newStatus }),\n      });\n      if (response.ok) {\n        fetchServices();\n      }\n    } catch (error) {\n      alert(\"Error updating service status\");\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <AdminLayout>\n        <div className={styles.loading}>Loading services...</div>\n      </AdminLayout>\n    );\n  }\n\n  return (\n    <AdminLayout>\n      <div className={styles.servicesPage}>\n        <div className={styles.header}>\n          <h1 className={styles.title}>Services Management</h1>\n          <button\n            onClick={() => setShowAddForm(true)}\n            className=\"btn btn-primary\"\n          >\n            Add New Service\n          </button>\n        </div>\n\n        <div className={styles.servicesGrid}>\n          {services.map((service) => (\n            <div key={service.id} className={`card ${styles.serviceCard}`}>\n              <div className={styles.serviceHeader}>\n                <h3 className={styles.serviceName}>{service.name}</h3>\n                <span className={`${styles.status} ${styles[service.status]}`}>\n                  {service.status}\n                </span>\n              </div>\n              <p className={styles.serviceDescription}>{service.description}</p>\n              <div className={styles.serviceDetails}>\n                <div className={styles.detailItem}>\n                  <span>Duration: {service.duration}</span>\n                </div>\n                <div className={styles.detailItem}>\n                  <span>Price: ${service.price}</span>\n                </div>\n                <div className={styles.detailItem}>\n                  <span>Category: {service.category}</span>\n                </div>\n              </div>\n              <div className={styles.serviceActions}>\n                <button\n                  className=\"btn btn-secondary btn-sm\"\n                  onClick={() => handleEditService(service)}\n                >\n                  Edit\n                </button>\n                <button\n                  className=\"btn btn-primary btn-sm\"\n                  onClick={() =>\n                    toggleServiceStatus(service.id, service.status)\n                  }\n                >\n                  {service.status === \"active\" ? \"Deactivate\" : \"Activate\"}\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {showAddForm && (\n          <div className={styles.modal}>\n            <div className={styles.modalContent}>\n              <div className={styles.modalHeader}>\n                <h2>Add New Service</h2>\n                <button\n                  onClick={() => setShowAddForm(false)}\n                  className={styles.closeBtn}\n                >\n                  ×\n                </button>\n              </div>\n              <form onSubmit={handleAddService} className={styles.form}>\n                <div className={styles.formGroup}>\n                  <label>Service Name</label>\n                  <input\n                    type=\"text\"\n                    value={newService.name}\n                    onChange={(e) =>\n                      setNewService({ ...newService, name: e.target.value })\n                    }\n                    required\n                    className=\"input\"\n                  />\n                </div>\n                <div className={styles.formGroup}>\n                  <label>Description</label>\n                  <textarea\n                    value={newService.description}\n                    onChange={(e) =>\n                      setNewService({\n                        ...newService,\n                        description: e.target.value,\n                      })\n                    }\n                    required\n                    className=\"input\"\n                    rows={3}\n                  />\n                </div>\n                <div className={styles.formRow}>\n                  <div className={styles.formGroup}>\n                    <label>Duration</label>\n                    <input\n                      type=\"text\"\n                      value={newService.duration}\n                      onChange={(e) =>\n                        setNewService({\n                          ...newService,\n                          duration: e.target.value,\n                        })\n                      }\n                      required\n                      className=\"input\"\n                      placeholder=\"e.g., 60 minutes\"\n                    />\n                  </div>\n                  <div className={styles.formGroup}>\n                    <label>Price ($)</label>\n                    <input\n                      type=\"number\"\n                      value={newService.price}\n                      onChange={(e) =>\n                        setNewService({ ...newService, price: e.target.value })\n                      }\n                      required\n                      className=\"input\"\n                      min=\"0\"\n                      step=\"0.01\"\n                    />\n                  </div>\n                </div>\n                <div className={styles.formGroup}>\n                  <label>Category</label>\n                  <div className={styles.categoryInputGroup}>\n                    <select\n                      value={newService.category}\n                      onChange={(e) =>\n                        setNewService({ ...newService, category: e.target.value })\n                      }\n                      required\n                      className=\"input\"\n                    >\n                      <option value=\"\">Select Category</option>\n                      <option value=\"HAIR\">Hair</option>\n                      <option value=\"MAKEUP\">Makeup</option>\n                      <option value=\"NAILS\">Nails</option>\n                      <option value=\"SKIN\">Skin Care</option>\n                      <option value=\"MASSAGE\">Massage</option>\n                      <option value=\"SPA\">Spa</option>\n                      <option value=\"BROWS\">Brows</option>\n                      <option value=\"WAXING\">Waxing</option>\n                      <option value=\"TANNING\">Tanning</option>\n                      <option value=\"custom\">+ Add New Category</option>\n                    </select>\n                    {newService.category === 'custom' && (\n                      <input\n                        type=\"text\"\n                        placeholder=\"Enter new category name\"\n                        onChange={(e) => {\n                          const customCategory = e.target.value.toUpperCase().replace(/\\s+/g, '_');\n                          setNewService({ ...newService, category: customCategory });\n                        }}\n                        className=\"input\"\n                        style={{ marginTop: '8px' }}\n                      />\n                    )}\n                  </div>\n                </div>\n                <div className={styles.formActions}>\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowAddForm(false)}\n                    className=\"btn btn-secondary\"\n                  >\n                    Cancel\n                  </button>\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Add Service\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n\n        {/* Edit Service Modal */}\n        {showEditForm && editingService && (\n          <div className={styles.modal}>\n            <div className={styles.modalContent}>\n              <div className={styles.modalHeader}>\n                <h2>Edit Service</h2>\n                <button\n                  onClick={() => {\n                    setShowEditForm(false);\n                    setEditingService(null);\n                  }}\n                  className={styles.closeBtn}\n                >\n                  ×\n                </button>\n              </div>\n              <form onSubmit={handleUpdateService} className={styles.form}>\n                <div className={styles.formGroup}>\n                  <label>Service Name</label>\n                  <input\n                    type=\"text\"\n                    value={editService.name}\n                    onChange={(e) =>\n                      setEditService({ ...editService, name: e.target.value })\n                    }\n                    required\n                    className=\"input\"\n                  />\n                </div>\n                <div className={styles.formGroup}>\n                  <label>Description</label>\n                  <textarea\n                    value={editService.description}\n                    onChange={(e) =>\n                      setEditService({\n                        ...editService,\n                        description: e.target.value,\n                      })\n                    }\n                    required\n                    className=\"input\"\n                    rows={3}\n                  />\n                </div>\n                <div className={styles.formRow}>\n                  <div className={styles.formGroup}>\n                    <label>Duration</label>\n                    <input\n                      type=\"text\"\n                      value={editService.duration}\n                      onChange={(e) =>\n                        setEditService({\n                          ...editService,\n                          duration: e.target.value,\n                        })\n                      }\n                      required\n                      className=\"input\"\n                      placeholder=\"e.g., 60 minutes\"\n                    />\n                  </div>\n                  <div className={styles.formGroup}>\n                    <label>Price ($)</label>\n                    <input\n                      type=\"number\"\n                      value={editService.price}\n                      onChange={(e) =>\n                        setEditService({\n                          ...editService,\n                          price: e.target.value,\n                        })\n                      }\n                      required\n                      className=\"input\"\n                      min=\"0\"\n                      step=\"0.01\"\n                    />\n                  </div>\n                </div>\n                <div className={styles.formGroup}>\n                  <label>Category</label>\n                  <select\n                    value={editService.category}\n                    onChange={(e) =>\n                      setEditService({\n                        ...editService,\n                        category: e.target.value,\n                      })\n                    }\n                    required\n                    className=\"input\"\n                  >\n                    <option value=\"\">Select Category</option>\n                    <option value=\"Hair\">Hair</option>\n                    <option value=\"Makeup\">Makeup</option>\n                    <option value=\"Nails\">Nails</option>\n                    <option value=\"Skin Care\">Skin Care</option>\n                    <option value=\"Bridal\">Bridal</option>\n                  </select>\n                </div>\n                <div className={styles.formActions}>\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowEditForm(false);\n                      setEditingService(null);\n                    }}\n                    className=\"btn btn-secondary\"\n                  >\n                    Cancel\n                  </button>\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Update Service\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n      </div>\n    </AdminLayout>\n  );\n}\n","size_bytes":15703},"src/app/admin/students/Students.module.css":{"content":".studentsPage {\n    padding: var(--spacing-xl);\n}\n\n.loading {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 50vh;\n    font-size: var(--font-size-lg);\n    color: var(--color-text-secondary);\n}\n\n.header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: var(--spacing-2xl);\n}\n\n.title {\n    font-size: var(--font-size-3xl);\n    font-weight: 700;\n    color: var(--color-text-primary);\n}\n\n.filters {\n    display: flex;\n    gap: var(--spacing-lg);\n    margin-bottom: var(--spacing-xl);\n    align-items: center;\n}\n\n.searchBox {\n    flex: 1;\n    max-width: 400px;\n}\n\n.statusFilter {\n    padding: var(--spacing-sm) var(--spacing-md);\n    border: 1px solid var(--color-border);\n    border-radius: var(--radius-md);\n    background: var(--color-tertiary-bg);\n    color: var(--color-text-primary);\n    font-size: var(--font-size-base);\n}\n\n.tableContainer {\n    background: var(--color-card-bg);\n    border-radius: var(--radius-lg);\n    border: 1px solid var(--color-card-border);\n    overflow: hidden;\n}\n\n.studentsTable {\n    width: 100%;\n    border-collapse: collapse;\n}\n\n.studentsTable th {\n    background: var(--color-tertiary-bg);\n    padding: var(--spacing-lg);\n    text-align: left;\n    font-weight: 600;\n    color: var(--color-text-primary);\n    border-bottom: 1px solid var(--color-border);\n}\n\n.studentsTable td {\n    padding: var(--spacing-lg);\n    border-bottom: 1px solid var(--color-border);\n    color: var(--color-text-secondary);\n}\n\n.studentsTable tr:hover {\n    background: var(--color-tertiary-bg);\n}\n\n.progressBar {\n    position: relative;\n    width: 100px;\n    height: 20px;\n    background: var(--color-border);\n    border-radius: var(--radius-full);\n    overflow: hidden;\n}\n\n.progressFill {\n    height: 100%;\n    background: linear-gradient(90deg, var(--color-text-primary) 0%, var(--color-text-secondary) 100%);\n    border-radius: var(--radius-full);\n    transition: width var(--transition-normal);\n}\n\n.progressText {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    font-size: var(--font-size-xs);\n    font-weight: 600;\n    color: var(--color-primary-bg);\n    text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.5);\n}\n\n.status {\n    padding: var(--spacing-xs) var(--spacing-sm);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n    text-transform: uppercase;\n}\n\n.status.active {\n    background: rgba(34, 197, 94, 0.2);\n    color: #22c55e;\n    border: 1px solid #22c55e;\n}\n\n.status.completed {\n    background: rgba(59, 130, 246, 0.2);\n    color: #3b82f6;\n    border: 1px solid #3b82f6;\n}\n\n.status.paused {\n    background: rgba(251, 191, 36, 0.2);\n    color: #fbbf24;\n    border: 1px solid #fbbf24;\n}\n\n.actions {\n    display: flex;\n    gap: var(--spacing-sm);\n}\n\n.actionBtn {\n    padding: var(--spacing-xs) var(--spacing-sm);\n    border: none;\n    border-radius: var(--radius-sm);\n    cursor: pointer;\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n    transition: all var(--transition-normal);\n}\n\n.editBtn {\n    background: rgba(59, 130, 246, 0.2);\n    color: #3b82f6;\n    border: 1px solid #3b82f6;\n}\n\n.editBtn:hover {\n    background: #3b82f6;\n    color: white;\n}\n\n.deleteBtn {\n    background: rgba(239, 68, 68, 0.2);\n    color: #ef4444;\n    border: 1px solid #ef4444;\n}\n\n.deleteBtn:hover {\n    background: #ef4444;\n    color: white;\n}\n\n/* Modal Styles */\n.modal {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.8);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 1000;\n}\n\n.modalContent {\n    background: var(--color-card-bg);\n    border-radius: var(--radius-lg);\n    border: 1px solid var(--color-card-border);\n    width: 100%;\n    max-width: 500px;\n    max-height: 90vh;\n    overflow-y: auto;\n}\n\n.modalHeader {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: var(--spacing-xl);\n    border-bottom: 1px solid var(--color-border);\n}\n\n.modalHeader h2 {\n    font-size: var(--font-size-xl);\n    font-weight: 600;\n    color: var(--color-text-primary);\n    margin: 0;\n}\n\n.closeBtn {\n    background: none;\n    border: none;\n    font-size: var(--font-size-2xl);\n    color: var(--color-text-secondary);\n    cursor: pointer;\n    padding: 0;\n    width: 30px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: var(--radius-sm);\n    transition: all var(--transition-normal);\n}\n\n.closeBtn:hover {\n    background: var(--color-tertiary-bg);\n    color: var(--color-text-primary);\n}\n\n.form {\n    padding: var(--spacing-xl);\n}\n\n.formGroup {\n    margin-bottom: var(--spacing-lg);\n}\n\n.formGroup label {\n    display: block;\n    margin-bottom: var(--spacing-sm);\n    font-weight: 500;\n    color: var(--color-text-primary);\n}\n\n.formActions {\n    display: flex;\n    gap: var(--spacing-md);\n    justify-content: flex-end;\n    margin-top: var(--spacing-xl);\n    padding-top: var(--spacing-lg);\n    border-top: 1px solid var(--color-border);\n}\n\n/* Responsive Design */\n@media (max-width: 1024px) {\n    .studentsTable {\n        font-size: var(--font-size-sm);\n    }\n\n    .studentsTable th,\n    .studentsTable td {\n        padding: var(--spacing-md);\n    }\n}\n\n@media (max-width: 768px) {\n    .studentsPage {\n        padding: var(--spacing-md);\n    }\n\n    .header {\n        flex-direction: column;\n        gap: var(--spacing-lg);\n        align-items: stretch;\n    }\n\n    .filters {\n        flex-direction: column;\n        gap: var(--spacing-md);\n    }\n\n    .searchBox {\n        max-width: none;\n    }\n\n    .tableContainer {\n        overflow-x: auto;\n    }\n\n    .studentsTable {\n        min-width: 800px;\n    }\n\n    .modalContent {\n        margin: var(--spacing-md);\n        max-width: none;\n    }\n}\n\n@media (max-width: 480px) {\n    .form {\n        padding: var(--spacing-lg);\n    }\n\n    .formActions {\n        flex-direction: column;\n    }\n\n    .modalHeader {\n        padding: var(--spacing-lg);\n    }\n}","size_bytes":6068},"src/app/layout.tsx":{"content":"import \"../styles/globals.css\";\nimport Header from \"../components/layout/Header\";\nimport SmoothScrollProvider from \"../components/layout/SmoothScrollProvider\";\n\nexport const metadata = {\n  title: \"The Fringe - Premium Salon & Beauty Academy\",\n  description:\n    \"Transform your look and advance your career with premium salon services and professional beauty education.\",\n  keywords: \"salon, beauty, academy, hair, makeup, courses, education\",\n  authors: [{ name: \"The Fringe\" }],\n};\n\nexport const viewport = {\n  width: \"device-width\",\n  initialScale: 1,\n};\n\nexport default function RootLayout({ children }: { children: any }) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <meta name=\"theme-color\" content=\"#201A1E\" />\n      </head>\n      <body style={{ opacity: 1, visibility: \"visible\" }}>\n        <SmoothScrollProvider>\n          <div className=\"page-content\">{children}</div>\n        </SmoothScrollProvider>\n      </body>\n    </html>\n  );\n}\n","size_bytes":1002},"src/app/reviews/page.tsx":{"content":"\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport Layout from \"../../components/layout/Layout\";\nimport AnimatedSection from \"../../components/ui/animated-components\";\nimport styles from \"./Reviews.module.css\";\n\ninterface Review {\n  id: string;\n  name: string;\n  rating: number;\n  comment: string;\n  service: string;\n  date: string;\n  imageUrl?: string;\n}\n\nexport default function ReviewsPage() {\n  const [reviews, setReviews] = useState<Review[]>([]);\n  const [averageRating, setAverageRating] = useState(0);\n  const [totalReviews, setTotalReviews] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [filter, setFilter] = useState(\"all\");\n\n  useEffect(() => {\n    fetchReviews();\n  }, []);\n\n  const fetchReviews = async () => {\n    try {\n      // Simulate API call with sample data\n      const sampleReviews: Review[] = [\n        {\n          id: \"1\",\n          name: \"Sarah Johnson\",\n          rating: 5,\n          comment:\n            \"Amazing experience! The hair styling course exceeded my expectations. The instructors are highly professional and knowledgeable.\",\n          service: \"Hair Styling Course\",\n          date: \"2024-01-15\",\n          imageUrl: \"/images/reviews/sarah.jpg\",\n        },\n        {\n          id: \"2\",\n          name: \"Emily Chen\",\n          rating: 5,\n          comment:\n            \"Best salon in town! Got a wonderful haircut and the makeup services are top-notch. Highly recommend!\",\n          service: \"Haircut & Makeup\",\n          date: \"2024-01-10\",\n        },\n        {\n          id: \"3\",\n          name: \"Jessica Miller\",\n          rating: 4,\n          comment:\n            \"Great learning environment. The makeup artistry course helped me develop professional skills.\",\n          service: \"Makeup Artistry Course\",\n          date: \"2024-01-08\",\n        },\n        {\n          id: \"4\",\n          name: \"Amanda Rodriguez\",\n          rating: 5,\n          comment:\n            \"Fantastic nail art course! Learned so many techniques and the certification helped me start my career.\",\n          service: \"Nail Art Course\",\n          date: \"2024-01-05\",\n        },\n        {\n          id: \"5\",\n          name: \"Maria Garcia\",\n          rating: 5,\n          comment:\n            \"Professional staff and excellent facilities. The bridal makeup package was perfect for my wedding!\",\n          service: \"Bridal Makeup\",\n          date: \"2024-01-03\",\n        },\n        {\n          id: \"6\",\n          name: \"Lisa Thompson\",\n          rating: 4,\n          comment:\n            \"Good overall experience. The eyebrow threading service was precise and the staff was friendly.\",\n          service: \"Eyebrow Threading\",\n          date: \"2024-01-01\",\n        },\n      ];\n\n      setReviews(sampleReviews);\n      const avg =\n        sampleReviews.reduce((sum, review) => sum + review.rating, 0) /\n        sampleReviews.length;\n      setAverageRating(avg);\n      setTotalReviews(sampleReviews.length);\n    } catch (error) {\n      console.error(\"Failed to fetch reviews:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const filteredReviews =\n    filter === \"all\"\n      ? reviews\n      : reviews.filter((review) =>\n          review.service.toLowerCase().includes(filter.toLowerCase())\n        );\n\n  const renderStars = (rating: number) => {\n    return [...Array(5)].map((_, index) => (\n      <span\n        key={index}\n        className={`${styles.star} ${index < rating ? styles.filled : \"\"}`}\n      >\n        ★\n      </span>\n    ));\n  };\n\n  if (isLoading) {\n    return (\n      <Layout>\n        <div className={styles.loading}>Loading reviews...</div>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout>\n      <div className={styles.reviewsPage}>\n        {/* Hero Section */}\n        <AnimatedSection className={styles.hero} animationType=\"fade-up\">\n          <div className=\"container\">\n            <h1 className={styles.title}>Client Reviews</h1>\n            <p className={styles.subtitle}>\n              See what our clients say about their experience at The Fringe\n            </p>\n\n            <div className={styles.stats}>\n              <div className={styles.statItem}>\n                <div className={styles.statNumber}>\n                  {averageRating.toFixed(1)}\n                </div>\n                <div className={styles.statStars}>\n                  {renderStars(Math.round(averageRating))}\n                </div>\n                <div className={styles.statLabel}>Average Rating</div>\n              </div>\n              <div className={styles.statItem}>\n                <div className={styles.statNumber}>{totalReviews}</div>\n                <div className={styles.statLabel}>Total Reviews</div>\n              </div>\n            </div>\n          </div>\n        </AnimatedSection>\n\n        {/* Filter Section */}\n        <AnimatedSection className={styles.filters} animationType=\"fade-up\">\n          <div className=\"container\">\n            <div className={styles.filterButtons}>\n              <button\n                className={`${styles.filterBtn} ${\n                  filter === \"all\" ? styles.active : \"\"\n                }`}\n                onClick={() => setFilter(\"all\")}\n              >\n                All Reviews\n              </button>\n              <button\n                className={`${styles.filterBtn} ${\n                  filter === \"course\" ? styles.active : \"\"\n                }`}\n                onClick={() => setFilter(\"course\")}\n              >\n                Courses\n              </button>\n              <button\n                className={`${styles.filterBtn} ${\n                  filter === \"service\" ? styles.active : \"\"\n                }`}\n                onClick={() => setFilter(\"service\")}\n              >\n                Services\n              </button>\n            </div>\n          </div>\n        </AnimatedSection>\n\n        {/* Reviews Grid */}\n        <AnimatedSection\n          className={styles.reviewsSection}\n          animationType=\"fade-up\"\n        >\n          <div className=\"container\">\n            <div className={styles.reviewsGrid}>\n              {filteredReviews.map((review, index) => (\n                <div key={review.id} className={`card ${styles.reviewCard}`}>\n                  <div className={styles.reviewHeader}>\n                    <div className={styles.reviewerInfo}>\n                      <div className={styles.reviewerAvatar}>\n                        {review.imageUrl ? (\n                          <img src={review.imageUrl} alt={review.name} />\n                        ) : (\n                          <div className={styles.avatarPlaceholder}>\n                            {review.name\n                              .split(\" \")\n                              .map((n) => n[0])\n                              .join(\"\")}\n                          </div>\n                        )}\n                      </div>\n                      <div className={styles.reviewerDetails}>\n                        <h4 className={styles.reviewerName}>{review.name}</h4>\n                        <p className={styles.reviewService}>{review.service}</p>\n                      </div>\n                    </div>\n                    <div className={styles.reviewRating}>\n                      {renderStars(review.rating)}\n                    </div>\n                  </div>\n\n                  <div className={styles.reviewContent}>\n                    <p className={styles.reviewComment}>{review.comment}</p>\n                  </div>\n\n                  <div className={styles.reviewFooter}>\n                    <span className={styles.reviewDate}>\n                      {new Date(review.date).toLocaleDateString(\"en-US\", {\n                        year: \"numeric\",\n                        month: \"long\",\n                        day: \"numeric\",\n                      })}\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </AnimatedSection>\n\n        {/* Call to Action */}\n        <div style={{ marginBottom: \"150px\" }}>\n          <AnimatedSection className={styles.cta} animationType=\"scale\">\n            <div className=\"container\">\n              <div className={styles.ctaContent}>\n                <h2>Share Your Experience</h2>\n                <p>We'd love to hear about your experience with us!</p>\n                <a href=\"/contact\" className=\"btn btn-primary btn-lg\">\n                  Leave a Review\n                </a>\n              </div>\n            </div>\n          </AnimatedSection>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n","size_bytes":8555},"src/app/admin/students/page.tsx":{"content":"\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport AdminLayout from \"../../../components/layout/AdminLayout\";\nimport styles from \"./Students.module.css\";\n\ninterface Student {\n  id: string;\n  name: string;\n  email: string;\n  course: string;\n  enrollmentDate: string;\n  progress: number;\n  status: \"active\" | \"completed\" | \"paused\";\n  certificateUrl?: string;\n  invitedBy?: string;\n  certificateAssignedBy?: string;\n}\n\nexport default function StudentsPage() {\n  const [students, setStudents] = useState<Student[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [showCertificateModal, setShowCertificateModal] = useState(false);\n  const [editingStudent, setEditingStudent] = useState<Student | null>(null);\n  const [certificateStudent, setCertificateStudent] = useState<Student | null>(\n    null\n  );\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filterStatus, setFilterStatus] = useState(\"all\");\n  const [newStudent, setNewStudent] = useState({\n    name: \"\",\n    email: \"\",\n    course: \"\",\n    accessExpiryDate: \"\",\n  });\n  const [editStudent, setEditStudent] = useState({\n    name: \"\",\n    email: \"\",\n    course: \"\",\n    status: \"active\",\n  });\n  const [certificateFile, setCertificateFile] = useState<File | null>(null);\n  const router = useRouter();\n\n  useEffect(() => {\n    const adminSession = localStorage.getItem(\"admin_session\");\n    if (!adminSession) {\n      router.push(\"/admin/login\");\n      return;\n    }\n    fetchStudents();\n  }, []);\n\n  const fetchStudents = async () => {\n    try {\n      const response = await fetch(\"/api/admin/students\");\n      const data = await response.json();\n      if (response.ok) {\n        setStudents(data.students);\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch students:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleAddStudent = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"/api/admin/students\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newStudent),\n      });\n\n      if (response.ok) {\n        setShowAddForm(false);\n        setNewStudent({ name: \"\", email: \"\", course: \"\", accessExpiryDate: \"\" });\n        fetchStudents();\n        alert(\"Student added successfully!\");\n      } else {\n        const data = await response.json();\n        alert(data.error || \"Failed to add student\");\n      }\n    } catch (error) {\n      alert(\"Error adding student\");\n    }\n  };\n\n  const handleDeleteStudent = async (studentId: string) => {\n    if (confirm(\"Are you sure you want to delete this student?\")) {\n      try {\n        const response = await fetch(`/api/admin/students/${studentId}`, {\n          method: \"DELETE\",\n        });\n        if (response.ok) {\n          fetchStudents();\n          alert(\"Student deleted successfully!\");\n        }\n      } catch (error) {\n        alert(\"Error deleting student\");\n      }\n    }\n  };\n\n  const handleEditStudent = (student: Student) => {\n    setEditingStudent(student);\n    setEditStudent({\n      name: student.name,\n      email: student.email,\n      course: student.course,\n      status: student.status,\n    });\n    setShowEditForm(true);\n  };\n\n  const handleUpdateStudent = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!editingStudent) return;\n\n    try {\n      const response = await fetch(`/api/admin/students/${editingStudent.id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(editStudent),\n      });\n\n      if (response.ok) {\n        setShowEditForm(false);\n        setEditingStudent(null);\n        setEditStudent({\n          name: \"\",\n          email: \"\",\n          course: \"\",\n          status: \"active\",\n        });\n        fetchStudents();\n        alert(\"Student updated successfully!\");\n      } else {\n        const data = await response.json();\n        alert(data.error || \"Failed to update student\");\n      }\n    } catch (error) {\n      alert(\"Error updating student\");\n    }\n  };\n\n  const handleUploadCertificate = (student: Student) => {\n    setCertificateStudent(student);\n    setShowCertificateModal(true);\n  };\n\n  const handleCertificateUpload = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!certificateStudent || !certificateFile) return;\n\n    const formData = new FormData();\n    formData.append(\"certificate\", certificateFile);\n    formData.append(\"studentId\", certificateStudent.id);\n\n    try {\n      const response = await fetch(\"/api/admin/students/upload-certificate\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (response.ok) {\n        setShowCertificateModal(false);\n        setCertificateStudent(null);\n        setCertificateFile(null);\n        fetchStudents();\n        alert(\"Certificate uploaded successfully!\");\n      } else {\n        const data = await response.json();\n        alert(data.error || \"Failed to upload certificate\");\n      }\n    } catch (error) {\n      alert(\"Error uploading certificate\");\n    }\n  };\n\n  const handleSendInvite = async (studentId: string) => {\n    try {\n      const response = await fetch(`/api/admin/students/${studentId}/invite`, {\n        method: \"POST\",\n      });\n\n      if (response.ok) {\n        alert(\"Invitation sent successfully!\");\n      } else {\n        const data = await response.json();\n        alert(data.error || \"Failed to send invitation\");\n      }\n    } catch (error) {\n      alert(\"Error sending invitation\");\n    }\n  };\n\n  const filteredStudents = students.filter((student) => {\n    const matchesSearch =\n      student.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      student.email.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesFilter =\n      filterStatus === \"all\" || student.status === filterStatus;\n    return matchesSearch && matchesFilter;\n  });\n\n  if (isLoading) {\n    return (\n      <AdminLayout>\n        <div className={styles.loading}>Loading students...</div>\n      </AdminLayout>\n    );\n  }\n\n  return (\n    <AdminLayout>\n      <div className={styles.studentsPage}>\n        <div className={styles.header}>\n          <h1 className={styles.title}>Students Management</h1>\n          <button\n            onClick={() => setShowAddForm(true)}\n            className=\"btn btn-primary\"\n          >\n            Add New Student\n          </button>\n        </div>\n\n        {/* Filters */}\n        <div className={styles.filters}>\n          <div className={styles.searchBox}>\n            <input\n              type=\"text\"\n              placeholder=\"Search students...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"input\"\n            />\n          </div>\n          <select\n            value={filterStatus}\n            onChange={(e) => setFilterStatus(e.target.value)}\n            className={styles.statusFilter}\n          >\n            <option value=\"all\">All Status</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n            <option value=\"paused\">Paused</option>\n          </select>\n        </div>\n\n        {/* Students Table */}\n        <div className={styles.tableContainer}>\n          <table className={styles.studentsTable}>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Course</th>\n                <th>Enrollment Date</th>\n                <th>Progress</th>\n                <th>Status</th>\n                <th>Certificate</th>\n                <th>Invited By</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredStudents.map((student) => (\n                <tr key={student.id}>\n                  <td>{student.name}</td>\n                  <td>{student.email}</td>\n                  <td>{student.course}</td>\n                  <td>\n                    {new Date(student.enrollmentDate).toLocaleDateString()}\n                  </td>\n                  <td>\n                    <div className={styles.progressBar}>\n                      <div\n                        className={styles.progressFill}\n                        style={{ width: `${student.progress}%` }}\n                      ></div>\n                      <span className={styles.progressText}>\n                        {student.progress}%\n                      </span>\n                    </div>\n                  </td>\n                  <td>\n                    <span\n                      className={`${styles.status} ${styles[student.status]}`}\n                    >\n                      {student.status}\n                    </span>\n                  </td>\n                  <td>\n                    {student.certificateUrl ? (\n                      <span className={styles.certificateStatus}>\n                        ✅ Assigned\n                        <br />\n                        <small>by {student.certificateAssignedBy}</small>\n                      </span>\n                    ) : (\n                      <span className={styles.certificateStatus}>\n                        ❌ Not Assigned\n                      </span>\n                    )}\n                  </td>\n                  <td>\n                    <span className={styles.invitedBy}>\n                      {student.invitedBy || \"N/A\"}\n                    </span>\n                  </td>\n                  <td>\n                    <div className={styles.actions}>\n                      <button\n                        className={`${styles.actionBtn} ${styles.editBtn}`}\n                        onClick={() => handleEditStudent(student)}\n                        title=\"Edit Student\"\n                      >\n                        ✏️\n                      </button>\n                      <button\n                        className={`${styles.actionBtn} ${styles.certificateBtn}`}\n                        onClick={() => handleUploadCertificate(student)}\n                        title=\"Upload Certificate\"\n                      >\n                        🏆\n                      </button>\n                      <button\n                        className={`${styles.actionBtn} ${styles.inviteBtn}`}\n                        onClick={() => handleSendInvite(student.id)}\n                        title=\"Send Invite\"\n                      >\n                        📧\n                      </button>\n                      <button\n                        className={`${styles.actionBtn} ${styles.deleteBtn}`}\n                        onClick={() => handleDeleteStudent(student.id)}\n                        title=\"Delete Student\"\n                      >\n                        🗑️\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Add Student Modal */}\n        {showAddForm && (\n          <div className={styles.modal}>\n            <div className={styles.modalContent}>\n              <div className={styles.modalHeader}>\n                <h2>Add New Student</h2>\n                <button\n                  onClick={() => setShowAddForm(false)}\n                  className={styles.closeBtn}\n                >\n                  ×\n                </button>\n              </div>\n\n              <form onSubmit={handleAddStudent} className={styles.form}>\n                <div className={styles.formGroup}>\n                  <label>Student Name</label>\n                  <input\n                    type=\"text\"\n                    value={newStudent.name}\n                    onChange={(e) =>\n                      setNewStudent({ ...newStudent, name: e.target.value })\n                    }\n                    required\n                    className=\"input\"\n                    placeholder=\"Enter student name\"\n                  />\n                </div>\n\n                <div className={styles.formGroup}>\n                  <label>Email Address</label>\n                  <input\n                    type=\"email\"\n                    value={newStudent.email}\n                    onChange={(e) =>\n                      setNewStudent({ ...newStudent, email: e.target.value })\n                    }\n                    required\n                    className=\"input\"\n                    placeholder=\"Enter email address\"\n                  />\n                </div>\n\n                <div className={styles.formGroup}>\n                  <label>Course</label>\n                  <select\n                    value={newStudent.course}\n                    onChange={(e) =>\n                      setNewStudent({ ...newStudent, course: e.target.value })\n                    }\n                    required\n                    className=\"input\"\n                  >\n                    <option value=\"\">Select Course</option>\n                    <option value=\"Hair Styling\">Hair Styling</option>\n                    <option value=\"Makeup Artistry\">Makeup Artistry</option>\n                    <option value=\"Nail Art\">Nail Art</option>\n                    <option value=\"Skin Care\">Skin Care</option>\n                  </select>\n                </div>\n\n                <div className={styles.formGroup}>\n                  <label>Access Expiry Date</label>\n                  <input\n                    type=\"date\"\n                    value={newStudent.accessExpiryDate}\n                    onChange={(e) =>\n                      setNewStudent({ ...newStudent, accessExpiryDate: e.target.value })\n                    }\n                    required\n                    className=\"input\"\n                    min={new Date().toISOString().split('T')[0]}\n                  />\n                  <small className={styles.fieldNote}>\n                    Student will receive an email to set their password and will have access until this date.\n                  </small>\n                </div>\n\n                <div className={styles.formActions}>\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowAddForm(false)}\n                    className=\"btn btn-secondary\"\n                  >\n                    Cancel\n                  </button>\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Add Student\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n\n        {/* Edit Student Modal */}\n        {showEditForm && editingStudent && (\n          <div className={styles.modal}>\n            <div className={styles.modalContent}>\n              <div className={styles.modalHeader}>\n                <h2>Edit Student</h2>\n                <button\n                  onClick={() => {\n                    setShowEditForm(false);\n                    setEditingStudent(null);\n                  }}\n                  className={styles.closeBtn}\n                >\n                  ×\n                </button>\n              </div>\n\n              <form onSubmit={handleUpdateStudent} className={styles.form}>\n                <div className={styles.formGroup}>\n                  <label>Student Name</label>\n                  <input\n                    type=\"text\"\n                    value={editStudent.name}\n                    onChange={(e) =>\n                      setEditStudent({ ...editStudent, name: e.target.value })\n                    }\n                    required\n                    className=\"input\"\n                    placeholder=\"Enter student name\"\n                  />\n                </div>\n\n                <div className={styles.formGroup}>\n                  <label>Email Address</label>\n                  <input\n                    type=\"email\"\n                    value={editStudent.email}\n                    onChange={(e) =>\n                      setEditStudent({ ...editStudent, email: e.target.value })\n                    }\n                    required\n                    className=\"input\"\n                    placeholder=\"Enter email address\"\n                  />\n                </div>\n\n                <div className={styles.formGroup}>\n                  <label>Course</label>\n                  <select\n                    value={editStudent.course}\n                    onChange={(e) =>\n                      setEditStudent({ ...editStudent, course: e.target.value })\n                    }\n                    required\n                    className=\"input\"\n                  >\n                    <option value=\"\">Select Course</option>\n                    <option value=\"Hair Styling\">Hair Styling</option>\n                    <option value=\"Makeup Artistry\">Makeup Artistry</option>\n                    <option value=\"Nail Art\">Nail Art</option>\n                    <option value=\"Skin Care\">Skin Care</option>\n                  </select>\n                </div>\n\n                <div className={styles.formGroup}>\n                  <label>Status</label>\n                  <select\n                    value={editStudent.status}\n                    onChange={(e) =>\n                      setEditStudent({ ...editStudent, status: e.target.value })\n                    }\n                    required\n                    className=\"input\"\n                  >\n                    <option value=\"active\">Active</option>\n                    <option value=\"completed\">Completed</option>\n                    <option value=\"paused\">Paused</option>\n                  </select>\n                </div>\n\n                <div className={styles.formActions}>\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowEditForm(false);\n                      setEditingStudent(null);\n                    }}\n                    className=\"btn btn-secondary\"\n                  >\n                    Cancel\n                  </button>\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Update Student\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n\n        {/* Certificate Upload Modal */}\n        {showCertificateModal && certificateStudent && (\n          <div className={styles.modal}>\n            <div className={styles.modalContent}>\n              <div className={styles.modalHeader}>\n                <h2>Upload Certificate for {certificateStudent.name}</h2>\n                <button\n                  onClick={() => {\n                    setShowCertificateModal(false);\n                    setCertificateStudent(null);\n                    setCertificateFile(null);\n                  }}\n                  className={styles.closeBtn}\n                >\n                  ×\n                </button>\n              </div>\n\n              <form onSubmit={handleCertificateUpload} className={styles.form}>\n                <div className={styles.formGroup}>\n                  <label>Certificate File</label>\n                  <input\n                    type=\"file\"\n                    accept=\".pdf,.jpg,.jpeg,.png\"\n                    onChange={(e) =>\n                      setCertificateFile(e.target.files?.[0] || null)\n                    }\n                    required\n                    className=\"input\"\n                  />\n                  <small className={styles.fileNote}>\n                    Supported formats: PDF, JPG, JPEG, PNG (Max: 5MB)\n                  </small>\n                </div>\n\n                <div className={styles.studentInfo}>\n                  <p>\n                    <strong>Student:</strong> {certificateStudent.name}\n                  </p>\n                  <p>\n                    <strong>Course:</strong> {certificateStudent.course}\n                  </p>\n                  <p>\n                    <strong>Progress:</strong> {certificateStudent.progress}%\n                  </p>\n                </div>\n\n                <div className={styles.formActions}>\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowCertificateModal(false);\n                      setCertificateStudent(null);\n                      setCertificateFile(null);\n                    }}\n                    className=\"btn btn-secondary\"\n                  >\n                    Cancel\n                  </button>\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Upload Certificate\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n      </div>\n    </AdminLayout>\n  );\n}\n","size_bytes":20824},"src/components/ui/textLoop/textLoop.module.css":{"content":".scrollContainer {\n    width: 100%;\n    overflow: hidden;\n    position: relative;\n    background: #ffffff;\n    padding: 15px 0;\n    opacity: 0;\n    transform: translateY(30px);\n    transition: all 1s ease-out;\n}\n\n.scrollContainer.visible {\n    opacity: 1;\n    transform: translateY(0);\n}\n\n.scrollTrack {\n    display: flex;\n    width: max-content;\n    animation: scroll 40s linear infinite;\n    will-change: transform;\n}\n\n.word {\n    flex-shrink: 0;\n    margin: 0 30px;\n    font-size: 1rem;\n    font-weight: 700;\n    color: #000;\n    background-clip: text;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    position: relative;\n    transition: all 0.3s ease;\n    cursor: default;\n    user-select: none;\n}\n\n.word:hover {\n    transform: scale(1.05);\n    filter: drop-shadow(0 0 20px rgba(208, 180, 159, 0.4));\n}\n\n\n@keyframes scroll {\n    0% {\n        transform: translateX(0);\n    }\n\n    100% {\n        transform: translateX(-25%);\n    }\n}\n\n@keyframes fadeInUp {\n    from {\n        opacity: 0;\n        transform: translateY(30px);\n    }\n\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n/* Responsive Design */\n\n/* Large Desktop (1200px+) */\n@media (min-width: 1200px) {\n    .word {\n        font-size: 2rem;\n        margin: 0 40px;\n    }\n}\n\n/* Medium Desktop (992px - 1199px) */\n@media (min-width: 992px) and (max-width: 1199px) {\n    .word {\n        font-size: 1.4rem;\n        margin: 0 35px;\n    }\n\n    .gradientLeft,\n    .gradientRight {\n        width: 150px;\n    }\n}\n\n/* Tablet (768px - 991px) */\n@media (min-width: 768px) and (max-width: 991px) {\n    .scrollContainer {\n        padding: 15px 0;\n    }\n\n    .word {\n        font-size: 1.3rem;\n        margin: 0 30px;\n        letter-spacing: 1px;\n    }\n\n    .gradientLeft,\n    .gradientRight {\n        width: 120px;\n    }\n}\n\n/* Mobile Landscape (481px - 767px) */\n@media (min-width: 481px) and (max-width: 767px) {\n    .scrollContainer {\n        padding: 12px 0;\n    }\n\n    .word {\n        font-size: 1.2rem;\n        margin: 0 25px;\n        letter-spacing: 1px;\n    }\n\n    .gradientLeft,\n    .gradientRight {\n        width: 80px;\n    }\n}\n\n/* Mobile Portrait (320px - 480px) */\n@media (min-width: 320px) and (max-width: 480px) {\n    .scrollContainer {\n        padding: 10px 0;\n    }\n\n    .word {\n        font-size: 1.1rem;\n        margin: 0 20px;\n        letter-spacing: 0.5px;\n    }\n\n    .gradientLeft,\n    .gradientRight {\n        width: 60px;\n    }\n}\n\n/* Extra Small Mobile (≤320px) */\n@media (max-width: 320px) {\n    .scrollContainer {\n        padding: 8px 0;\n    }\n\n    .word {\n        font-size: 1rem;\n        margin: 0 15px;\n        letter-spacing: 0px;\n    }\n\n    .gradientLeft,\n    .gradientRight {\n        width: 50px;\n    }\n}\n\n/* Reduce motion for accessibility */\n@media (prefers-reduced-motion: reduce) {\n    .scrollTrack {\n        animation-duration: 60s;\n    }\n\n    .word {\n        transition: none;\n    }\n\n    .word:hover {\n        transform: none;\n        filter: none;\n    }\n\n    .sectionHeader {\n        animation: none;\n        opacity: 1;\n    }\n\n    .scrollContainer {\n        transition: none;\n        opacity: 1;\n        transform: none;\n    }\n}\n\n/* High contrast mode support */\n@media (prefers-contrast: high) {\n    .word {\n        background: #000000;\n        -webkit-background-clip: text;\n        background-clip: text;\n    }\n}","size_bytes":3337},"src/app/student/profile/Profile.module.css":{"content":".profilePage {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n}\r\n\r\n.header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: var(--spacing-2xl);\r\n}\r\n\r\n.title {\r\n    font-size: var(--font-size-3xl);\r\n    font-weight: 700;\r\n    color: var(--color-text-primary);\r\n    margin: 0;\r\n}\r\n\r\n.loading,\r\n.error {\r\n    text-align: center;\r\n    padding: var(--spacing-3xl);\r\n    font-size: var(--font-size-lg);\r\n    color: var(--color-text-secondary);\r\n}\r\n\r\n.profileContent {\r\n    display: grid;\r\n    gap: var(--spacing-xl);\r\n    grid-template-columns: 1fr;\r\n}\r\n\r\n.profileCard {\r\n    padding: var(--spacing-2xl);\r\n}\r\n\r\n.profileHeader {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: var(--spacing-xl);\r\n}\r\n\r\n.avatar {\r\n    width: 80px;\r\n    height: 80px;\r\n    background: var(--color-accent-primary);\r\n    color: var(--color-primary-bg);\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: var(--font-size-2xl);\r\n    font-weight: 700;\r\n}\r\n\r\n.profileInfo {\r\n    flex: 1;\r\n}\r\n\r\n.profileName {\r\n    font-size: var(--font-size-2xl);\r\n    font-weight: 600;\r\n    color: var(--color-text-primary);\r\n    margin: 0 0 var(--spacing-sm) 0;\r\n}\r\n\r\n.profileEmail {\r\n    font-size: var(--font-size-lg);\r\n    color: var(--color-text-secondary);\r\n    margin: 0 0 var(--spacing-md) 0;\r\n}\r\n\r\n.status {\r\n    padding: var(--spacing-xs) var(--spacing-md);\r\n    border-radius: var(--radius-full);\r\n    font-size: var(--font-size-sm);\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    letter-spacing: 0.5px;\r\n}\r\n\r\n.status.active {\r\n    background-color: rgba(34, 197, 94, 0.1);\r\n    color: #22c55e;\r\n}\r\n\r\n.status.completed {\r\n    background-color: rgba(59, 130, 246, 0.1);\r\n    color: #3b82f6;\r\n}\r\n\r\n.status.paused {\r\n    background-color: rgba(245, 158, 11, 0.1);\r\n    color: #f59e0b;\r\n}\r\n\r\n.courseCard,\r\n.certificateCard {\r\n    padding: var(--spacing-2xl);\r\n}\r\n\r\n.sectionTitle {\r\n    font-size: var(--font-size-xl);\r\n    font-weight: 600;\r\n    color: var(--color-text-primary);\r\n    margin: 0 0 var(--spacing-lg) 0;\r\n    border-bottom: 2px solid var(--color-border);\r\n    padding-bottom: var(--spacing-sm);\r\n}\r\n\r\n.courseInfo {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: var(--spacing-lg);\r\n}\r\n\r\n.infoItem {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: var(--spacing-md) 0;\r\n    border-bottom: 1px solid var(--color-border);\r\n}\r\n\r\n.infoItem:last-child {\r\n    border-bottom: none;\r\n}\r\n\r\n.infoLabel {\r\n    font-weight: 600;\r\n    color: var(--color-text-secondary);\r\n    flex: 1;\r\n}\r\n\r\n.infoValue {\r\n    color: var(--color-text-primary);\r\n    font-weight: 500;\r\n    flex: 2;\r\n    text-align: right;\r\n}\r\n\r\n.progressContainer {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: var(--spacing-md);\r\n    flex: 2;\r\n    justify-content: flex-end;\r\n}\r\n\r\n.progressBar {\r\n    width: 120px;\r\n    height: 8px;\r\n    background-color: var(--color-border);\r\n    border-radius: var(--radius-full);\r\n    overflow: hidden;\r\n}\r\n\r\n.progressFill {\r\n    height: 100%;\r\n    background-color: var(--color-accent-primary);\r\n    transition: width 0.3s ease;\r\n}\r\n\r\n.progressText {\r\n    font-weight: 600;\r\n    color: var(--color-text-primary);\r\n    min-width: 40px;\r\n}\r\n\r\n.certificateInfo {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: var(--spacing-lg);\r\n    padding: var(--spacing-lg);\r\n    border-radius: var(--radius-lg);\r\n}\r\n\r\n.certificateAvailable {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: var(--spacing-lg);\r\n    background-color: rgba(34, 197, 94, 0.1);\r\n    padding: var(--spacing-lg);\r\n    border-radius: var(--radius-lg);\r\n    width: 100%;\r\n}\r\n\r\n.certificateNotAvailable {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: var(--spacing-lg);\r\n    background-color: var(--color-tertiary-bg);\r\n    padding: var(--spacing-lg);\r\n    border-radius: var(--radius-lg);\r\n    width: 100%;\r\n}\r\n\r\n.certificateIcon {\r\n    font-size: 2.5rem;\r\n}\r\n\r\n.certificateText {\r\n    font-size: var(--font-size-lg);\r\n    font-weight: 600;\r\n    color: var(--color-text-primary);\r\n    margin: 0 0 var(--spacing-sm) 0;\r\n}\r\n\r\n.certificateSubtext {\r\n    font-size: var(--font-size-base);\r\n    color: var(--color-text-secondary);\r\n    margin: 0;\r\n}\r\n\r\n/* Modal Styles */\r\n.modal {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 1000;\r\n}\r\n\r\n.modalContent {\r\n    background-color: var(--color-card-bg);\r\n    border-radius: var(--radius-lg);\r\n    padding: var(--spacing-2xl);\r\n    width: 90%;\r\n    max-width: 500px;\r\n    max-height: 90vh;\r\n    overflow-y: auto;\r\n}\r\n\r\n.modalHeader {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: var(--spacing-xl);\r\n    padding-bottom: var(--spacing-md);\r\n    border-bottom: 1px solid var(--color-border);\r\n}\r\n\r\n.modalHeader h2 {\r\n    margin: 0;\r\n    color: var(--color-text-primary);\r\n    font-size: var(--font-size-xl);\r\n}\r\n\r\n.closeBtn {\r\n    background: none;\r\n    border: none;\r\n    font-size: var(--font-size-2xl);\r\n    color: var(--color-text-secondary);\r\n    cursor: pointer;\r\n    padding: var(--spacing-xs);\r\n    line-height: 1;\r\n}\r\n\r\n.closeBtn:hover {\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n.form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: var(--spacing-lg);\r\n}\r\n\r\n.formGroup {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: var(--spacing-sm);\r\n}\r\n\r\n.formGroup label {\r\n    font-weight: 600;\r\n    color: var(--color-text-primary);\r\n    font-size: var(--font-size-base);\r\n}\r\n\r\n.formActions {\r\n    display: flex;\r\n    gap: var(--spacing-md);\r\n    justify-content: flex-end;\r\n    margin-top: var(--spacing-lg);\r\n    padding-top: var(--spacing-lg);\r\n    border-top: 1px solid var(--color-border);\r\n}\r\n\r\n/* Mobile Responsive */\r\n@media (max-width: 768px) {\r\n    .header {\r\n        flex-direction: column;\r\n        gap: var(--spacing-md);\r\n        align-items: stretch;\r\n    }\r\n\r\n    .title {\r\n        font-size: var(--font-size-2xl);\r\n        text-align: center;\r\n    }\r\n\r\n    .profileHeader {\r\n        flex-direction: column;\r\n        text-align: center;\r\n    }\r\n\r\n    .avatar {\r\n        width: 100px;\r\n        height: 100px;\r\n        font-size: var(--font-size-3xl);\r\n    }\r\n\r\n    .infoItem {\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n        gap: var(--spacing-xs);\r\n    }\r\n\r\n    .infoValue,\r\n    .progressContainer {\r\n        justify-content: flex-start;\r\n    }\r\n\r\n    .certificateAvailable,\r\n    .certificateNotAvailable {\r\n        flex-direction: column;\r\n        text-align: center;\r\n    }\r\n\r\n    .modalContent {\r\n        margin: var(--spacing-md);\r\n        width: calc(100% - 2 * var(--spacing-md));\r\n    }\r\n\r\n    .formActions {\r\n        flex-direction: column;\r\n    }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n    .progressContainer {\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n        gap: var(--spacing-sm);\r\n    }\r\n\r\n    .progressBar {\r\n        width: 100%;\r\n    }\r\n}","size_bytes":7175},"src/app/page.tsx":{"content":"import Layout from \"../components/layout/Layout\";\r\nimport Hero from \"../components/sections/Hero\";\r\nimport Services from \"../components/sections/Services\";\r\nimport About from \"../components/sections/About\";\r\nimport Reviews from \"../components/sections/Reviews\";\r\nimport Newsletter from \"../components/sections/Newsletter\";\r\nimport TextLoop from \"../components/ui/textLoop/textLoop\";\r\n\r\nexport default function HomePage() {\r\n  return (\r\n    <Layout>\r\n      <Hero />\r\n      <Services />\r\n      <TextLoop />\r\n      <About />\r\n      <Reviews />\r\n      <Newsletter />\r\n    </Layout>\r\n  );\r\n}\r\n","size_bytes":588},"src/services/mockData.ts":{"content":"export const mockServices = [\n  {\n    id: \"1\",\n    title: \"Classic Hair Styling\",\n    description: \"Experience our signature hair styling service with expert stylists\",\n    price: 75,\n    duration: \"60 min\",\n    image: \"/images/services/hair-styling.jpg\",\n    features: [\n      \"Consultation\",\n      \"Shampoo and conditioning\",\n      \"Professional styling\",\n      \"Heat protection\",\n      \"Style maintenance tips\"\n    ],\n    category: \"HAIR\"\n  },\n  {\n    id: \"2\",\n    title: \"Luxury Facial Treatment\",\n    description: \"Rejuvenate your skin with our premium facial treatment\",\n    price: 120,\n    duration: \"90 min\",\n    image: \"/images/services/facial.jpg\",\n    features: [\n      \"Skin analysis\",\n      \"Deep cleansing\",\n      \"Exfoliation\",\n      \"Face massage\",\n      \"Mask treatment\"\n    ],\n    category: \"SKIN\"\n  },\n  {\n    id: \"3\",\n    title: \"Professional Makeup\",\n    description: \"Get picture-perfect makeup for any special occasion\",\n    price: 95,\n    duration: \"75 min\",\n    image: \"/images/services/makeup.jpg\",\n    features: [\n      \"Skin prep\",\n      \"Full face makeup\",\n      \"False lashes\",\n      \"Setting spray\",\n      \"Touch-up kit\"\n    ],\n    category: \"MAKEUP\"\n  }\n  ,\n  {\n    id: \"4\",\n    title: \"Gel Manicure\",\n    description: \"Long-lasting gel manicure with precise shaping and polish\",\n    price: 45,\n    duration: \"45 min\",\n    image: \"/images/services/manicure.jpg\",\n    features: [\"Nail shaping\", \"Cuticle care\", \"Gel polish\", \"Hand massage\"],\n    category: \"NAILS\"\n  },\n  {\n    id: \"5\",\n    title: \"Relaxing Swedish Massage\",\n    description: \"A full-body Swedish massage to relax muscles and improve circulation\",\n    price: 90,\n    duration: \"60 min\",\n    image: \"/images/services/swedish-massage.jpg\",\n    features: [\"Aromatherapy options\", \"Full body massage\", \"Muscle relaxation\", \"Stretching\"],\n    category: \"MASSAGE\"\n  },\n  {\n    id: \"6\",\n    title: \"Hot Stone Therapy\",\n    description: \"Warm stone therapy to relieve deep muscle tension\",\n    price: 130,\n    duration: \"75 min\",\n    image: \"/images/services/hot-stone.jpg\",\n    features: [\"Heated stones\", \"Deep relaxation\", \"Targeted therapy\", \"Aftercare tips\"],\n    category: \"SPA\"\n  },\n  {\n    id: \"7\",\n    title: \"Brow Shaping & Tint\",\n    description: \"Precision brow shaping with tint to frame your face\",\n    price: 35,\n    duration: \"30 min\",\n    image: \"/images/services/brow-shaping.jpg\",\n    features: [\"Consultation\", \"Wax or threading\", \"Tint application\", \"Brow styling\"],\n    category: \"BROWS\"\n  },\n  {\n    id: \"8\",\n    title: \"Full Body Waxing\",\n    description: \"Professional waxing for smooth, long-lasting results\",\n    price: 110,\n    duration: \"90 min\",\n    image: \"/images/services/waxing.jpg\",\n    features: [\"Pre-wax prep\", \"Full body service\", \"Soothing post-care\", \"Hygienic supplies\"],\n    category: \"WAXING\"\n  },\n  {\n    id: \"9\",\n    title: \"Express Haircut\",\n    description: \"Quick and stylish haircut for busy clients\",\n    price: 40,\n    duration: \"30 min\",\n    image: \"/images/services/express-haircut.jpg\",\n    features: [\"Consultation\", \"Precision cut\", \"Blow-dry (optional)\", \"Style tips\"],\n    category: \"HAIR\"\n  },\n  {\n    id: \"10\",\n    title: \"Bridal Makeup Trial\",\n    description: \"A comprehensive trial session to perfect your bridal look\",\n    price: 150,\n    duration: \"120 min\",\n    image: \"/images/services/bridal-makeup.jpg\",\n    features: [\"Full trial makeup\", \"Consultation\", \"Lash trial\", \"Photos for reference\"],\n    category: \"MAKEUP\"\n  },\n  {\n    id: \"11\",\n    title: \"Organic Body Scrub\",\n    description: \"Exfoliating organic body scrub to reveal softer skin\",\n    price: 70,\n    duration: \"50 min\",\n    image: \"/images/services/body-scrub.jpg\",\n    features: [\"Full body exfoliation\", \"Hydrating wrap\", \"Aromatherapy options\"],\n    category: \"SKIN\"\n  },\n  {\n    id: \"12\",\n    title: \"Spray Tan Session\",\n    description: \"Natural-looking spray tan with customized shade matching\",\n    price: 35,\n    duration: \"25 min\",\n    image: \"/images/services/spray-tan.jpg\",\n    features: [\"Shade consultation\", \"Even application\", \"Aftercare instructions\"],\n    category: \"TANNING\"\n  }\n];\n\nexport const mockCourses = [\n  {\n    id: \"1\",\n    title: \"Hair Styling Fundamentals\",\n    description: \"Master the basics of professional hair styling\",\n    duration: \"12 weeks\",\n    price: 1499,\n    image: \"/images/courses/hair-basics.jpg\",\n    level: 'beginner' as const,\n    instructor: \"Sarah Johnson\",\n    topics: [\n      \"Hair anatomy and health\",\n      \"Basic cutting techniques\",\n      \"Blow-drying skills\",\n      \"Product knowledge\",\n      \"Client consultation\"\n    ],\n    enrollmentStatus: 'open' as const\n  },\n  {\n    id: \"2\",\n    title: \"Advanced Color Techniques\",\n    description: \"Learn professional hair coloring and highlighting\",\n    duration: \"16 weeks\",\n    price: 2499,\n    image: \"/images/courses/color-advanced.jpg\",\n    level: 'advanced' as const,\n    instructor: \"Michael Chen\",\n    topics: [\n      \"Color theory\",\n      \"Balayage techniques\",\n      \"Color correction\",\n      \"Creative coloring\",\n      \"Client assessment\"\n    ],\n    enrollmentStatus: 'open' as const\n  },\n  {\n    id: \"3\",\n    title: \"Professional Makeup Artistry\",\n    description: \"Transform your passion into a professional career\",\n    duration: \"10 weeks\",\n    price: 1999,\n    image: \"/images/courses/makeup-pro.jpg\",\n    level: 'intermediate' as const,\n    instructor: \"Emma Parker\",\n    topics: [\n      \"Color theory\",\n      \"Face shapes and features\",\n      \"Bridal makeup\",\n      \"Special effects\",\n      \"Portfolio building\"\n    ],\n    enrollmentStatus: 'open' as const\n  }\n];\n\nexport const mockNewsletters = [\n  {\n    id: \"1\",\n    title: \"Summer Beauty Trends\",\n    content: \"Discover the hottest beauty trends for summer...\",\n    date: \"2025-06-01\",\n    category: \"TRENDS\"\n  },\n  {\n    id: \"2\",\n    title: \"Hair Care Tips for Winter\",\n    content: \"Keep your hair healthy during cold months...\",\n    date: \"2025-12-01\",\n    category: \"TIPS\"\n  }\n];\n\nexport const mockUsers = [\n  {\n    id: \"1\",\n    email: \"admin@thefringe.com\",\n    role: 'admin' as const,\n    name: \"Admin User\",\n    // Mock password for local/testing only\n    password: \"admin123\"\n  },\n  {\n    id: \"2\",\n    email: \"student@thefringe.com\",\n    role: 'student' as const,\n    name: \"Student User\",\n    // Mock password for local/testing only\n    password: \"student123\"\n  }\n];","size_bytes":6371},"next-env.d.ts":{"content":"/// <reference types=\"next\" />\n/// <reference types=\"next/image-types/global\" />\n\n// NOTE: This file should not be edited\n// see https://nextjs.org/docs/basic-features/typescript for more information.\n","size_bytes":201},"src/app/courses/page.tsx":{"content":"\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport Layout from \"../../components/layout/Layout\";\nimport styles from \"./Courses.module.css\";\nimport { coursesService } from \"@/services/courses.service\";\nimport type { Course } from \"@/services/courses.service\";\nimport { useAuth } from \"@/hooks/useAuth\";\n\nexport default function CoursesPage() {\n  const [selectedCategories, setSelectedCategories] = useState<string[]>([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedCourse, setSelectedCourse] = useState<Course | null>(null);\n  const [courses, setCourses] = useState<Course[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { user, isAuthenticated } = useAuth();\n\n  useEffect(() => {\n    const fetchCourses = async () => {\n      try {\n        const data = await coursesService.getAllCourses();\n        setCourses(data);\n      } catch (error) {\n        setError(\"Failed to load courses. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCourses();\n  }, []);\n\n  const courseCategoriesFromData = Array.from(\n    new Set(courses.map((c) => c.level.toLowerCase()))\n  ).map((lvl) => ({ id: lvl, name: lvl[0].toUpperCase() + lvl.slice(1) }));\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const dropdown = document.querySelector('.course-filter-dropdown');\n      if (dropdown && !dropdown.contains(event.target as Node)) {\n        setDropdownOpen(false);\n      }\n    };\n\n    if (dropdownOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [dropdownOpen]);\n\n  const handleEnrollment = async (courseId: string) => {\n    if (!isAuthenticated) {\n      window.location.href = \"/login?redirect=/courses\";\n      return;\n    }\n\n    try {\n      await coursesService.enrollInCourse({\n        courseId,\n        userId: user!.id,\n      });\n      window.location.href = `/student/my-course/${courseId}`;\n    } catch (error) {\n      setError(\"Failed to enroll in the course. Please try again.\");\n    }\n  };\n\n  const filteredCourses = courses.filter((course) => {\n    const matchesCategory =\n      selectedCategories.length === 0 ||\n      selectedCategories.includes(\"ALL\") ||\n      selectedCategories.includes(course.level.toLowerCase());\n\n    const matchesSearch =\n      course.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      course.description.toLowerCase().includes(searchTerm.toLowerCase());\n\n    return matchesCategory && matchesSearch;\n  });\n\n  if (loading) {\n    return (\n      <Layout>\n        <div className={styles.loadingContainer}>\n          <div className={styles.loader}>Loading...</div>\n        </div>\n      </Layout>\n    );\n  }\n\n  if (error) {\n    return (\n      <Layout>\n        <div className={styles.errorContainer}>\n          <p className={styles.error}>{error}</p>\n          <button\n            onClick={() => window.location.reload()}\n            className={styles.retryButton}\n          >\n            Try Again\n          </button>\n        </div>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout>\n      <div className={styles.coursesPage}>\n        <div className={styles.container}>\n          <div className={styles.hero}>\n            <h1 className={styles.pageTitle}>Professional Beauty Courses</h1>\n            <p className={styles.pageSubtitle}>\n              Launch your beauty career with our comprehensive training programs\n            </p>\n          </div>\n\n          <div className={styles.filters}>\n            <div className={styles.searchContainer}>\n              <input\n                type=\"text\"\n                placeholder=\"Search courses...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className={styles.searchInput}\n              />\n            </div>\n            <div className={styles.categoryFilters}>\n              <div className={`${styles.filterDropdown} ${dropdownOpen ? styles.open : \"\"} course-filter-dropdown`}>\n                <button\n                  className={`btn ${styles.filterButton}`}\n                  onClick={() => setDropdownOpen((s) => !s)}\n                  aria-haspopup=\"menu\"\n                  aria-expanded={dropdownOpen}\n                >\n                  {selectedCategories.length === 0\n                    ? \"Filter levels\"\n                    : `${selectedCategories.length} selected`}\n                </button>\n\n                {dropdownOpen && (\n                  <div className={styles.dropdownMenu} role=\"menu\">\n                    <div className={styles.dropdownHeader}>\n                      <button\n                        className=\"btn btn-secondary\"\n                        onClick={() => setSelectedCategories([\"ALL\"])}\n                      >\n                        All\n                      </button>\n                      <button\n                        className=\"btn btn-secondary\"\n                        onClick={() => setSelectedCategories([])}\n                      >\n                        Clear\n                      </button>\n                    </div>\n\n                    <ul className={styles.dropdownList}>\n                      {courseCategoriesFromData.map((c) => (\n                        <li key={c.id}>\n                          <label>\n                            <input\n                              type=\"checkbox\"\n                              checked={\n                                selectedCategories.includes(\"ALL\") ||\n                                selectedCategories.includes(c.id)\n                              }\n                              onChange={(e) => {\n                                const checked = e.target.checked;\n                                setSelectedCategories((prev) => {\n                                  if (checked) {\n                                    return Array.from(new Set([...prev, c.id]));\n                                  }\n                                  return prev.filter(\n                                    (x) => x !== c.id && x !== \"ALL\"\n                                  );\n                                });\n                              }}\n                            />{\" \"}\n                            {c.name}\n                          </label>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className={styles.coursesGrid}>\n            {filteredCourses.map((course) => (\n              <div key={course.id} className={styles.courseCard}>\n                <div className={styles.courseImage}>\n                  <img src={course.image} alt={course.title} />\n                  <div className={styles.courseBadge}>{course.level}</div>\n                </div>\n                <div className={styles.courseContent}>\n                  <h3 className={styles.courseTitle}>{course.title}</h3>\n                  <p className={styles.courseDescription}>\n                    {course.description}\n                  </p>\n\n                  <div className={styles.courseStats}>\n                    <span>📅 {course.duration}</span>\n                    <span>📚 {course.topics.length} modules</span>\n                    <span>👨‍🏫 {course.instructor}</span>\n                  </div>\n\n                  <div className={styles.courseFooter}>\n                    <div className={styles.price}>${course.price}</div>\n                    <div className={styles.courseActions}>\n                      <button\n                        className=\"btn btn-secondary btn-sm\"\n                        onClick={() => setSelectedCourse(course)}\n                      >\n                        Learn More\n                      </button>\n                      <button\n                        className=\"btn btn-primary btn-sm\"\n                        onClick={() => handleEnrollment(course.id)}\n                        disabled={course.enrollmentStatus !== \"open\"}\n                      >\n                        {course.enrollmentStatus === \"open\"\n                          ? \"Enroll Now\"\n                          : \"Enrollment Closed\"}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {selectedCourse && (\n          <div className={styles.modal} onClick={() => setSelectedCourse(null)}>\n            <div\n              className={styles.modalContent}\n              onClick={(e) => e.stopPropagation()}\n            >\n              <button\n                className={styles.closeButton}\n                onClick={() => setSelectedCourse(null)}\n              >\n                ×\n              </button>\n\n              <div className={styles.modalHeader}>\n                <img src={selectedCourse.image} alt={selectedCourse.title} />\n                <div className={styles.modalTitle}>\n                  <h2>{selectedCourse.title}</h2>\n                  <p>{selectedCourse.description}</p>\n                </div>\n              </div>\n\n              <div className={styles.modalBody}>\n                <div className={styles.modalSection}>\n                  <h3>What You'll Learn</h3>\n                  <ul>\n                    {selectedCourse.topics.map((topic, index) => (\n                      <li key={index}>{topic}</li>\n                    ))}\n                  </ul>\n                </div>\n\n                <div className={styles.courseDetails}>\n                  <div className={styles.detailItem}>\n                    <strong>Duration:</strong> {selectedCourse.duration}\n                  </div>\n                  <div className={styles.detailItem}>\n                    <strong>Level:</strong> {selectedCourse.level}\n                  </div>\n                  <div className={styles.detailItem}>\n                    <strong>Instructor:</strong> {selectedCourse.instructor}\n                  </div>\n                  <div className={styles.detailItem}>\n                    <strong>Status:</strong> {selectedCourse.enrollmentStatus}\n                  </div>\n                </div>\n              </div>\n\n              <div className={styles.modalFooter}>\n                <button\n                  className=\"btn btn-primary btn-lg\"\n                  onClick={() => handleEnrollment(selectedCourse.id)}\n                  disabled={selectedCourse.enrollmentStatus !== \"open\"}\n                >\n                  Enroll Now - ${selectedCourse.price}\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </Layout>\n  );\n}\n","size_bytes":10889},"src/app/student/my-course/page.tsx":{"content":"\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport StudentLayout from \"../../../components/layout/StudentLayout\";\nimport VideoPlayer from \"../../../components/ui/VideoPlayer\";\nimport styles from \"./MyCourse.module.css\";\n\nexport default function MyCourse() {\n  const [course, setCourse] = useState<any>(null);\n  const [progress, setProgress] = useState<any>(null);\n  const [currentModule, setCurrentModule] = useState<any>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const router = useRouter();\n\n  useEffect(() => {\n    const studentSession = localStorage.getItem(\"student_session\");\n    if (!studentSession) {\n      router.push(\"/student/login\");\n      return;\n    }\n    fetchCourseData();\n  }, []);\n\n  const fetchCourseData = async () => {\n    try {\n      const response = await fetch(\"/api/student/dashboard\");\n      const data = await response.json();\n      if (response.ok) {\n        setCourse(data.course);\n        setProgress(data.progress);\n        if (data.course?.modules?.length > 0) {\n          setCurrentModule(data.course.modules[0]);\n        }\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch course data:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleModuleSelect = (module: any) => {\n    setCurrentModule(module);\n  };\n\n  const handleVideoProgress = async (\n    moduleId: string,\n    progress: number,\n    watchTime: number\n  ) => {\n    try {\n      await fetch(\"/api/student/progress\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ moduleId, progress, watchTime }),\n      });\n    } catch (error) {\n      console.error(\"Failed to update progress:\", error);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <StudentLayout>\n        <div className={styles.loading}>Loading your course...</div>\n      </StudentLayout>\n    );\n  }\n\n  if (!course) {\n    return (\n      <StudentLayout>\n        <div className={styles.noCourse}>\n          <h2>No Course Assigned</h2>\n          <p>Please contact your instructor to get enrolled in a course.</p>\n        </div>\n      </StudentLayout>\n    );\n  }\n\n  return (\n    <StudentLayout>\n      <div className={styles.myCoursePage}>\n        <div className={styles.courseHeader}>\n          <h1 className={styles.courseTitle}>{course.title}</h1>\n          <p className={styles.courseDescription}>{course.description}</p>\n          <div className={styles.progressOverview}>\n            <div className={styles.progressBar}>\n              <div\n                className={styles.progressFill}\n                style={{ width: `${progress?.progressPercent || 0}%` }}\n              ></div>\n            </div>\n            <span className={styles.progressText}>\n              {Math.round(progress?.progressPercent || 0)}% Complete\n            </span>\n          </div>\n        </div>\n\n        <div className={styles.courseContent}>\n          <div className={styles.modulesList}>\n            <h2>Course Modules</h2>\n            {course.modules?.map((module: any, index: number) => (\n              <div\n                key={module.id}\n                className={`${styles.moduleItem} ${\n                  currentModule?.id === module.id ? styles.active : \"\"\n                } ${\n                  progress?.completedModules?.includes(module.id)\n                    ? styles.completed\n                    : \"\"\n                }`}\n                onClick={() => handleModuleSelect(module)}\n              >\n                <div className={styles.moduleNumber}>{index + 1}</div>\n                <div className={styles.moduleContent}>\n                  <h3>{module.title}</h3>\n                  <p>\n                    {module.duration\n                      ? `${module.duration} min`\n                      : \"Duration varies\"}\n                  </p>\n                </div>\n                <div className={styles.moduleStatus}>\n                  {progress?.completedModules?.includes(module.id) ? \"✓\" : \"○\"}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.videoSection}>\n            {currentModule ? (\n              <>\n                <h2>{currentModule.title}</h2>\n                {currentModule.description && (\n                  <p className={styles.moduleDescription}>\n                    {currentModule.description}\n                  </p>\n                )}\n\n                {currentModule.videoUrl ? (\n                  <VideoPlayer\n                    src={currentModule.videoUrl}\n                    onProgress={(progress, watchTime) =>\n                      handleVideoProgress(currentModule.id, progress, watchTime)\n                    }\n                    startTime={\n                      progress?.moduleProgress?.[currentModule.id]\n                        ?.lastPosition || 0\n                    }\n                  />\n                ) : (\n                  <div className={styles.textContent}>\n                    <h3>Module Content</h3>\n                    <div className={styles.contentText}>\n                      {currentModule.content ||\n                        \"No content available for this module.\"}\n                    </div>\n                  </div>\n                )}\n              </>\n            ) : (\n              <div className={styles.selectModule}>\n                <h3>Select a Module</h3>\n                <p>Choose a module from the list to start learning.</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </StudentLayout>\n  );\n}\n","size_bytes":5594},"src/components/layout/Footer.module.css":{"content":".footer {\r\n    background-color: var(--color-secondary-bg);\r\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n    padding: var(--spacing-3xl) 0 var(--spacing-lg);\r\n    position: relative;\r\n    max-height: none;\r\n    height: auto;\r\n    overflow-y: visible;\r\n    backdrop-filter: blur(10px);\r\n    -webkit-backdrop-filter: blur(10px);\r\n    box-shadow: 0 -8px 32px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.footerVisible {\r\n    transform: translateY(0);\r\n}\r\n\r\n.footerHidden {\r\n    transform: translateY(100%);\r\n}\r\n\r\n.footerContent {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n    gap: var(--spacing-2xl);\r\n}\r\n\r\n.section {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: var(--spacing-md);\r\n}\r\n\r\n.sectionTitle {\r\n    font-size: var(--font-size-4xl);\r\n    font-weight: 600;\r\n    color: var(--color-text-primary);\r\n    margin-bottom: var(--spacing-xs);\r\n}\r\n\r\n.description {\r\n    color: var(--color-text-secondary);\r\n    line-height: 1.6;\r\n    font-size: var(--font-size-base);\r\n    padding-left: 10px;\r\n}\r\n\r\n.socialLinks {\r\n    display: flex;\r\n    gap: var(--spacing-lg);\r\n    margin-top: var(--spacing-sm);\r\n    \r\n}\r\n\r\n.socialLink {\r\n    color: var(--color-text-secondary);\r\n    text-decoration: none;\r\n    padding: var(--spacing-sm);\r\n    border-radius: var(--radius-md);\r\n    transition: all var(--transition-normal);\r\n    font-size: var(--font-size-3xl);\r\n}\r\n\r\n.socialLink:hover {\r\n    color: var(--color-text-primary);\r\n    transform: translateY(-2px);\r\n}\r\n\r\n.linkList {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: var(--spacing-sm);\r\n}\r\n\r\n.footerLink {\r\n    color: var(--color-text-secondary);\r\n    text-decoration: none;\r\n    font-size: var(--font-size-base);\r\n    transition: all var(--transition-normal);\r\n    padding-left: 10px;\r\n}\r\n\r\n.footerLink:hover {\r\n    color: var(--color-text-primary);\r\n    padding-left: var(--spacing-sm);\r\n}\r\n\r\n.contactInfo {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: var(--spacing-sm);\r\n    padding-left: 10px;\r\n}\r\n\r\n.contactItem {\r\n    color: var(--color-text-secondary);\r\n    font-size: var(--font-size-base);\r\n    line-height: 1.5;\r\n}\r\n\r\n.contactItem strong {\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n.newsletter {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    gap: var(--spacing-xl);\r\n    padding: var(--spacing-xl);\r\n    background: var(--color-tertiary-bg);\r\n    border-radius: 20px;\r\n    border: 1px solid rgba(255, 255, 255, 0.1);\r\n    margin: var(--spacing-xl) 0;\r\n}\r\n\r\n.newsletterContent {\r\n    flex: 1;\r\n}\r\n\r\n.newsletterTitle {\r\n    font-size: var(--font-size-xl);\r\n    font-weight: 600;\r\n    color: var(--color-text-primary);\r\n    margin-bottom: var(--spacing-xs);\r\n}\r\n\r\n.newsletterDescription {\r\n    color: var(--color-text-secondary);\r\n    font-size: var(--font-size-sm);\r\n}\r\n\r\n.newsletterForm {\r\n    display: flex;\r\n    gap: var(--spacing-md);\r\n    align-items: center;\r\n    flex-shrink: 0;\r\n}\r\n\r\n.newsletterInput {\r\n    min-width: 280px;\r\n}\r\n\r\n.bottomBar {\r\n    border-top: 1px solid var(--color-border);\r\n    padding: var(--spacing-lg) 0;\r\n}\r\n\r\n.bottomContent {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    gap: var(--spacing-lg);\r\n}\r\n\r\n.copyright {\r\n    color: var(--color-text-muted);\r\n    font-size: var(--font-size-sm);\r\n}\r\n\r\n.legalLinks {\r\n    display: flex;\r\n    gap: var(--spacing-lg);\r\n}\r\n\r\n.legalLink {\r\n    color: var(--color-text-muted);\r\n    text-decoration: none;\r\n    font-size: var(--font-size-sm);\r\n    transition: color var(--transition-normal);\r\n}\r\n\r\n.legalLink:hover {\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n/* Large Fringe Text */\r\n.fringeText {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    font-size: 20rem;\r\n    font-weight: 900;\r\n    color: rgba(255, 255, 255, 0.04);\r\n    white-space: nowrap;\r\n    pointer-events: none;\r\n    user-select: none;\r\n    z-index: -1;\r\n    height: 90%;\r\n    overflow: hidden;\r\n}\r\n\r\n/* Mobile Responsive */\r\n@media (max-width: 768px) {\r\n    .footer {\r\n        max-height: 85vh;\r\n        padding: var(--spacing-2xl) 0 var(--spacing-md);\r\n    }\r\n\r\n    .fringeText {\r\n        display: none;\r\n    }\r\n\r\n    .footerContent {\r\n        grid-template-columns: 1fr;\r\n        gap: var(--spacing-xl);\r\n    }\r\n\r\n    .newsletter {\r\n        flex-direction: column;\r\n        align-items: stretch;\r\n        text-align: center;\r\n        gap: var(--spacing-lg);\r\n    }\r\n\r\n    .newsletterForm {\r\n        flex-direction: column;\r\n        gap: var(--spacing-md);\r\n    }\r\n\r\n    .newsletterInput {\r\n        min-width: 100%;\r\n    }\r\n\r\n    .bottomContent {\r\n        flex-direction: column;\r\n        text-align: center;\r\n        gap: var(--spacing-md);\r\n    }\r\n\r\n    .legalLinks {\r\n        justify-content: center;\r\n        flex-wrap: wrap;\r\n    }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n    .footer {\r\n        padding: var(--spacing-xl) 0 var(--spacing-sm);\r\n        max-height: 80vh;\r\n    }\r\n\r\n    .fringeText {\r\n        font-size: 6rem;\r\n    }\r\n\r\n    .socialLinks {\r\n        justify-content: center;\r\n    }\r\n\r\n    .legalLinks {\r\n        gap: var(--spacing-md);\r\n    }\r\n}\r\n\r\n@media (max-width: 320px) {\r\n    .fringeText {\r\n        font-size: 4rem;\r\n    }\r\n}","size_bytes":5247},"src/app/globals.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n    --foreground-rgb: 0, 0, 0;\n    --background-start-rgb: 214, 219, 220;\n    --background-end-rgb: 255, 255, 255;\n}\n\n@media (prefers-color-scheme: dark) {\n    :root {\n        --foreground-rgb: 255, 255, 255;\n        --background-start-rgb: 0, 0, 0;\n        --background-end-rgb: 0, 0, 0;\n    }\n}\n\nbody {\n    color: rgb(var(--foreground-rgb));\n    background: linear-gradient(to bottom,\n            transparent,\n            rgb(var(--background-end-rgb))) rgb(var(--background-start-rgb));\n    margin: 0;\n    padding: 0;\n}\n\n/* Ensure no gaps between sections */\nsection {\n    margin: 0 !important;\n    padding: 0;\n    display: block;\n}\n\n/* Remove default margins from main elements */\nmain {\n    margin: 0;\n    padding: 0;\n}\n\n/* Specific fix for Hero and Services sections */\nsection[id=\"services\"] {\n    margin-top: 0 !important;\n    padding-top: 0 !important;\n}\n\n/* Remove any default spacing from divs */\ndiv {\n    margin: 0;\n}\n\n.button {\n    padding: 0.5rem 1rem;\n    background-color: #4f46e5;\n    color: white;\n    border-radius: 0.5rem;\n    text-decoration: none;\n    transition: background-color 0.3s;\n}\n\n.button:hover {\n    background-color: #4338ca;\n}","size_bytes":1229},"src/components/layout/index.ts":{"content":"// Layout Components\r\nexport { default as Header } from './Header';\r\nexport { default as Footer } from './Footer';\r\nexport { default as Layout } from './Layout';\r\nexport { default as AdminLayout } from './AdminLayout';\r\nexport { default as StudentLayout } from './StudentLayout';\r\nexport { default as SmoothScrollProvider } from './SmoothScrollProvider';","size_bytes":354},"src/app/admin/settings/page.tsx":{"content":"\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport AdminLayout from \"../../../components/layout/AdminLayout\";\r\nimport { settingsService, type SiteSettings } from \"../../../services/settings.service\";\r\nimport styles from \"./Settings.module.css\";\r\n\r\nexport default function SettingsPage() {\r\n  const [settings, setSettings] = useState<SiteSettings | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const adminSession = localStorage.getItem(\"admin_session\");\r\n    if (!adminSession) {\r\n      router.push(\"/admin/login\");\r\n      return;\r\n    }\r\n    fetchSettings();\r\n  }, []);\r\n\r\n  const fetchSettings = async () => {\r\n    try {\r\n      const data = await settingsService.getSettings();\r\n      setSettings(data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch settings:\", error);\r\n      setMessage(\"Failed to load settings\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTogglePrices = async () => {\r\n    if (!settings) return;\r\n    \r\n    setIsSaving(true);\r\n    try {\r\n      const updatedSettings = await settingsService.togglePriceVisibility();\r\n      setSettings(updatedSettings);\r\n      setMessage(`Price visibility ${updatedSettings.showPrices ? 'enabled' : 'disabled'} successfully!`);\r\n      setTimeout(() => setMessage(\"\"), 3000);\r\n    } catch (error) {\r\n      console.error(\"Failed to toggle price visibility:\", error);\r\n      setMessage(\"Failed to update price visibility\");\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdateSettings = async (updatedData: Partial<SiteSettings>) => {\r\n    if (!settings) return;\r\n\r\n    setIsSaving(true);\r\n    try {\r\n      const updatedSettings = await settingsService.updateSettings(updatedData);\r\n      setSettings(updatedSettings);\r\n      setMessage(\"Settings updated successfully!\");\r\n      setTimeout(() => setMessage(\"\"), 3000);\r\n    } catch (error) {\r\n      console.error(\"Failed to update settings:\", error);\r\n      setMessage(\"Failed to update settings\");\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <AdminLayout>\r\n        <div className={styles.loading}>Loading settings...</div>\r\n      </AdminLayout>\r\n    );\r\n  }\r\n\r\n  if (!settings) {\r\n    return (\r\n      <AdminLayout>\r\n        <div className={styles.error}>Failed to load settings</div>\r\n      </AdminLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <div className={styles.settingsPage}>\r\n        <div className={styles.header}>\r\n          <h1 className={styles.title}>Site Settings</h1>\r\n          <p className={styles.subtitle}>Manage your website configuration</p>\r\n        </div>\r\n\r\n        {message && (\r\n          <div className={`${styles.message} ${message.includes('Failed') ? styles.error : styles.success}`}>\r\n            {message}\r\n          </div>\r\n        )}\r\n\r\n        <div className={styles.settingsGrid}>\r\n          {/* Price Visibility Settings */}\r\n          <div className={`card ${styles.settingCard}`}>\r\n            <div className={styles.cardHeader}>\r\n              <h2 className={styles.cardTitle}>Price Display</h2>\r\n              <p className={styles.cardDescription}>\r\n                Control whether prices are shown on the public website\r\n              </p>\r\n            </div>\r\n            <div className={styles.cardContent}>\r\n              <div className={styles.toggleContainer}>\r\n                <label className={styles.toggleLabel}>\r\n                  <span>Show Prices on Website</span>\r\n                  <div className={styles.toggle}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={settings.showPrices}\r\n                      onChange={handleTogglePrices}\r\n                      disabled={isSaving}\r\n                    />\r\n                    <span className={styles.toggleSlider}></span>\r\n                  </div>\r\n                </label>\r\n                <p className={styles.toggleDescription}>\r\n                  {settings.showPrices \r\n                    ? \"Prices are currently visible to all website visitors\"\r\n                    : \"Prices are hidden from public view - visitors must contact for pricing\"\r\n                  }\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Site Information */}\r\n          <div className={`card ${styles.settingCard}`}>\r\n            <div className={styles.cardHeader}>\r\n              <h2 className={styles.cardTitle}>Site Information</h2>\r\n              <p className={styles.cardDescription}>\r\n                Basic information about your business\r\n              </p>\r\n            </div>\r\n            <div className={styles.cardContent}>\r\n              <div className={styles.formGroup}>\r\n                <label>Site Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={settings.siteName}\r\n                  onChange={(e) => handleUpdateSettings({ siteName: e.target.value })}\r\n                  className=\"input\"\r\n                />\r\n              </div>\r\n              <div className={styles.formGroup}>\r\n                <label>Contact Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  value={settings.contactEmail}\r\n                  onChange={(e) => handleUpdateSettings({ contactEmail: e.target.value })}\r\n                  className=\"input\"\r\n                />\r\n              </div>\r\n              <div className={styles.formGroup}>\r\n                <label>Contact Phone</label>\r\n                <input\r\n                  type=\"tel\"\r\n                  value={settings.contactPhone}\r\n                  onChange={(e) => handleUpdateSettings({ contactPhone: e.target.value })}\r\n                  className=\"input\"\r\n                />\r\n              </div>\r\n              <div className={styles.formGroup}>\r\n                <label>Address</label>\r\n                <textarea\r\n                  value={settings.address}\r\n                  onChange={(e) => handleUpdateSettings({ address: e.target.value })}\r\n                  className=\"input\"\r\n                  rows={3}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Social Media */}\r\n          <div className={`card ${styles.settingCard}`}>\r\n            <div className={styles.cardHeader}>\r\n              <h2 className={styles.cardTitle}>Social Media</h2>\r\n              <p className={styles.cardDescription}>\r\n                Your social media profiles\r\n              </p>\r\n            </div>\r\n            <div className={styles.cardContent}>\r\n              <div className={styles.formGroup}>\r\n                <label>Facebook URL</label>\r\n                <input\r\n                  type=\"url\"\r\n                  value={settings.socialMedia.facebook || ''}\r\n                  onChange={(e) => handleUpdateSettings({ \r\n                    socialMedia: { ...settings.socialMedia, facebook: e.target.value }\r\n                  })}\r\n                  className=\"input\"\r\n                  placeholder=\"https://facebook.com/yourpage\"\r\n                />\r\n              </div>\r\n              <div className={styles.formGroup}>\r\n                <label>Instagram URL</label>\r\n                <input\r\n                  type=\"url\"\r\n                  value={settings.socialMedia.instagram || ''}\r\n                  onChange={(e) => handleUpdateSettings({ \r\n                    socialMedia: { ...settings.socialMedia, instagram: e.target.value }\r\n                  })}\r\n                  className=\"input\"\r\n                  placeholder=\"https://instagram.com/yourpage\"\r\n                />\r\n              </div>\r\n              <div className={styles.formGroup}>\r\n                <label>Twitter URL</label>\r\n                <input\r\n                  type=\"url\"\r\n                  value={settings.socialMedia.twitter || ''}\r\n                  onChange={(e) => handleUpdateSettings({ \r\n                    socialMedia: { ...settings.socialMedia, twitter: e.target.value }\r\n                  })}\r\n                  className=\"input\"\r\n                  placeholder=\"https://twitter.com/yourpage\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </AdminLayout>\r\n  );\r\n}","size_bytes":8469},"src/app/admin/newsletter/page.tsx":{"content":"\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport AdminLayout from \"../../../components/layout/AdminLayout\";\r\nimport styles from \"./Newsletter.module.css\";\r\n\r\nexport default function NewsletterPage() {\r\n  const [subscribers, setSubscribers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const adminSession = localStorage.getItem(\"admin_session\");\r\n    if (!adminSession) {\r\n      router.push(\"/admin/login\");\r\n      return;\r\n    }\r\n    fetchSubscribers();\r\n  }, []);\r\n\r\n  const fetchSubscribers = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/admin/newsletter\");\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setSubscribers(data.subscribers);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch subscribers:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const exportToCSV = () => {\r\n    const csvContent =\r\n      \"data:text/csv;charset=utf-8,\" +\r\n      \"Email,Subscribe Date\\n\" +\r\n      subscribers\r\n        .map((sub: any) => `${sub.email},${sub.subscribeDate}`)\r\n        .join(\"\\n\");\r\n\r\n    const encodedUri = encodeURI(csvContent);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", \"newsletter_subscribers.csv\");\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <AdminLayout>\r\n        <div className={styles.loading}>Loading newsletter data...</div>\r\n      </AdminLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <div className={styles.newsletterPage}>\r\n        <div className={styles.header}>\r\n          <h1 className={styles.title}>Newsletter Management</h1>\r\n          <button onClick={exportToCSV} className=\"btn btn-primary\">\r\n            Export Subscribers\r\n          </button>\r\n        </div>\r\n\r\n        <div className={styles.stats}>\r\n          <div className={`card ${styles.statCard}`}>\r\n            <h3>Total Subscribers</h3>\r\n            <p className={styles.statNumber}>{subscribers.length}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.subscribersList}>\r\n          <h2>Recent Subscribers</h2>\r\n          <div className={styles.tableContainer}>\r\n            <table className={styles.subscribersTable}>\r\n              <thead>\r\n                <tr>\r\n                  <th>Email</th>\r\n                  <th>Subscribe Date</th>\r\n                  <th>Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {subscribers.map((subscriber: any) => (\r\n                  <tr key={subscriber.id}>\r\n                    <td>{subscriber.email}</td>\r\n                    <td>\r\n                      {new Date(subscriber.subscribeDate).toLocaleDateString()}\r\n                    </td>\r\n                    <td>\r\n                      <span className={styles.activeStatus}>Active</span>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </AdminLayout>\r\n  );\r\n}\r\n","size_bytes":3282},"src/lib/api.ts":{"content":"// API Configuration for frontend\nexport const apiConfig = {\n  // Read API base URL from env. If empty, we'll treat this as \"no API\" and let services fall back to mocks.\n  baseURL: process.env.NEXT_PUBLIC_API_URL || '',\n  version: process.env.NEXT_PUBLIC_API_VERSION || 'v1',\n  apiKey: process.env.NEXT_PUBLIC_API_KEY,\n  timeout: parseInt(process.env.NEXT_PUBLIC_API_TIMEOUT || '30000'),\n  debug: process.env.NEXT_PUBLIC_API_DEBUG === 'true',\n  rateLimit: parseInt(process.env.NEXT_PUBLIC_API_RATE_LIMIT || '60'),\n};\n\n// Helper function to construct API URLs\nexport const getApiUrl = (endpoint: string): string => {\n  if (!apiConfig.baseURL) {\n    throw new ApiError(0, 'No API configured');\n  }\n\n  const baseUrl = apiConfig.baseURL.replace(/\\/$/, '');\n  const version = apiConfig.version;\n  const formattedEndpoint = endpoint.replace(/^\\//, '');\n  return `${baseUrl}/api/${version}/${formattedEndpoint}`;\n};\n\n// Helper function to get common fetch options\nexport const getDefaultFetchOptions = (): RequestInit => {\n  return {\n    headers: {\n      'Content-Type': 'application/json',\n      ...(apiConfig.apiKey ? { 'Authorization': `Bearer ${apiConfig.apiKey}` } : {}),\n    },\n    // timeout: apiConfig.timeout, // Removed because fetch does not support timeout in RequestInit\n  };\n};\n\n// API error handling\nexport class ApiError extends Error {\n  constructor(\n    public status: number,\n    message: string,\n    public data?: any\n  ) {\n    super(message);\n    this.name = 'ApiError';\n  }\n}\n\n// Generic fetch wrapper with error handling\nexport async function fetchApi<T>(\n  endpoint: string,\n  options: RequestInit = {}\n): Promise<T> {\n  const url = getApiUrl(endpoint);\n  const fetchOptions = {\n    ...getDefaultFetchOptions(),\n    ...options,\n  };\n\n  if (apiConfig.debug) {\n    console.log(`API Request: ${url}`, fetchOptions);\n  }\n\n  try {\n    const response = await fetch(url, fetchOptions);\n    const data = await response.json();\n\n    if (!response.ok) {\n      throw new ApiError(response.status, response.statusText, data);\n    }\n\n    if (apiConfig.debug) {\n      console.log(`API Response: ${url}`, data);\n    }\n\n    return data as T;\n  } catch (error) {\n    // If getApiUrl threw a 'No API configured' ApiError, rethrow so services fall back to mocks.\n    if (error instanceof ApiError) {\n      throw error;\n    }\n    // Wrap unknown errors so callers receive a consistent ApiError type\n    throw new ApiError(500, 'Internal Client Error', error);\n  }\n}","size_bytes":2462},"src/app/reviews/Reviews.module.css":{"content":".reviewsPage {\n    min-height: 100vh;\n}\n\n.loading {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 50vh;\n    font-size: var(--font-size-lg);\n    color: var(--color-text-secondary);\n}\n\n/* Hero Section */\n.hero {\n    padding: calc(80px + var(--spacing-3xl)) 0 var(--spacing-3xl);\n    text-align: center;\n    background: var(--gradient-primary);\n}\n\n.title {\n    font-size: var(--font-size-5xl);\n    font-weight: 700;\n    margin-bottom: var(--spacing-md);\n    background: linear-gradient(135deg, #ffffff 0%, #cccccc 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n}\n\n.subtitle {\n    font-size: var(--font-size-xl);\n    color: var(--color-text-secondary);\n    margin-bottom: var(--spacing-3xl);\n    max-width: 600px;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.stats {\n    display: flex;\n    justify-content: center;\n    gap: var(--spacing-3xl);\n    margin-top: var(--spacing-3xl);\n}\n\n.statItem {\n    text-align: center;\n}\n\n.statNumber {\n    font-size: var(--font-size-4xl);\n    font-weight: 700;\n    color: var(--color-text-primary);\n    margin-bottom: var(--spacing-xs);\n}\n\n.statStars {\n    margin-bottom: var(--spacing-sm);\n}\n\n.statLabel {\n    font-size: var(--font-size-sm);\n    color: var(--color-text-muted);\n    text-transform: uppercase;\n    letter-spacing: 0.05em;\n}\n\n/* Filter Section */\n.filters {\n    padding: var(--spacing-3xl) 0;\n    background: var(--color-secondary-bg);\n}\n\n.filterButtons {\n    display: flex;\n    justify-content: center;\n    gap: var(--spacing-md);\n    flex-wrap: wrap;\n}\n\n.filterBtn {\n    background: transparent;\n    border: 2px solid var(--color-border);\n    color: var(--color-text-secondary);\n    padding: var(--spacing-sm) var(--spacing-xl);\n    border-radius: var(--radius-full);\n    cursor: pointer;\n    transition: all var(--transition-normal);\n    font-weight: 500;\n}\n\n.filterBtn:hover {\n    border-color: var(--color-text-primary);\n    color: var(--color-text-primary);\n    transform: translateY(-2px);\n}\n\n.filterBtn.active {\n    background: var(--color-text-primary);\n    color: var(--color-primary-bg);\n    border-color: var(--color-text-primary);\n}\n\n/* Reviews Section */\n.reviewsSection {\n    padding: var(--spacing-3xl) 0;\n}\n\n.reviewsGrid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n    gap: var(--spacing-2xl);\n}\n\n.reviewCard {\n    background: var(--color-card-bg);\n    border: 1px solid var(--color-card-border);\n    border-radius: var(--radius-lg);\n    padding: var(--spacing-xl);\n    transition: all var(--transition-normal);\n    height: fit-content;\n}\n\n.reviewCard:hover {\n    border-color: var(--color-border-hover);\n    transform: translateY(-4px);\n    box-shadow: var(--shadow-lg);\n}\n\n.reviewHeader {\n    display: flex;\n    align-items: flex-start;\n    justify-content: space-between;\n    margin-bottom: var(--spacing-lg);\n}\n\n.reviewerInfo {\n    display: flex;\n    align-items: center;\n    gap: var(--spacing-md);\n}\n\n.reviewerAvatar {\n    width: 50px;\n    height: 50px;\n    border-radius: var(--radius-full);\n    overflow: hidden;\n    flex-shrink: 0;\n}\n\n.reviewerAvatar img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n}\n\n.avatarPlaceholder {\n    width: 100%;\n    height: 100%;\n    background: var(--gradient-accent);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: 600;\n    color: var(--color-primary-bg);\n    font-size: var(--font-size-lg);\n}\n\n.reviewerDetails {\n    flex: 1;\n}\n\n.reviewerName {\n    font-size: var(--font-size-lg);\n    font-weight: 600;\n    color: var(--color-text-primary);\n    margin-bottom: var(--spacing-xs);\n}\n\n.reviewService {\n    font-size: var(--font-size-sm);\n    color: var(--color-text-muted);\n}\n\n.reviewRating {\n    display: flex;\n    gap: 2px;\n}\n\n.star {\n    font-size: var(--font-size-lg);\n    color: var(--color-border);\n    transition: color var(--transition-fast);\n}\n\n.star.filled {\n    color: #fbbf24;\n}\n\n.reviewContent {\n    margin-bottom: var(--spacing-lg);\n}\n\n.reviewComment {\n    font-size: var(--font-size-base);\n    line-height: 1.7;\n    color: var(--color-text-secondary);\n    font-style: italic;\n}\n\n.reviewFooter {\n    border-top: 1px solid var(--color-border);\n    padding-top: var(--spacing-md);\n}\n\n.reviewDate {\n    font-size: var(--font-size-sm);\n    color: var(--color-text-muted);\n}\n\n/* Call to Action */\n.cta {\n    padding: var(--spacing-3xl) 0;\n    background: var(--color-tertiary-bg);\n}\n\n.ctaContent {\n    text-align: center;\n    max-width: 600px;\n    margin: 0 auto;\n}\n\n.ctaContent h2 {\n    font-size: var(--font-size-3xl);\n    font-weight: 700;\n    margin-bottom: var(--spacing-md);\n    color: var(--color-text-primary);\n}\n\n.ctaContent p {\n    font-size: var(--font-size-lg);\n    color: var(--color-text-secondary);\n    margin-bottom: var(--spacing-xl);\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n    .title {\n        font-size: var(--font-size-4xl);\n    }\n\n    .subtitle {\n        font-size: var(--font-size-lg);\n    }\n\n    .stats {\n        flex-direction: column;\n        gap: var(--spacing-xl);\n    }\n\n    .reviewsGrid {\n        grid-template-columns: 1fr;\n        gap: var(--spacing-lg);\n    }\n\n    .filterButtons {\n        flex-direction: column;\n        align-items: center;\n    }\n\n    .filterBtn {\n        width: 200px;\n    }\n\n    .reviewHeader {\n        flex-direction: column;\n        gap: var(--spacing-md);\n        align-items: flex-start;\n    }\n\n    .reviewRating {\n        align-self: flex-end;\n    }\n}\n\n@media (max-width: 480px) {\n    .hero {\n        padding: calc(80px + var(--spacing-2xl)) 0 var(--spacing-2xl);\n    }\n\n    .title {\n        font-size: var(--font-size-3xl);\n    }\n\n    .reviewCard {\n        padding: var(--spacing-lg);\n    }\n\n    .ctaContent h2 {\n        font-size: var(--font-size-2xl);\n    }\n}","size_bytes":5858},"src/components/layout/Header.tsx":{"content":"\"use client\";\nimport { useState, useEffect } from \"react\";\nimport styles from \"./Header.module.css\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport \"remixicon/fonts/remixicon.css\";\nimport FlowingMenu from \"../navigation/FlowingMenu\";\n\nexport default function Header() {\n  const [navOpen, setNavOpen] = useState(false);\n  const [isClosing, setIsClosing] = useState(false);\n  const [scrolled, setScrolled] = useState(false);\n  const pathname = usePathname();\n\n  // Handle scroll effect\n  useEffect(() => {\n    const handleScroll = () => {\n      setScrolled(window.scrollY > 50);\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  // Prevent body scroll when menu is open\n  useEffect(() => {\n    if (navOpen) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"unset\";\n    }\n\n    return () => {\n      document.body.style.overflow = \"unset\";\n    };\n  }, [navOpen]);\n\n  const handleClose = () => {\n    setIsClosing(true);\n    setTimeout(() => {\n      setNavOpen(false);\n      setIsClosing(false);\n    }, 400); // Match animation duration\n  };\n\n  // Improved navigation items with better organization\n  const navigationItems = [\n    {\n      link: \"/\",\n      text: \"Home\",\n      image: \"https://picsum.photos/600/400?random=1\",\n    },\n    {\n      link: \"/about\",\n      text: \"About Us\",\n      image: \"https://picsum.photos/600/400?random=2\",\n    },\n    {\n      link: \"/services\",\n      text: \"Services\",\n      image: \"https://picsum.photos/600/400?random=3\",\n    },\n    {\n      link: \"/courses\",\n      text: \"Courses\",\n      image: \"https://picsum.photos/600/400?random=4\",\n    },\n    {\n      link: \"/contact\",\n      text: \"Contact Us\",\n      image: \"https://picsum.photos/600/400?random=5\",\n    },\n  ];\n\n  // Check if current page should show different header style\n  const isHomePage = pathname === \"/\";\n  const isAuthPage = pathname.includes(\"/login\");\n\n  return (\n    <>\n      <div\n        className={`${styles.headerSpacer} ${\n          scrolled ? styles.headerScrolled : \"\"\n        } ${isAuthPage ? styles.headerAuth : \"\"}`}\n      >\n        <div className={styles.headerContainer}>\n          <Link href=\"/\" className={styles.headerLogo_container}>\n            <Image\n              src=\"/logoDark-0.svg\"\n              alt=\"The Fringe Logo\"\n              width={80}\n              height={80}\n              priority\n              className={styles.headerLogo}\n            />\n          </Link>\n\n          <nav className={styles.headerNav} aria-label=\"Main navigation\">\n            <div className={styles.headerLinks}>\n              <Link href=\"/book-now\">\n                <button\n                  className={`${styles.headerCTA_button} ${styles.headerCTA_header}`}\n                  aria-label=\"Book appointment\"\n                >\n                  Book Now\n                </button>\n              </Link>\n              <button\n                className={styles.headerMenu_button}\n                onClick={() => setNavOpen(true)}\n                aria-label=\"Open navigation menu\"\n                aria-expanded={navOpen}\n              >\n                <i className=\"ri-menu-4-fill\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </nav>\n        </div>\n      </div>\n\n      {/* Navigation Pop Up Menu */}\n      {navOpen && (\n        <div className={styles.headerNav_popup}>\n          {/* Navigation Pop Up Menu Left */}\n          <div\n            className={\n              isClosing\n                ? `${styles.headerNav_popup_left} ${styles.slideOutLeft}`\n                : `${styles.headerNav_popup_left} ${styles.slideInLeft}`\n            }\n          >\n            <div className={styles.headerNav_popup_left_content}>\n              <div className={styles.headerNav_popup_left_content_top}>\n                <h1>The</h1>\n                <br />\n                <p>\n                  Fringe\n                </p>\n              </div>\n            </div>\n          </div>\n          {/* Navigation Pop Up Menu Right */}\n          <div\n            className={\n              isClosing\n                ? `${styles.headerNav_popup_right} ${styles.slideOutRight}`\n                : `${styles.headerNav_popup_right} ${styles.slideInRight}`\n            }\n          >\n            {/* Navigation Pop Up Menu Right Div's Top Left Corner Logo */}\n            <div className={styles.headerNav_popup_logo_container}>\n              <Link href=\"/\">\n                <Image\n                  src=\"/logo.svg\"\n                  alt=\"The Fringe Logo\"\n                  width={100}\n                  height={100}\n                />\n              </Link>\n            </div>\n            {/* Navigation Pop Up Menu Close Button */}\n            <div className={styles.headerNav_popup_close_container}>\n              <button\n                className={styles.headerNav_popup_close_button}\n                onClick={handleClose}\n                aria-label=\"Close navigation\"\n              >\n                Close\n              </button>\n            </div>\n\n            {/* Navigation Pop Up Menu Links */}\n            <div className={styles.headerNav_popup_menu_container}>\n              <div\n                style={{ height: \"600px\", width: \"100%\", position: \"relative\" }}\n              >\n                <FlowingMenu items={navigationItems} />\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","size_bytes":5542},"src/services/settings.service.ts":{"content":"import { fetchApi } from '@/lib/api';\r\n\r\nexport interface SiteSettings {\r\n  id: string;\r\n  showPrices: boolean;\r\n  siteName: string;\r\n  contactEmail: string;\r\n  contactPhone: string;\r\n  address: string;\r\n  socialMedia: {\r\n    facebook?: string;\r\n    instagram?: string;\r\n    twitter?: string;\r\n  };\r\n  updatedAt: string;\r\n}\r\n\r\n// Mock settings for fallback\r\nconst mockSettings: SiteSettings = {\r\n  id: '1',\r\n  showPrices: true,\r\n  siteName: 'The Fringe Beauty Academy',\r\n  contactEmail: 'info@thefringe.com',\r\n  contactPhone: '+1 (555) 123-4567',\r\n  address: '123 Beauty Street, City, State 12345',\r\n  socialMedia: {\r\n    facebook: 'https://facebook.com/thefringe',\r\n    instagram: 'https://instagram.com/thefringe',\r\n    twitter: 'https://twitter.com/thefringe'\r\n  },\r\n  updatedAt: new Date().toISOString()\r\n};\r\n\r\nexport const settingsService = {\r\n  async getSettings(): Promise<SiteSettings> {\r\n    try {\r\n      return await fetchApi<SiteSettings>('/settings');\r\n    } catch (error) {\r\n      console.log('Falling back to mock settings', error);\r\n      return mockSettings;\r\n    }\r\n  },\r\n\r\n  async updateSettings(settings: Partial<SiteSettings>): Promise<SiteSettings> {\r\n    try {\r\n      return await fetchApi<SiteSettings>('/settings', {\r\n        method: 'PUT',\r\n        body: JSON.stringify(settings),\r\n      });\r\n    } catch (error) {\r\n      console.log('Simulating settings update with mock data', error);\r\n      return {\r\n        ...mockSettings,\r\n        ...settings,\r\n        updatedAt: new Date().toISOString()\r\n      };\r\n    }\r\n  },\r\n\r\n  async togglePriceVisibility(): Promise<SiteSettings> {\r\n    try {\r\n      const currentSettings = await this.getSettings();\r\n      return await this.updateSettings({\r\n        showPrices: !currentSettings.showPrices\r\n      });\r\n    } catch (error) {\r\n      console.log('Error toggling price visibility', error);\r\n      throw error;\r\n    }\r\n  }\r\n};","size_bytes":1894},"README.md":{"content":"# The Fringe Salon — Public Website\r\n\r\nThis repository contains the public-facing Next.js application for The Fringe Salon. It serves marketing pages, course listings, services, team information, and authentication entry points for users (admin and students).\r\n\r\nThis README captures how the app is organized, how to run it locally, deployment notes, and where shared/common resources live.\r\n\r\n## Table of contents\r\n\r\n- Project overview\r\n- Architecture & folder layout\r\n- Key components\r\n- Local development\r\n- Scripts\r\n- Environment variables\r\n- Common tasks & troubleshooting\r\n- Contributing\r\n\r\n## Project overview\r\n\r\n- Framework: Next.js (App Router)\r\n- Language: TypeScript (with some JS files for utilities)\r\n- Styling: Tailwind CSS + module CSS for component-scoped styles\r\n- Purpose: public marketing site and unified login that redirects users to admin or student flows\r\n\r\n## Architecture & folder layout\r\n\r\nTop-level (relevant paths inside this package):\r\n\r\n- `src/app/` — Next.js app routes and pages (App Router). Each page (home, about, services, courses, admin pages) lives here.\r\n- `src/components/` — UI components organized by domain (layout, navigation, sections, ui primitives).\r\n- `src/lib/` — small helpers (prisma client wrappers, email helpers, auth helpers used by server code).\r\n- `src/hooks/` — custom React hooks.\r\n- `src/styles/` — global styles and Tailwind entry points.\r\n- `public/` — static assets (images, logos, videos).\r\n- `common/` — shared/types/utilities used by the frontend-public app (previously `shared`). Keep shared helpers used across pages here.\r\n- `prisma/` — Prisma schema for DB models used by backend services (if bundled here).\r\n\r\nExample important paths\r\n\r\n- `src/app/login/page.tsx` — unified login page that stores token and redirects based on role.\r\n- `src/components/layout/Layout.tsx` — global layout wrapper used across pages.\r\n\r\n## Key components\r\n\r\n- Authentication helpers: `common/auth.js` — local helpers storing auth token and role in localStorage.\r\n- Shared types: `common/types.ts` — TypeScript interfaces and enums for User, Course, Service, etc.\r\n\r\n## Local development\r\n\r\nPrerequisites\r\n\r\n- Node.js >= 16.x (match project's engines if specified)\r\n- npm (or pnpm/yarn — this repo uses npm in package.json)\r\n\r\nInstall dependencies\r\n\r\n```powershell\r\ncd c:\\path\\to\\the-fringe\\frontend-public\r\nnpm install\r\n```\r\n\r\nRun dev server\r\n\r\n```powershell\r\nnpm run dev\r\n```\r\n\r\nOpen http://localhost:3000 in your browser. The dev server supports hot reload.\r\n\r\nBuild for production\r\n\r\n```powershell\r\nnpm run build\r\nnpm run start\r\n```\r\n\r\nLint\r\n\r\n```powershell\r\nnpm run lint\r\n```\r\n\r\n## Scripts (from package.json)\r\n\r\n- `dev` — start Next.js dev server\r\n- `build` — build production assets\r\n- `start` — run production server after build\r\n- `lint` — run next/ESLint\r\n\r\n## Environment variables\r\n\r\nThis application expects certain environment variables when calling backend APIs or services. Common variables (example):\r\n\r\n- `NEXT_PUBLIC_API_URL` — base URL of backend API (used by client to call endpoints)\r\n- `DATABASE_URL` — (used by Prisma during build or server-side scripts)\r\n- `SMTP_HOST`, `SMTP_USER`, `SMTP_PASS` — for sending emails (newsletter/contact)\r\n\r\nCreate a `.env.local` from the example file (if provided) and set values for local development.\r\n\r\n## Common tasks & troubleshooting\r\n\r\n- Missing module / type errors: run `npm install` and re-run `npm run build`. Ensure `@types/*` packages exist for third-party libs where you use TypeScript types.\r\n- Stale build cache: remove `.next` then re-run `npm run build`.\r\n- If imports break after renaming `shared` → `common`: update relative import paths in files under `src/` (I already converted known imports).\r\n\r\n### Where to look when something fails\r\n\r\n- Page render errors: check server console logs and browser console. Next.js stack traces point to the failing component file.\r\n- API errors: check `NEXT_PUBLIC_API_URL` and backend server logs.\r\n\r\n## Contributing\r\n\r\n- Follow existing file structure and naming conventions for components and modules.\r\n- When adding shared utilities used only by the public site, put them under `common/`. If utilities are truly cross-app, consider creating a top-level `packages/shared` or a mono-repo shared package.\r\n\r\n## Deployment notes\r\n\r\n- This project is a standard Next.js app and can be deployed to Vercel, Netlify (with serverless functions), or a Node server. For Vercel, push the repository and ensure env vars are set in the project settings.\r\n- If you use a separate backend, ensure CORS is configured to allow requests from your frontend domain.\r\n\r\n---\r\n\r\nIf you'd like, I can:\r\n\r\n- Add a small `common/index.ts` that re-exports `auth` and `types` for simpler imports.\r\n- Run a local build here and fix any broken imports (if you allow running the build).\r\n- Expand any section with more specific environment variable names and examples based on your backend setup.\r\n\r\nIf you want changes, tell me which sections to expand or any company/project-specific wording to add.\r\n","size_bytes":5084},"src/components/sections/Hero.module.css":{"content":".hero {\r\n    position: relative;\r\n    height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    overflow: hidden;\r\n    padding-top: 80px;\r\n    margin-bottom: 0;\r\n    box-sizing: border-box;\r\n    font-family: var(--font-body);\r\n    /* Account for fixed header */\r\n}\r\n\r\n.videoBackground {\r\n    opacity: 0.4;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: -2;\r\n    background: var(--color-primary-bg) url('/video-poster.jpg') center/cover no-repeat;\r\n    /* Fallback background with poster image */\r\n}\r\n\r\n.video {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    opacity: 1;\r\n    transition: opacity 1s ease-in-out;\r\n}\r\n\r\n.video.videoLoaded {\r\n    opacity: 1;\r\n}\r\n\r\n.videoOverlay {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: linear-gradient(135deg,\r\n            rgba(0, 0, 0, 0.4) 0%,\r\n            rgba(0, 0, 0, 0.2) 50%,\r\n            rgba(0, 0, 0, 0.3) 100%);\r\n    z-index: -1;\r\n}\r\n\r\n.heroContent {\r\n    position: relative;\r\n    z-index: 1;\r\n    text-align: center;\r\n    max-width: 800px;\r\n    padding: var(--spacing-2xl) 0 0 0;\r\n}\r\n\r\n.contentWrapper {\r\n    animation: fadeIn 1s ease-out;\r\n}\r\n\r\n.heroTitle {\r\n    font-size: var(--font-size-5xl);\r\n    font-weight: 700;\r\n    font-family: var(--font-heading);\r\n    line-height: 1.2;\r\n    margin-bottom: var(--spacing-xl);\r\n    color: var(--color-text-primary);\r\n    letter-spacing: -0.02em;\r\n}\r\n\r\n.heroDescription {\r\n    font-size: var(--font-size-xl);\r\n    font-family: var(--font-subheading);\r\n    color: var(--color-text-secondary);\r\n    line-height: 1.6;\r\n    margin-bottom: var(--spacing-2xl);\r\n    font-weight: 400;\r\n    letter-spacing: 0.01em;\r\n    text-align: center;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    max-width: 600px;\r\n}\r\n\r\n.ctaContainer {\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: var(--spacing-lg);\r\n    margin-bottom: var(--spacing-2xl);\r\n}\r\n\r\n.scrollIndicator {\r\n    display: none;\r\n}\r\n\r\n.scrollIndicator:hover {\r\n    animation-play-state: paused;\r\n    transform: translateX(-50%) scale(1.05) translateY(-3px);\r\n}\r\n\r\n.scrollIndicator:hover .scrollText {\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n.scrollIndicator:hover .scrollMouse {\r\n    border-color: var(--color-text-primary);\r\n}\r\n\r\n.scrollIndicator:hover .scrollWheel {\r\n    background-color: var(--color-accent-primary);\r\n}\r\n\r\n.scrollMouse {\r\n    width: 28px;\r\n    height: 45px;\r\n    border: 2px solid var(--color-text-primary);\r\n    border-radius: 14px;\r\n    position: relative;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.scrollWheel {\r\n    width: 4px;\r\n    height: 10px;\r\n    background-color: var(--color-accent-primary);\r\n    border-radius: 2px;\r\n    position: absolute;\r\n    top: 8px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    animation: scrollWheel 2s infinite;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.scrollText {\r\n    font-size: var(--font-size-xs);\r\n    font-family: var(--font-accent);\r\n    color: var(--color-text-primary);\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    font-weight: 600;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n/* Special Offer Modal */\r\n.offerModal {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.8);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 2000;\r\n    animation: fadeIn 0.3s ease-out;\r\n}\r\n\r\n.offerContent {\r\n    background: var(--color-card-bg);\r\n    border: 1px solid var(--color-border);\r\n    border-radius: var(--radius-xl);\r\n    padding: var(--spacing-2xl);\r\n    max-width: 500px;\r\n    margin: var(--spacing-lg);\r\n    text-align: center;\r\n    position: relative;\r\n    animation: slideUp 0.3s ease-out;\r\n}\r\n\r\n.closeButton {\r\n    position: absolute;\r\n    top: var(--spacing-md);\r\n    right: var(--spacing-md);\r\n    background: none;\r\n    border: none;\r\n    color: var(--color-text-primary);\r\n    font-size: var(--font-size-2xl);\r\n    cursor: pointer;\r\n    width: 32px;\r\n    height: 32px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: var(--radius-md);\r\n    transition: all var(--transition-normal);\r\n}\r\n\r\n.closeButton:hover {\r\n    background-color: var(--color-tertiary-bg);\r\n}\r\n\r\n.offerTitle {\r\n    font-size: var(--font-size-2xl);\r\n    font-weight: 700;\r\n    margin-bottom: var(--spacing-md);\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n.offerDescription {\r\n    font-size: var(--font-size-lg);\r\n    color: var(--color-text-secondary);\r\n    margin-bottom: var(--spacing-xl);\r\n    line-height: 1.6;\r\n}\r\n\r\n.offerActions {\r\n    display: flex;\r\n    gap: var(--spacing-md);\r\n    justify-content: center;\r\n}\r\n\r\n.offerToggle {\r\n    position: fixed;\r\n    bottom: var(--spacing-xl);\r\n    right: var(--spacing-xl);\r\n    background: #D0B49F;\r\n    color: #000000;\r\n    border: 2px solid rgba(255, 255, 255, 0.2);\r\n    width: 60px;\r\n    height: 60px;\r\n    border-radius: 20px;\r\n    font-size: var(--font-size-xl);\r\n    cursor: pointer;\r\n    transition: all var(--transition-normal);\r\n    z-index: 1500;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.offerToggle:hover {\r\n    transform: scale(1.1) translateY(-2px);\r\n    background: #DBC4A7;\r\n    border-color: rgba(255, 255, 255, 0.3);\r\n}\r\n\r\n/* Animations */\r\n@keyframes bounce {\r\n\r\n    0%,\r\n    20%,\r\n    50%,\r\n    80%,\r\n    100% {\r\n        transform: translateX(-50%) translateY(0);\r\n    }\r\n\r\n    40% {\r\n        transform: translateX(-50%) translateY(-10px);\r\n    }\r\n\r\n    60% {\r\n        transform: translateX(-50%) translateY(-5px);\r\n    }\r\n}\r\n\r\n@keyframes scrollWheel {\r\n    0% {\r\n        opacity: 1;\r\n        top: 6px;\r\n    }\r\n\r\n    50% {\r\n        opacity: 0.5;\r\n        top: 12px;\r\n    }\r\n\r\n    100% {\r\n        opacity: 0;\r\n        top: 18px;\r\n    }\r\n}\r\n\r\n@keyframes fadeIn {\r\n    from {\r\n        opacity: 0;\r\n    }\r\n\r\n    to {\r\n        opacity: 1;\r\n    }\r\n}\r\n\r\n@keyframes slideUp {\r\n    from {\r\n        opacity: 0;\r\n        transform: translateY(30px);\r\n    }\r\n\r\n    to {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n    }\r\n}\r\n\r\n/* ==============================================\r\n   RESPONSIVE DESIGN\r\n   ============================================== */\r\n\r\n/* Extra Large Desktop (≥1440px) */\r\n@media (min-width: 1440px) {\r\n    .hero {\r\n        padding-top: 85px;\r\n    }\r\n\r\n    .heroTitle {\r\n        font-size: 4.5rem;\r\n        line-height: 1.1;\r\n        margin-bottom: 2rem;\r\n    }\r\n\r\n    .heroDescription {\r\n        font-size: 1.4rem;\r\n        line-height: 1.7;\r\n        margin-bottom: 3rem;\r\n        max-width: 650px;\r\n    }\r\n\r\n    .scrollIndicator {\r\n        bottom: 40px;\r\n        padding: 16px 20px;\r\n        border-radius: 25px;\r\n    }\r\n\r\n    .scrollMouse {\r\n        width: 28px;\r\n        height: 45px;\r\n        border-radius: 14px;\r\n    }\r\n\r\n    .scrollWheel {\r\n        width: 4px;\r\n        height: 10px;\r\n        top: 8px;\r\n        border-radius: 2px;\r\n    }\r\n\r\n    .scrollText {\r\n        font-size: 0.9rem;\r\n        letter-spacing: 1px;\r\n        margin-top: 12px;\r\n    }\r\n}\r\n\r\n/* Large Desktop (1200px - 1439px) */\r\n@media (min-width: 1200px) and (max-width: 1439px) {\r\n    .hero {\r\n        padding-top: 80px;\r\n    }\r\n\r\n    .heroTitle {\r\n        font-size: 4.2rem;\r\n        line-height: 1.15;\r\n        margin-bottom: 1.8rem;\r\n    }\r\n\r\n    .heroDescription {\r\n        font-size: 1.3rem;\r\n        line-height: 1.65;\r\n        margin-bottom: 2.8rem;\r\n        max-width: 620px;\r\n    }\r\n\r\n    .scrollIndicator {\r\n        bottom: 35px;\r\n        padding: 15px 18px;\r\n        border-radius: 24px;\r\n    }\r\n\r\n    .scrollMouse {\r\n        width: 26px;\r\n        height: 42px;\r\n        border-radius: 13px;\r\n    }\r\n\r\n    .scrollWheel {\r\n        width: 3.5px;\r\n        height: 9px;\r\n        top: 7px;\r\n    }\r\n\r\n    .scrollText {\r\n        font-size: 0.85rem;\r\n        letter-spacing: 0.8px;\r\n        margin-top: 10px;\r\n    }\r\n}\r\n\r\n/* Medium Desktop (992px - 1199px) */\r\n@media (min-width: 992px) and (max-width: 1199px) {\r\n    .hero {\r\n        padding-top: 75px;\r\n    }\r\n\r\n    .heroTitle {\r\n        font-size: 3.8rem;\r\n        line-height: 1.2;\r\n        margin-bottom: 1.6rem;\r\n    }\r\n\r\n    .heroDescription {\r\n        font-size: 1.25rem;\r\n        line-height: 1.6;\r\n        margin-bottom: 2.5rem;\r\n        max-width: 580px;\r\n    }\r\n\r\n    .scrollIndicator {\r\n        bottom: 32px;\r\n        padding: 14px 17px;\r\n        border-radius: 22px;\r\n    }\r\n\r\n    .scrollMouse {\r\n        width: 25px;\r\n        height: 40px;\r\n        border-radius: 12px;\r\n    }\r\n\r\n    .scrollWheel {\r\n        width: 3px;\r\n        height: 8px;\r\n        top: 6px;\r\n    }\r\n\r\n    .scrollText {\r\n        font-size: 0.8rem;\r\n        letter-spacing: 0.6px;\r\n    }\r\n}\r\n\r\n/* Small Desktop / Large Tablet (769px - 991px) */\r\n@media (min-width: 769px) and (max-width: 991px) {\r\n    .hero {\r\n        padding-top: 70px;\r\n    }\r\n\r\n    .heroTitle {\r\n        font-size: 3.4rem;\r\n        line-height: 1.25;\r\n        margin-bottom: 1.4rem;\r\n    }\r\n\r\n    .heroDescription {\r\n        font-size: 1.2rem;\r\n        line-height: 1.55;\r\n        margin-bottom: 2.2rem;\r\n        max-width: 540px;\r\n    }\r\n\r\n    .ctaContainer {\r\n        gap: var(--spacing-lg);\r\n    }\r\n\r\n    .scrollIndicator {\r\n        bottom: 30px;\r\n        padding: 13px 16px;\r\n        border-radius: 21px;\r\n    }\r\n\r\n    .scrollMouse {\r\n        width: 24px;\r\n        height: 38px;\r\n        border-radius: 12px;\r\n    }\r\n\r\n    .scrollWheel {\r\n        width: 3px;\r\n        height: 7px;\r\n        top: 6px;\r\n    }\r\n\r\n    .scrollText {\r\n        font-size: 0.75rem;\r\n        letter-spacing: 0.4px;\r\n    }\r\n}\r\n\r\n/* Mobile Landscape (481px - 768px) */\r\n@media (min-width: 481px) and (max-width: 768px) {\r\n    .hero {\r\n        padding-top: 65px;\r\n    }\r\n\r\n    .heroTitle {\r\n        font-size: 2.8rem;\r\n        line-height: 1.3;\r\n        margin-bottom: 1.2rem;\r\n    }\r\n\r\n    .heroDescription {\r\n        font-size: 1.1rem;\r\n        line-height: 1.5;\r\n        margin-bottom: 2rem;\r\n        max-width: 480px;\r\n    }\r\n\r\n    /* Optimize video for mobile */\r\n    .video {\r\n        object-position: center center;\r\n    }\r\n\r\n    .videoOverlay {\r\n        background: linear-gradient(135deg,\r\n                rgba(0, 0, 0, 0.7) 0%,\r\n                rgba(0, 0, 0, 0.4) 50%,\r\n                rgba(0, 0, 0, 0.6) 100%);\r\n    }\r\n\r\n    .ctaContainer {\r\n        flex-direction: column;\r\n        align-items: center;\r\n        gap: var(--spacing-md);\r\n    }\r\n\r\n    .scrollIndicator {\r\n        bottom: 25px;\r\n        padding: 12px 16px;\r\n        border-radius: 20px;\r\n    }\r\n\r\n    .scrollMouse {\r\n        width: 24px;\r\n        height: 40px;\r\n    }\r\n\r\n    .scrollWheel {\r\n        height: 8px;\r\n        top: 6px;\r\n    }\r\n\r\n    .scrollText {\r\n        font-size: 0.7rem;\r\n    }\r\n\r\n    .offerActions {\r\n        flex-direction: column;\r\n    }\r\n\r\n    .offerToggle {\r\n        bottom: var(--spacing-lg);\r\n        right: var(--spacing-lg);\r\n        width: 50px;\r\n        height: 50px;\r\n        font-size: var(--font-size-lg);\r\n    }\r\n}\r\n\r\n/* Mobile Portrait (320px - 480px) */\r\n@media (min-width: 320px) and (max-width: 480px) {\r\n    .hero {\r\n        padding-top: 60px;\r\n    }\r\n\r\n    .heroTitle {\r\n        font-size: 2.4rem;\r\n        line-height: 1.35;\r\n        margin-bottom: 1rem;\r\n    }\r\n\r\n    .heroDescription {\r\n        font-size: 1rem;\r\n        line-height: 1.45;\r\n        margin-bottom: 1.8rem;\r\n        max-width: 420px;\r\n    }\r\n\r\n    .ctaContainer {\r\n        flex-direction: column;\r\n        align-items: center;\r\n        gap: var(--spacing-sm);\r\n    }\r\n\r\n    .scrollIndicator {\r\n        bottom: 20px;\r\n        padding: 10px 14px;\r\n        border-radius: 18px;\r\n    }\r\n\r\n    .scrollMouse {\r\n        width: 20px;\r\n        height: 35px;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    .scrollWheel {\r\n        width: 3px;\r\n        height: 6px;\r\n        top: 5px;\r\n    }\r\n\r\n    .scrollText {\r\n        font-size: 0.65rem;\r\n        letter-spacing: 0.5px;\r\n    }\r\n\r\n    .offerContent {\r\n        margin: var(--spacing-sm);\r\n        padding: var(--spacing-xl);\r\n    }\r\n\r\n    .offerToggle {\r\n        width: 45px;\r\n        height: 45px;\r\n        bottom: var(--spacing-md);\r\n        right: var(--spacing-md);\r\n    }\r\n}\r\n\r\n/* Extra Small Mobile (≤320px) */\r\n@media (max-width: 320px) {\r\n    .hero {\r\n        padding-top: 55px;\r\n    }\r\n\r\n    .heroTitle {\r\n        font-size: 2rem;\r\n        line-height: 1.4;\r\n        margin-bottom: 0.8rem;\r\n    }\r\n\r\n    .heroDescription {\r\n        font-size: 0.9rem;\r\n        line-height: 1.4;\r\n        margin-bottom: 1.5rem;\r\n        max-width: 280px;\r\n    }\r\n\r\n    .ctaContainer {\r\n        flex-direction: column;\r\n        align-items: center;\r\n        gap: 12px;\r\n    }\r\n\r\n    .scrollIndicator {\r\n        bottom: 15px;\r\n        padding: 8px 12px;\r\n        border-radius: 16px;\r\n    }\r\n\r\n    .scrollMouse {\r\n        width: 18px;\r\n        height: 32px;\r\n        border-radius: 9px;\r\n    }\r\n\r\n    .scrollWheel {\r\n        width: 2.5px;\r\n        height: 5px;\r\n        top: 4px;\r\n    }\r\n\r\n    .scrollText {\r\n        font-size: 0.6rem;\r\n        letter-spacing: 0.3px;\r\n    }\r\n\r\n    .offerToggle {\r\n        width: 40px;\r\n        height: 40px;\r\n        bottom: 12px;\r\n        right: 12px;\r\n        font-size: 0.9rem;\r\n    }\r\n}\r\n\r\n/* Reduce motion for accessibility */\r\n@media (prefers-reduced-motion: reduce) {\r\n    .contentWrapper {\r\n        animation: none;\r\n    }\r\n\r\n    .scrollIndicator {\r\n        animation: none;\r\n    }\r\n\r\n    .scrollWheel {\r\n        animation: none;\r\n    }\r\n\r\n    .offerToggle:hover {\r\n        transform: none;\r\n    }\r\n}","size_bytes":13585},"src/app/student/my-course/MyCourse.module.css":{"content":".myCoursePage {\r\n    padding: var(--spacing-xl);\r\n    min-height: 100vh;\r\n}\r\n\r\n.loading {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 50vh;\r\n    font-size: var(--font-size-lg);\r\n    color: var(--color-text-secondary);\r\n}\r\n\r\n.noCourse {\r\n    text-align: center;\r\n    padding: var(--spacing-3xl);\r\n}\r\n\r\n.noCourse h2 {\r\n    font-size: var(--font-size-3xl);\r\n    margin-bottom: var(--spacing-lg);\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n.courseHeader {\r\n    margin-bottom: var(--spacing-3xl);\r\n}\r\n\r\n.courseTitle {\r\n    font-size: var(--font-size-3xl);\r\n    font-weight: 700;\r\n    margin-bottom: var(--spacing-md);\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n.courseDescription {\r\n    font-size: var(--font-size-lg);\r\n    color: var(--color-text-secondary);\r\n    margin-bottom: var(--spacing-xl);\r\n    line-height: 1.6;\r\n}\r\n\r\n.progressOverview {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: var(--spacing-lg);\r\n}\r\n\r\n.progressBar {\r\n    flex: 1;\r\n    max-width: 300px;\r\n    height: 8px;\r\n    background: var(--color-border);\r\n    border-radius: var(--radius-full);\r\n    overflow: hidden;\r\n}\r\n\r\n.progressFill {\r\n    height: 100%;\r\n    background: linear-gradient(90deg, var(--color-text-primary) 0%, var(--color-text-secondary) 100%);\r\n    transition: width var(--transition-normal);\r\n}\r\n\r\n.progressText {\r\n    font-weight: 600;\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n.courseContent {\r\n    display: grid;\r\n    grid-template-columns: 350px 1fr;\r\n    gap: var(--spacing-2xl);\r\n}\r\n\r\n.modulesList {\r\n    background: var(--color-card-bg);\r\n    border-radius: var(--radius-lg);\r\n    border: 1px solid var(--color-card-border);\r\n    padding: var(--spacing-xl);\r\n    height: fit-content;\r\n}\r\n\r\n.modulesList h2 {\r\n    font-size: var(--font-size-xl);\r\n    margin-bottom: var(--spacing-lg);\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n.moduleItem {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: var(--spacing-md);\r\n    padding: var(--spacing-md);\r\n    border-radius: var(--radius-md);\r\n    cursor: pointer;\r\n    transition: all var(--transition-normal);\r\n    border: 2px solid transparent;\r\n    margin-bottom: var(--spacing-sm);\r\n}\r\n\r\n.moduleItem:hover {\r\n    background: var(--color-tertiary-bg);\r\n    border-color: var(--color-border-hover);\r\n}\r\n\r\n.moduleItem.active {\r\n    background: var(--color-tertiary-bg);\r\n    border-color: var(--color-text-primary);\r\n}\r\n\r\n.moduleItem.completed {\r\n    opacity: 0.7;\r\n}\r\n\r\n.moduleNumber {\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: var(--radius-full);\r\n    background: var(--color-border);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-weight: 600;\r\n    font-size: var(--font-size-sm);\r\n    color: var(--color-text-primary);\r\n    flex-shrink: 0;\r\n}\r\n\r\n.moduleItem.active .moduleNumber {\r\n    background: var(--color-text-primary);\r\n    color: var(--color-primary-bg);\r\n}\r\n\r\n.moduleContent h3 {\r\n    font-size: var(--font-size-base);\r\n    font-weight: 500;\r\n    margin-bottom: var(--spacing-xs);\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n.moduleContent p {\r\n    font-size: var(--font-size-sm);\r\n    color: var(--color-text-muted);\r\n}\r\n\r\n.moduleStatus {\r\n    font-size: var(--font-size-lg);\r\n    color: var(--color-text-secondary);\r\n}\r\n\r\n.moduleItem.completed .moduleStatus {\r\n    color: #10b981;\r\n}\r\n\r\n.videoSection {\r\n    background: var(--color-card-bg);\r\n    border-radius: var(--radius-lg);\r\n    border: 1px solid var(--color-card-border);\r\n    padding: var(--spacing-xl);\r\n}\r\n\r\n.videoSection h2 {\r\n    font-size: var(--font-size-2xl);\r\n    margin-bottom: var(--spacing-md);\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n.moduleDescription {\r\n    font-size: var(--font-size-base);\r\n    color: var(--color-text-secondary);\r\n    margin-bottom: var(--spacing-xl);\r\n    line-height: 1.6;\r\n}\r\n\r\n.textContent {\r\n    text-align: center;\r\n    padding: var(--spacing-2xl);\r\n}\r\n\r\n.textContent h3 {\r\n    font-size: var(--font-size-xl);\r\n    margin-bottom: var(--spacing-lg);\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n.contentText {\r\n    font-size: var(--font-size-base);\r\n    color: var(--color-text-secondary);\r\n    line-height: 1.7;\r\n    white-space: pre-wrap;\r\n}\r\n\r\n.selectModule {\r\n    text-align: center;\r\n    padding: var(--spacing-3xl);\r\n}\r\n\r\n.selectModule h3 {\r\n    font-size: var(--font-size-xl);\r\n    margin-bottom: var(--spacing-md);\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n@media (max-width: 1024px) {\r\n    .courseContent {\r\n        grid-template-columns: 1fr;\r\n    }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .myCoursePage {\r\n        padding: var(--spacing-md);\r\n    }\r\n\r\n    .progressOverview {\r\n        flex-direction: column;\r\n        align-items: stretch;\r\n        gap: var(--spacing-md);\r\n    }\r\n}","size_bytes":4775},"src/components/layout/AdminLayout.tsx":{"content":"\"use client\";\n\nimport { useState } from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/navigation\";\nimport styles from \"./AdminLayout.module.css\";\n\ninterface AdminLayoutProps {\n  children: React.ReactNode;\n}\n\nexport default function AdminLayout({ children }: AdminLayoutProps) {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const router = useRouter();\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"admin_session\");\n    router.push(\"/admin/login\");\n  };\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n\n  return (\n    <div className={styles.adminLayout}>\n      {/* Sidebar */}\n      <aside\n        className={`${styles.sidebar} ${\n          isSidebarOpen ? styles.open : styles.closed\n        }`}\n      >\n        <div className={styles.sidebarHeader}>\n          <Link href=\"/admin/dashboard\" className={styles.logo}>\n            <span className={styles.logoText}>The Fringe</span>\n            <span className={styles.logoSubtext}>Admin</span>\n          </Link>\n          \n          {/* Hamburger Toggle - Right side of sidebar */}\n          <button\n            onClick={toggleSidebar}\n            className={styles.toggleButton}\n            aria-label=\"Toggle sidebar\"\n          >\n            <span className={styles.hamburgerLine}></span>\n            <span className={styles.hamburgerLine}></span>\n            <span className={styles.hamburgerLine}></span>\n          </button>\n        </div>\n\n        <nav className={styles.nav}>\n          <Link href=\"/admin/dashboard\" className={styles.navLink} title=\"Dashboard\">\n            <span className={styles.navIcon}>📊</span>\n            <span className={styles.navText}>Dashboard</span>\n          </Link>\n\n          <Link href=\"/admin/courses\" className={styles.navLink} title=\"Courses\">\n            <span className={styles.navIcon}>📚</span>\n            <span className={styles.navText}>Courses</span>\n          </Link>\n\n          <Link href=\"/admin/services\" className={styles.navLink} title=\"Services\">\n            <span className={styles.navIcon}>💼</span>\n            <span className={styles.navText}>Services</span>\n          </Link>\n\n          <Link href=\"/admin/students\" className={styles.navLink} title=\"Students\">\n            <span className={styles.navIcon}>👥</span>\n            <span className={styles.navText}>Students</span>\n          </Link>\n\n          <Link href=\"/admin/newsletter\" className={styles.navLink} title=\"Newsletter\">\n            <span className={styles.navIcon}>📧</span>\n            <span className={styles.navText}>Newsletter</span>\n          </Link>\n\n          <Link href=\"/admin/certificates\" className={styles.navLink} title=\"Certificates\">\n            <span className={styles.navIcon}>🏆</span>\n            <span className={styles.navText}>Certificates</span>\n          </Link>\n\n          <Link href=\"/admin/settings\" className={styles.navLink} title=\"Settings\">\n            <span className={styles.navIcon}>⚙️</span>\n            <span className={styles.navText}>Settings</span>\n          </Link>\n        </nav>\n\n        <div className={styles.sidebarFooter}>\n          <button onClick={handleLogout} className={styles.logoutButton} title=\"Logout\">\n            <span className={styles.navIcon}>🚪</span>\n            <span className={styles.navText}>Logout</span>\n          </button>\n        </div>\n      </aside>\n\n      {/* Main Content */}\n      <main\n        className={`${styles.main} ${\n          isSidebarOpen ? styles.mainWithSidebar : styles.mainFullWidth\n        }`}\n      >\n        <div className={styles.content}>{children}</div>\n      </main>\n    </div>\n  );\n}\n","size_bytes":3657},"src/app/services/page.tsx":{"content":"\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport Layout from \"../../components/layout/Layout\";\nimport styles from \"./Services.module.css\";\nimport { servicesService } from \"@/services/services.service\";\nimport { settingsService } from \"@/services/settings.service\";\nimport type { Service } from \"@/services/services.service\";\nimport { mockServices as fallbackServices } from \"@/services/mockData\";\nimport { useAuth } from \"@/hooks/useAuth\";\n\n// Use central mock data and derive categories dynamically so UI updates when data changes\nconst serviceCategoriesFromData = (() => {\n  const cats = Array.from(new Set(fallbackServices.map((s) => s.category)));\n  const format = (c: string) =>\n    c\n      .toLowerCase()\n      .replace(/[_-]/g, \" \")\n      .split(\" \")\n      .map((w) => w.charAt(0).toUpperCase() + w.slice(1))\n      .join(\" \");\n\n  return [\n    { id: \"ALL\", name: \"All Services\" },\n    ...cats.map((c) => ({ id: c, name: format(c) })),\n  ];\n})();\n\nexport default function ServicesPage() {\n  const [selectedCategories, setSelectedCategories] = useState<string[]>([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [services, setServices] = useState<Service[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { user, isAuthenticated } = useAuth();\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [showPrices, setShowPrices] = useState(true);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const dropdown = document.querySelector('.filter-dropdown');\n      if (dropdown && !dropdown.contains(event.target as Node)) {\n        setDropdownOpen(false);\n      }\n    };\n\n    if (dropdownOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [dropdownOpen]);\n\n  // Handle URL parameters for category filtering\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const categoryParam = urlParams.get('category');\n    \n    if (categoryParam) {\n      // Check if the category exists in our categories\n      const categoryExists = serviceCategoriesFromData.some(cat => cat.id === categoryParam);\n      if (categoryExists) {\n        setSelectedCategories([categoryParam]);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [servicesData, settings] = await Promise.all([\n          servicesService.getAllServices(),\n          settingsService.getSettings()\n        ]);\n        \n        setShowPrices(settings.showPrices);\n        \n        if (servicesData && servicesData.length > 0) {\n          setServices(servicesData);\n        } else {\n          console.log(\"No services found in API, using mock data\");\n          setServices(fallbackServices);\n        }\n      } catch (error) {\n        console.log(\"Failed to fetch from API, using mock data\");\n        setServices(fallbackServices);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleBooking = (serviceId: string) => {\n    // Redirect to the static book-now page\n    window.location.href = \"/book-now\";\n  };\n\n  const filteredServices = services.filter((service) => {\n    const matchesCategory =\n      selectedCategories.length === 0 ||\n      selectedCategories.includes(\"ALL\") ||\n      selectedCategories.includes(service.category);\n\n    const matchesSearch =\n      service.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      service.description.toLowerCase().includes(searchTerm.toLowerCase());\n\n    return matchesCategory && matchesSearch;\n  });\n\n  if (loading) {\n    return (\n      <Layout>\n        <section className={styles.servicesPage}>\n          <div className={styles.container}>\n            <div className={styles.loadingContainer}>\n              <div className={styles.loader}>Loading...</div>\n            </div>\n          </div>\n        </section>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout>\n      <section className={styles.servicesPage}>\n        <div className={styles.container}>\n          {/* Hero Section */}\n          <div className={styles.hero}>\n            <h1 className={styles.pageTitle}>Our Services</h1>\n            <p className={styles.pageSubtitle}>\n              Discover our comprehensive range of premium beauty services\n            </p>\n          </div>\n\n          {/* Filters */}\n          <div className={styles.filters}>\n            <div className={styles.searchContainer}>\n              <input\n                type=\"text\"\n                placeholder=\"Search services...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className={styles.searchInput}\n              />\n            </div>\n\n            <div className={styles.categoryFilters}>\n              {/* Multi-select dropdown trigger */}\n              <div\n                className={`${styles.filterDropdown} ${\n                  dropdownOpen ? styles.open : \"\"\n                } filter-dropdown`}\n              >\n                <button\n                  className={`btn ${styles.filterButton}`}\n                  onClick={() => setDropdownOpen((s) => !s)}\n                  aria-haspopup=\"menu\"\n                  aria-expanded={dropdownOpen}\n                >\n                  {selectedCategories.length === 0\n                    ? \"Filter categories\"\n                    : `${selectedCategories.length} selected`}\n                </button>\n\n                {dropdownOpen && (\n                  <div className={styles.dropdownMenu} role=\"menu\">\n                    <div className={styles.dropdownHeader}>\n                      <button\n                        className=\"btn btn-secondary\"\n                        onClick={() => setSelectedCategories([\"ALL\"])}\n                      >\n                        All\n                      </button>\n                      <button\n                        className=\"btn btn-secondary\"\n                        onClick={() => setSelectedCategories([])}\n                      >\n                        Clear\n                      </button>\n                    </div>\n\n                    <ul className={styles.dropdownList}>\n                      {serviceCategoriesFromData.map((c) => (\n                        <li key={c.id}>\n                          <label>\n                            <input\n                              type=\"checkbox\"\n                              checked={\n                                selectedCategories.includes(\"ALL\") ||\n                                selectedCategories.includes(c.id)\n                              }\n                              onChange={(e) => {\n                                const checked = e.target.checked;\n                                setSelectedCategories((prev) => {\n                                  if (checked) {\n                                    // add\n                                    return Array.from(new Set([...prev, c.id]));\n                                  }\n                                  // remove\n                                  return prev.filter(\n                                    (x) => x !== c.id && x !== \"ALL\"\n                                  );\n                                });\n                              }}\n                            />\n                            <span className={styles.dropdownLabelText}>\n                              {c.name}\n                            </span>\n                          </label>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Services Grid */}\n          <div className={styles.servicesGrid}>\n            {filteredServices.map((service) => (\n              <div key={service.id} className={styles.serviceCard}>\n                <div className={styles.serviceImage}>\n                  <img src={service.image} alt={service.title} />\n                  <div className={styles.serviceOverlay}>\n                    <button\n                      onClick={() => handleBooking(service.id)}\n                      className=\"btn btn-primary\"\n                      disabled={!isAuthenticated}\n                    >\n                      {isAuthenticated ? \"Book Now\" : \"Login to Book\"}\n                    </button>\n                  </div>\n                </div>\n\n                <div className={styles.serviceContent}>\n                  <h3 className={styles.serviceTitle}>{service.title}</h3>\n                  <p className={styles.serviceDescription}>\n                    {service.description}\n                  </p>\n\n                  <div className={styles.serviceDetails}>\n                    <div className={styles.serviceMeta}>\n                      <span className={styles.duration}>\n                        ⏱ {service.duration}\n                      </span>\n                      {showPrices ? (\n                        <span className={styles.price}>${service.price}</span>\n                      ) : (\n                        <span className={styles.contactPrice}>Contact for pricing</span>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n\n            {filteredServices.length === 0 && (\n              <div className={styles.noResults}>\n                <h3>No services found</h3>\n                <p>Try adjusting your search or filter criteria</p>\n              </div>\n            )}\n          </div>\n\n          {/* CTA Section */}\n          <div className={styles.ctaSection}>\n            <h2 className={styles.ctaTitle}>Ready to Book Your Appointment?</h2>\n            <p className={styles.ctaDescription}>\n              Our expert stylists are ready to transform your look\n            </p>\n            <div className={styles.ctaButtons}>\n              <a href=\"/book-now\" className=\"btn btn-primary btn-lg\">\n                Book Appointment\n              </a>\n              <a href=\"/contact\" className=\"btn btn-secondary btn-lg\">\n                Contact Us\n              </a>\n            </div>\n          </div>\n        </div>\n      </section>\n    </Layout>\n  );\n}\n","size_bytes":10376},"src/app/cookie-policy/page.tsx":{"content":"import { Metadata } from 'next';\r\nimport Layout from '../../components/layout/Layout';\r\nimport styles from './CookiePolicy.module.css';\r\n\r\nexport const metadata: Metadata = {\r\n  title: 'Cookie Policy | The Fringe Beauty Academy',\r\n  description: 'Learn about how The Fringe Beauty Academy uses cookies and similar technologies to enhance your browsing experience and provide personalized services.',\r\n  keywords: 'cookie policy, cookies, tracking, web analytics, The Fringe Beauty Academy',\r\n  openGraph: {\r\n    title: 'Cookie Policy | The Fringe Beauty Academy',\r\n    description: 'Learn about how The Fringe Beauty Academy uses cookies and similar technologies.',\r\n    type: 'website',\r\n  },\r\n};\r\n\r\nexport default function CookiePolicyPage() {\r\n  const lastUpdated = \"December 15, 2024\";\r\n\r\n  return (\r\n    <Layout>\r\n      <div className={styles.cookiePage}>\r\n        <div className=\"container\">\r\n          <div className={styles.header}>\r\n            <h1 className={styles.title}>Cookie Policy</h1>\r\n            <p className={styles.lastUpdated}>Last updated: {lastUpdated}</p>\r\n          </div>\r\n\r\n          <div className={styles.content}>\r\n            <section className={styles.section}>\r\n              <h2>1. What Are Cookies?</h2>\r\n              <p>\r\n                Cookies are small text files that are stored on your device (computer, tablet, or mobile) when you visit our website. \r\n                They help us provide you with a better experience by remembering your preferences and understanding how you use our site.\r\n              </p>\r\n            </section>\r\n\r\n            <section className={styles.section}>\r\n              <h2>2. How We Use Cookies</h2>\r\n              <p>We use cookies for several purposes:</p>\r\n              <ul>\r\n                <li><strong>Essential Cookies:</strong> Required for the website to function properly</li>\r\n                <li><strong>Performance Cookies:</strong> Help us understand how visitors interact with our website</li>\r\n                <li><strong>Functionality Cookies:</strong> Remember your preferences and settings</li>\r\n                <li><strong>Marketing Cookies:</strong> Used to deliver relevant advertisements</li>\r\n              </ul>\r\n            </section>\r\n\r\n            <section className={styles.section}>\r\n              <h2>3. Types of Cookies We Use</h2>\r\n              \r\n              <div className={styles.cookieType}>\r\n                <h3>Essential Cookies</h3>\r\n                <p>\r\n                  These cookies are necessary for the website to function and cannot be switched off. They are usually set in \r\n                  response to actions made by you, such as logging in or filling in forms.\r\n                </p>\r\n                <div className={styles.cookieTable}>\r\n                  <div className={styles.tableHeader}>\r\n                    <span>Cookie Name</span>\r\n                    <span>Purpose</span>\r\n                    <span>Duration</span>\r\n                  </div>\r\n                  <div className={styles.tableRow}>\r\n                    <span>session_id</span>\r\n                    <span>Maintains your login session</span>\r\n                    <span>Session</span>\r\n                  </div>\r\n                  <div className={styles.tableRow}>\r\n                    <span>csrf_token</span>\r\n                    <span>Security protection</span>\r\n                    <span>Session</span>\r\n                  </div>\r\n                  <div className={styles.tableRow}>\r\n                    <span>cookie_consent</span>\r\n                    <span>Remembers your cookie preferences</span>\r\n                    <span>1 year</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className={styles.cookieType}>\r\n                <h3>Performance Cookies</h3>\r\n                <p>\r\n                  These cookies collect information about how visitors use our website, such as which pages are visited most often. \r\n                  This data helps us improve how our website works.\r\n                </p>\r\n                <div className={styles.cookieTable}>\r\n                  <div className={styles.tableHeader}>\r\n                    <span>Cookie Name</span>\r\n                    <span>Purpose</span>\r\n                    <span>Duration</span>\r\n                  </div>\r\n                  <div className={styles.tableRow}>\r\n                    <span>_ga</span>\r\n                    <span>Google Analytics - distinguishes users</span>\r\n                    <span>2 years</span>\r\n                  </div>\r\n                  <div className={styles.tableRow}>\r\n                    <span>_ga_*</span>\r\n                    <span>Google Analytics - session tracking</span>\r\n                    <span>2 years</span>\r\n                  </div>\r\n                  <div className={styles.tableRow}>\r\n                    <span>_gid</span>\r\n                    <span>Google Analytics - distinguishes users</span>\r\n                    <span>24 hours</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className={styles.cookieType}>\r\n                <h3>Functionality Cookies</h3>\r\n                <p>\r\n                  These cookies allow the website to remember choices you make and provide enhanced, more personal features.\r\n                </p>\r\n                <div className={styles.cookieTable}>\r\n                  <div className={styles.tableHeader}>\r\n                    <span>Cookie Name</span>\r\n                    <span>Purpose</span>\r\n                    <span>Duration</span>\r\n                  </div>\r\n                  <div className={styles.tableRow}>\r\n                    <span>user_preferences</span>\r\n                    <span>Stores your site preferences</span>\r\n                    <span>1 year</span>\r\n                  </div>\r\n                  <div className={styles.tableRow}>\r\n                    <span>language</span>\r\n                    <span>Remembers your language choice</span>\r\n                    <span>1 year</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className={styles.cookieType}>\r\n                <h3>Marketing Cookies</h3>\r\n                <p>\r\n                  These cookies are used to deliver advertisements more relevant to you and your interests. They may be set by \r\n                  us or by third-party providers whose services we use.\r\n                </p>\r\n                <div className={styles.cookieTable}>\r\n                  <div className={styles.tableHeader}>\r\n                    <span>Cookie Name</span>\r\n                    <span>Purpose</span>\r\n                    <span>Duration</span>\r\n                  </div>\r\n                  <div className={styles.tableRow}>\r\n                    <span>_fbp</span>\r\n                    <span>Facebook Pixel - tracks conversions</span>\r\n                    <span>3 months</span>\r\n                  </div>\r\n                  <div className={styles.tableRow}>\r\n                    <span>ads_preferences</span>\r\n                    <span>Stores advertising preferences</span>\r\n                    <span>1 year</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <section className={styles.section}>\r\n              <h2>4. Third-Party Cookies</h2>\r\n              <p>We may also use third-party services that set cookies on our website:</p>\r\n              <ul>\r\n                <li><strong>Google Analytics:</strong> For website analytics and performance monitoring</li>\r\n                <li><strong>Facebook Pixel:</strong> For advertising and conversion tracking</li>\r\n                <li><strong>YouTube:</strong> For embedded video content</li>\r\n                <li><strong>Payment Processors:</strong> For secure payment processing</li>\r\n              </ul>\r\n            </section>\r\n\r\n            <section className={styles.section}>\r\n              <h2>5. Managing Your Cookie Preferences</h2>\r\n              <p>You have several options for managing cookies:</p>\r\n              \r\n              <h3>Browser Settings</h3>\r\n              <p>\r\n                Most web browsers allow you to control cookies through their settings. You can usually find these options \r\n                in the \"Privacy\" or \"Security\" section of your browser's settings.\r\n              </p>\r\n\r\n              <h3>Cookie Consent Banner</h3>\r\n              <p>\r\n                When you first visit our website, you'll see a cookie consent banner where you can choose which types of \r\n                cookies to accept or reject.\r\n              </p>\r\n\r\n              <h3>Opt-Out Links</h3>\r\n              <ul>\r\n                <li>\r\n                  <a href=\"https://tools.google.com/dlpage/gaoptout\" className={styles.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    Google Analytics Opt-out\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"https://www.facebook.com/settings?tab=ads\" className={styles.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    Facebook Ad Preferences\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </section>\r\n\r\n            <section className={styles.section}>\r\n              <h2>6. Impact of Disabling Cookies</h2>\r\n              <p>\r\n                If you choose to disable cookies, some features of our website may not function properly. This could affect:\r\n              </p>\r\n              <ul>\r\n                <li>Your ability to log in and access your account</li>\r\n                <li>Personalized content and recommendations</li>\r\n                <li>Shopping cart functionality</li>\r\n                <li>Form submissions and contact features</li>\r\n                <li>Website performance and analytics</li>\r\n              </ul>\r\n            </section>\r\n\r\n            <section className={styles.section}>\r\n              <h2>7. Updates to This Policy</h2>\r\n              <p>\r\n                We may update this Cookie Policy from time to time to reflect changes in our practices or for other operational, \r\n                legal, or regulatory reasons. We will notify you of any material changes by posting the updated policy on our website.\r\n              </p>\r\n            </section>\r\n\r\n            <section className={styles.section}>\r\n              <h2>8. Contact Us</h2>\r\n              <p>\r\n                If you have any questions about our use of cookies or this Cookie Policy, please contact us:\r\n              </p>\r\n              <div className={styles.contactInfo}>\r\n                <p><strong>The Fringe Beauty Academy</strong></p>\r\n                <p>Email: <a href=\"mailto:privacy@thefringe.com\" className={styles.link}>privacy@thefringe.com</a></p>\r\n                <p>Phone: <a href=\"tel:+15551234567\" className={styles.link}>+1 (555) 123-4567</a></p>\r\n                <p>\r\n                  Privacy Policy: <a href=\"/privacy-policy\" className={styles.link}>View our Privacy Policy</a>\r\n                </p>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}","size_bytes":11187},"src/app/student/certificate/page.tsx":{"content":"\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport StudentLayout from \"../../../components/layout/StudentLayout\";\nimport styles from \"./Certificate.module.css\";\n\nexport default function CertificatePage() {\n  const [student, setStudent] = useState<any>(null);\n  const [course, setCourse] = useState<any>(null);\n  const [progress, setProgress] = useState<any>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const router = useRouter();\n\n  useEffect(() => {\n    const studentSession = localStorage.getItem(\"student_session\");\n    if (!studentSession) {\n      router.push(\"/student/login\");\n      return;\n    }\n    fetchStudentData();\n  }, []);\n\n  const fetchStudentData = async () => {\n    try {\n      const response = await fetch(\"/api/student/dashboard\");\n      const data = await response.json();\n      if (response.ok) {\n        setStudent(data.student);\n        setCourse(data.course);\n        setProgress(data.progress);\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch student data:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const generateCertificate = async () => {\n    if (progress?.progressPercent >= 100) {\n      alert(\n        \"Certificate generated! In a real application, this would create a downloadable PDF certificate.\"\n      );\n    } else {\n      alert(\n        \"You must complete 100% of the course to generate your certificate.\"\n      );\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <StudentLayout>\n        <div className={styles.loading}>Loading certificate information...</div>\n      </StudentLayout>\n    );\n  }\n\n  const isEligible = progress?.progressPercent >= 100;\n\n  return (\n    <StudentLayout>\n      <div className={styles.certificatePage}>\n        <div className={styles.header}>\n          <h1 className={styles.title}>My Certificate</h1>\n          <p className={styles.subtitle}>\n            Complete your course to earn your professional certificate\n          </p>\n        </div>\n\n        <div className={styles.certificateContainer}>\n          {isEligible ? (\n            <div className={styles.certificateCard}>\n              <div className={styles.certificatePreview}>\n                <div className={styles.certificateHeader}>\n                  <h2>Certificate of Completion</h2>\n                  <div className={styles.logo}>The Fringe Academy</div>\n                </div>\n\n                <div className={styles.certificateBody}>\n                  <p className={styles.certificateText}>\n                    This is to certify that\n                  </p>\n                  <h3 className={styles.studentName}>\n                    {student?.name || \"Student Name\"}\n                  </h3>\n                  <p className={styles.certificateText}>\n                    has successfully completed the course\n                  </p>\n                  <h4 className={styles.courseName}>{course?.title}</h4>\n                  <p className={styles.completionDate}>\n                    Completed on {new Date().toLocaleDateString()}\n                  </p>\n                </div>\n\n                <div className={styles.certificateFooter}>\n                  <div className={styles.signature}>\n                    <div className={styles.signatureLine}></div>\n                    <p>Director, The Fringe Academy</p>\n                  </div>\n                </div>\n              </div>\n\n              <div className={styles.certificateActions}>\n                <button\n                  onClick={generateCertificate}\n                  className=\"btn btn-primary btn-lg\"\n                >\n                  Download Certificate\n                </button>\n                <button\n                  onClick={() => window.print()}\n                  className=\"btn btn-secondary btn-lg\"\n                >\n                  Print Certificate\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div className={styles.progressCard}>\n              <div className={styles.progressHeader}>\n                <h2>Course Progress</h2>\n                <p>Complete your course to unlock your certificate</p>\n              </div>\n\n              <div className={styles.progressDetails}>\n                <div className={styles.progressCircle}>\n                  <div\n                    className={styles.progressRing}\n                    style={{\n                      background: `conic-gradient(var(--color-text-primary) ${\n                        (progress?.progressPercent || 0) * 3.6\n                      }deg, var(--color-border) 0deg)`,\n                    }}\n                  >\n                    <div className={styles.progressInner}>\n                      <span className={styles.progressPercent}>\n                        {Math.round(progress?.progressPercent || 0)}%\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className={styles.progressInfo}>\n                  <h3>{course?.title}</h3>\n                  <p>\n                    {progress?.completedModules?.length || 0} of{\" \"}\n                    {course?.modules?.length || 0} modules completed\n                  </p>\n                  <div className={styles.remainingModules}>\n                    <p>\n                      {Math.max(\n                        0,\n                        (course?.modules?.length || 0) -\n                          (progress?.completedModules?.length || 0)\n                      )}{\" \"}\n                      modules remaining\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <div className={styles.encouragement}>\n                <p>\n                  Keep going! You're{\" \"}\n                  {Math.round(progress?.progressPercent || 0)}% of the way\n                  there.\n                </p>\n                <a href=\"/student/my-course\" className=\"btn btn-primary\">\n                  Continue Learning\n                </a>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </StudentLayout>\n  );\n}\n","size_bytes":6141},"src/hooks/index.ts":{"content":"// Custom Hooks\r\nexport { useSmoothScroll } from './useSmoothScroll';","size_bytes":69},"src/app/book-now/page.tsx":{"content":"import Layout from \"../../components/layout/Layout\";\nimport styles from \"./BookNow.module.css\";\n\nexport default function BookNowPage() {\n  return (\n    <Layout>\n      <section className={styles.bookNowPage}>\n        <div className=\"container\">\n          {/* Hero Section */}\n          <div className={styles.hero}>\n            <h1 className={styles.pageTitle}>Book Your Appointment</h1>\n            <p className={styles.pageSubtitle}>\n              Ready for your transformation? Let's get you scheduled with our\n              expert team\n            </p>\n          </div>\n\n          <div className={styles.bookingContainer}>\n            {/* Booking Options */}\n            <div className={styles.bookingOptions}>\n              <h2 className={styles.sectionTitle}>How to Book</h2>\n\n              <div className={styles.optionCard}>\n                <div className={styles.optionIcon}>📞</div>\n                <div className={styles.optionContent}>\n                  <h3>Call Us</h3>\n                  <p>\n                    Speak directly with our booking team for personalized\n                    service\n                  </p>\n                  <div className={styles.contactDetails}>\n                    <strong>Salon Services:</strong> (555) 123-4567\n                    <br />\n                    <strong>Academy Courses:</strong> (555) 123-4568\n                  </div>\n                  <p className={styles.hours}>\n                    <strong>Hours:</strong> Mon-Fri 9AM-8PM, Sat 9AM-6PM, Sun\n                    11AM-5PM\n                  </p>\n                </div>\n              </div>\n\n              <div className={styles.optionCard}>\n                <div className={styles.optionIcon}>💬</div>\n                <div className={styles.optionContent}>\n                  <h3>Text Us</h3>\n                  <p>Quick and convenient booking via text message</p>\n                  <div className={styles.contactDetails}>\n                    <strong>Text:</strong> (555) 123-4567\n                  </div>\n                  <p className={styles.textInstructions}>\n                    Include: Your name, preferred service, and 2-3 preferred\n                    dates/times\n                  </p>\n                </div>\n              </div>\n\n              <div className={styles.optionCard}>\n                <div className={styles.optionIcon}>🏢</div>\n                <div className={styles.optionContent}>\n                  <h3>Visit Us</h3>\n                  <p>\n                    Stop by our salon for in-person booking and consultation\n                  </p>\n                  <div className={styles.contactDetails}>\n                    <strong>Address:</strong>\n                    <br />\n                    123 Beauty Street\n                    <br />\n                    Style City, SC 12345\n                  </div>\n                  <p className={styles.walkInNote}>\n                    Walk-ins welcome subject to availability\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Services & Pricing */}\n            <div className={styles.servicesInfo}>\n              <h2 className={styles.sectionTitle}>Popular Services</h2>\n\n              <div className={styles.servicesList}>\n                <div className={styles.serviceItem}>\n                  <div className={styles.serviceDetails}>\n                    <h4>Hair Cut & Style</h4>\n                    <p>Professional cut with styling</p>\n                  </div>\n                  <div className={styles.servicePrice}>\n                    <span className={styles.duration}>60 min</span>\n                    <span className={styles.price}>$85</span>\n                  </div>\n                </div>\n\n                <div className={styles.serviceItem}>\n                  <div className={styles.serviceDetails}>\n                    <h4>Hair Color & Highlights</h4>\n                    <p>Full color or highlight service</p>\n                  </div>\n                  <div className={styles.servicePrice}>\n                    <span className={styles.duration}>120 min</span>\n                    <span className={styles.price}>$150+</span>\n                  </div>\n                </div>\n\n                <div className={styles.serviceItem}>\n                  <div className={styles.serviceDetails}>\n                    <h4>Balayage/Ombre</h4>\n                    <p>Hand-painted highlighting technique</p>\n                  </div>\n                  <div className={styles.servicePrice}>\n                    <span className={styles.duration}>180 min</span>\n                    <span className={styles.price}>$200+</span>\n                  </div>\n                </div>\n\n                <div className={styles.serviceItem}>\n                  <div className={styles.serviceDetails}>\n                    <h4>Bridal Makeup</h4>\n                    <p>Complete bridal makeup package</p>\n                  </div>\n                  <div className={styles.servicePrice}>\n                    <span className={styles.duration}>90 min</span>\n                    <span className={styles.price}>$250</span>\n                  </div>\n                </div>\n\n                <div className={styles.serviceItem}>\n                  <div className={styles.serviceDetails}>\n                    <h4>Nail Art & Manicure</h4>\n                    <p>Creative nail designs</p>\n                  </div>\n                  <div className={styles.servicePrice}>\n                    <span className={styles.duration}>45 min</span>\n                    <span className={styles.price}>$65</span>\n                  </div>\n                </div>\n\n                <div className={styles.serviceItem}>\n                  <div className={styles.serviceDetails}>\n                    <h4>Facial Treatment</h4>\n                    <p>Deep cleansing facial</p>\n                  </div>\n                  <div className={styles.servicePrice}>\n                    <span className={styles.duration}>75 min</span>\n                    <span className={styles.price}>$90</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className={styles.viewAllServices}>\n                <a href=\"/services\" className=\"btn btn-secondary\">\n                  View All Services\n                </a>\n              </div>\n            </div>\n          </div>\n\n          {/* Booking Tips */}\n          <div className={styles.bookingTips}>\n            <h2 className={styles.sectionTitle}>Booking Tips</h2>\n            <div className={styles.tipsGrid}>\n              <div className={styles.tip}>\n                <div className={styles.tipIcon}>⏰</div>\n                <h3>Book in Advance</h3>\n                <p>\n                  Schedule 1-2 weeks ahead for regular services, 3-4 weeks for\n                  special events\n                </p>\n              </div>\n\n              <div className={styles.tip}>\n                <div className={styles.tipIcon}>💭</div>\n                <h3>Free Consultations</h3>\n                <p>\n                  New clients and major changes get complimentary consultations\n                </p>\n              </div>\n\n              <div className={styles.tip}>\n                <div className={styles.tipIcon}>💳</div>\n                <h3>Payment Options</h3>\n                <p>\n                  We accept cash, cards, and digital payments. Deposits may be\n                  required\n                </p>\n              </div>\n\n              <div className={styles.tip}>\n                <div className={styles.tipIcon}>📋</div>\n                <h3>Preparation</h3>\n                <p>\n                  Come with clean hair (unless otherwise specified) and bring\n                  inspiration photos\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Contact CTA */}\n          <div className={styles.contactCta}>\n            <h2>Ready to Schedule?</h2>\n            <p>\n              Our friendly team is standing by to help you book the perfect\n              appointment\n            </p>\n            <div className={styles.ctaButtons}>\n              <a href=\"tel:+15551234567\" className=\"btn btn-primary btn-lg\">\n                Call Now: (555) 123-4567\n              </a>\n              <a href=\"/contact\" className=\"btn btn-secondary btn-lg\">\n                Contact Us\n              </a>\n            </div>\n          </div>\n        </div>\n      </section>\n    </Layout>\n  );\n}\n","size_bytes":8460},"src/components/layout/StudentLayout.module.css":{"content":".studentLayout {\r\n    display: flex;\r\n    min-height: 100vh;\r\n    background: linear-gradient(135deg, #0f0f0f 0%, #1a1a1a 50%, #0f0f0f 100%);\r\n}\r\n\r\n.sidebar {\r\n    width: 280px;\r\n    background: rgba(20, 20, 20, 0.95);\r\n    backdrop-filter: blur(20px);\r\n    border-right: 1px solid rgba(255, 255, 255, 0.1);\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: fixed;\r\n    height: 100vh;\r\n    z-index: 1000;\r\n    transition: all 0.3s ease;\r\n    box-shadow: 4px 0 20px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.sidebar.closed {\r\n    width: 80px;\r\n}\r\n\r\n.sidebarHeader {\r\n    padding: 24px;\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    min-height: 80px;\r\n}\r\n\r\n.toggleButton {\r\n    background: rgba(255, 255, 255, 0.1);\r\n    border: 1px solid rgba(255, 255, 255, 0.2);\r\n    color: #ffffff;\r\n    cursor: pointer;\r\n    padding: 8px;\r\n    border-radius: 8px;\r\n    transition: all 0.3s ease;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 32px;\r\n    height: 32px;\r\n    gap: 3px;\r\n}\r\n\r\n.toggleButton:hover {\r\n    background: rgba(208, 180, 159, 0.2);\r\n    border-color: rgba(208, 180, 159, 0.4);\r\n}\r\n\r\n.hamburgerLine {\r\n    width: 16px;\r\n    height: 2px;\r\n    background: #ffffff;\r\n    border-radius: 1px;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.logo {\r\n    text-decoration: none;\r\n    display: flex;\r\n    flex-direction: column;\r\n    transition: opacity 0.3s ease;\r\n}\r\n\r\n.logoText {\r\n    font-size: 1.4rem;\r\n    font-weight: 700;\r\n    color: #ffffff;\r\n    background: linear-gradient(135deg, #ffffff 0%, #D0B49F 100%);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    background-clip: text;\r\n}\r\n\r\n.logoSubtext {\r\n    font-size: 0.8rem;\r\n    color: rgba(208, 180, 159, 0.8);\r\n    font-weight: 500;\r\n}\r\n\r\n.nav {\r\n    flex: 1;\r\n    padding: 16px;\r\n}\r\n\r\n.navLink {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 16px;\r\n    padding: 12px 16px;\r\n    color: rgba(255, 255, 255, 0.7);\r\n    text-decoration: none;\r\n    border-radius: 12px;\r\n    transition: all 0.3s ease;\r\n    margin-bottom: 4px;\r\n    font-weight: 500;\r\n    position: relative;\r\n}\r\n\r\n.navLink:hover {\r\n    background: rgba(208, 180, 159, 0.15);\r\n    color: #ffffff;\r\n    transform: translateX(4px);\r\n}\r\n\r\n.navIcon {\r\n    font-size: 1.2rem;\r\n    width: 24px;\r\n    text-align: center;\r\n    flex-shrink: 0;\r\n}\r\n\r\n.navText {\r\n    font-weight: 500;\r\n    transition: opacity 0.3s ease;\r\n}\r\n\r\n.sidebarFooter {\r\n    padding: 16px;\r\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.logoutButton {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 16px;\r\n    padding: 12px 16px;\r\n    background: none;\r\n    border: none;\r\n    color: rgba(255, 255, 255, 0.7);\r\n    cursor: pointer;\r\n    border-radius: 12px;\r\n    transition: all 0.3s ease;\r\n    width: 100%;\r\n    font-size: 1rem;\r\n    font-weight: 500;\r\n}\r\n\r\n.logoutButton:hover {\r\n    background: rgba(239, 68, 68, 0.15);\r\n    color: #ef4444;\r\n    transform: translateX(4px);\r\n}\r\n\r\n.main {\r\n    flex: 1;\r\n    transition: margin-left 0.3s ease;\r\n    background: transparent;\r\n}\r\n\r\n.mainWithSidebar {\r\n    margin-left: 280px;\r\n}\r\n\r\n.mainFullWidth {\r\n    margin-left: 80px;\r\n}\r\n\r\n.content {\r\n    padding: 24px;\r\n    min-height: 100vh;\r\n    background: transparent;\r\n}\r\n\r\n/* When sidebar is closed, hide text and adjust layout */\r\n.sidebar.closed .logoText,\r\n.sidebar.closed .logoSubtext,\r\n.sidebar.closed .navText {\r\n    opacity: 0;\r\n    pointer-events: none;\r\n}\r\n\r\n.sidebar.closed .sidebarHeader {\r\n    justify-content: center;\r\n    padding: 24px 12px;\r\n}\r\n\r\n.sidebar.closed .navLink {\r\n    justify-content: center;\r\n    padding: 12px;\r\n    gap: 0;\r\n}\r\n\r\n.sidebar.closed .logoutButton {\r\n    justify-content: center;\r\n    padding: 12px;\r\n    gap: 0;\r\n}\r\n\r\n.sidebar.closed .nav {\r\n    padding: 16px 8px;\r\n}\r\n\r\n.sidebar.closed .sidebarFooter {\r\n    padding: 16px 8px;\r\n}\r\n\r\n/* Mobile Toggle Button - Always visible on mobile */\r\n.mobileToggle {\r\n    display: none;\r\n    position: fixed;\r\n    top: 20px;\r\n    left: 20px;\r\n    z-index: 10000;\r\n    background: rgba(20, 20, 20, 0.95);\r\n    backdrop-filter: blur(20px);\r\n    border: 1px solid rgba(255, 255, 255, 0.2);\r\n    color: #ffffff;\r\n    cursor: pointer;\r\n    padding: 12px;\r\n    border-radius: 12px;\r\n    transition: all 0.3s ease;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 48px;\r\n    height: 48px;\r\n    gap: 4px;\r\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.mobileToggle:hover {\r\n    background: rgba(208, 180, 159, 0.2);\r\n    border-color: rgba(208, 180, 159, 0.4);\r\n    transform: scale(1.05);\r\n}\r\n\r\n.mobileToggle .hamburgerLine {\r\n    width: 20px;\r\n    height: 2px;\r\n    background: #ffffff;\r\n    border-radius: 1px;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n/* Sidebar Overlay for mobile */\r\n.sidebarOverlay {\r\n    display: none;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    backdrop-filter: blur(4px);\r\n    z-index: 9998;\r\n}\r\n\r\n/* Mobile Responsive */\r\n@media (max-width: 768px) {\r\n    .mobileToggle {\r\n        display: flex;\r\n    }\r\n\r\n    .sidebarOverlay {\r\n        display: block;\r\n    }\r\n\r\n    .sidebar {\r\n        width: 320px;\r\n        transform: translateX(-100%);\r\n        z-index: 9999;\r\n        position: fixed;\r\n        left: 0;\r\n        top: 0;\r\n    }\r\n\r\n    .sidebar.open {\r\n        transform: translateX(0);\r\n    }\r\n\r\n    .sidebar.closed {\r\n        transform: translateX(-100%);\r\n    }\r\n\r\n    .main {\r\n        margin-left: 0;\r\n    }\r\n\r\n    .mainWithSidebar,\r\n    .mainFullWidth {\r\n        margin-left: 0;\r\n    }\r\n\r\n    .content {\r\n        padding: 80px 16px 16px 16px; /* Add top padding for mobile toggle */\r\n    }\r\n\r\n    .sidebarHeader {\r\n        padding: 24px 20px;\r\n    }\r\n\r\n    .nav {\r\n        padding: 16px 12px;\r\n    }\r\n\r\n    .sidebarFooter {\r\n        padding: 16px 12px;\r\n    }\r\n\r\n    /* Hide desktop toggle on mobile */\r\n    .sidebarHeader .toggleButton {\r\n        display: none;\r\n    }\r\n}","size_bytes":6124},"src/app/courses/Courses.module.css":{"content":".coursesPage {\n    padding-top: 100px;\n    min-height: 100vh;\n    background: linear-gradient(135deg, #0f0f0f 0%, #1a1a1a 50%, #0f0f0f 100%);\n    position: relative;\n}\n\n.coursesPage::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: \n        radial-gradient(circle at 20% 30%, rgba(208, 180, 159, 0.08) 0%, transparent 50%),\n        radial-gradient(circle at 80% 70%, rgba(208, 180, 159, 0.05) 0%, transparent 50%);\n    pointer-events: none;\n}\n\n.container {\n    max-width: 1400px;\n    margin: 0 auto;\n    padding: 0 24px;\n    position: relative;\n    z-index: 1;\n}\n\n.hero {\n    text-align: center;\n    margin-bottom: 80px;\n    padding: 60px 0;\n}\n\n.pageTitle {\n    font-size: clamp(2.5rem, 6vw, 4rem);\n    font-weight: 800;\n    color: #ffffff;\n    margin-bottom: 24px;\n    background: linear-gradient(135deg, #ffffff 0%, #D0B49F 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n    line-height: 1.1;\n}\n\n.pageSubtitle {\n    font-size: clamp(1.1rem, 3vw, 1.3rem);\n    color: rgba(255, 255, 255, 0.8);\n    max-width: 700px;\n    margin: 0 auto;\n    line-height: 1.5;\n    font-weight: 400;\n}\n\n/* Filters / Search */\n.filters {\n    display: flex;\n    gap: 24px;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 60px;\n    flex-wrap: wrap;\n    background: rgba(255, 255, 255, 0.05);\n    backdrop-filter: blur(20px);\n    padding: 24px;\n    border-radius: 20px;\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    position: relative;\n    z-index: 10;\n}\n\n.categoryFilters {\n    display: flex;\n    gap: 12px;\n    align-items: center;\n}\n\n.filterDropdown {\n    margin-left: auto;\n    display: flex;\n    align-items: center;\n    position: relative;\n}\n\n\n\n.searchContainer {\n    flex: 1;\n    max-width: 400px;\n}\n\n.searchInput {\n    width: 100%;\n    padding: 16px 20px;\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    border-radius: 16px;\n    background: rgba(255, 255, 255, 0.08);\n    color: #ffffff;\n    font-size: 1rem;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    backdrop-filter: blur(10px);\n}\n\n.searchInput::placeholder {\n    color: rgba(255, 255, 255, 0.5);\n}\n\n.searchInput:focus {\n    outline: none;\n    border-color: #D0B49F;\n    background: rgba(255, 255, 255, 0.12);\n    box-shadow: 0 0 0 3px rgba(208, 180, 159, 0.2);\n    transform: translateY(-2px);\n}\n\n/* Dropdown & multi-select parity with Services */\n.filterButton {\n    background: rgba(255, 255, 255, 0.08);\n    color: #ffffff;\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    padding: 16px 24px;\n    border-radius: 16px;\n    display: inline-flex;\n    align-items: center;\n    gap: 12px;\n    cursor: pointer;\n    font-weight: 600;\n    font-size: 1rem;\n    transition: all 0.3s ease;\n    backdrop-filter: blur(10px);\n    min-width: 180px;\n    justify-content: space-between;\n}\n\n.filterButton:hover {\n    background: rgba(255, 255, 255, 0.12);\n    border-color: rgba(208, 180, 159, 0.5);\n    transform: translateY(-2px);\n    box-shadow: 0 8px 24px rgba(208, 180, 159, 0.2);\n}\n\n.filterButton::after {\n    content: '';\n    display: inline-block;\n    width: 0;\n    height: 0;\n    border-left: 6px solid transparent;\n    border-right: 6px solid transparent;\n    border-top: 6px solid #ffffff;\n    transform-origin: center;\n    transition: transform 0.3s ease;\n}\n\n.filterButton:focus {\n    outline: none;\n    border-color: #D0B49F;\n    box-shadow: 0 0 0 3px rgba(208, 180, 159, 0.3);\n}\n\n.filterDropdown.open .filterButton {\n    background: rgba(208, 180, 159, 0.15);\n    border-color: rgba(208, 180, 159, 0.5);\n    box-shadow: 0 8px 24px rgba(208, 180, 159, 0.2);\n}\n\n.filterDropdown.open .filterButton::after {\n    transform: rotate(180deg);\n}\n\n.dropdownMenu {\n    position: absolute;\n    top: calc(100% + 8px);\n    right: 0;\n    background: rgba(20, 20, 20, 0.98);\n    backdrop-filter: blur(20px);\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 12px;\n    padding: 16px;\n    z-index: 9999;\n    min-width: 280px;\n    max-width: 320px;\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);\n    opacity: 0;\n    visibility: hidden;\n    transform: translateY(-10px);\n    transition: all 0.2s ease;\n}\n\n.filterDropdown.open .dropdownMenu {\n    opacity: 1;\n    visibility: visible;\n    transform: translateY(0);\n}\n\n.dropdownHeader {\n    display: flex;\n    gap: 8px;\n    justify-content: space-between;\n    margin-bottom: 12px;\n    padding-bottom: 12px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.dropdownHeader button {\n    padding: 6px 12px;\n    border-radius: 8px;\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    background: rgba(255, 255, 255, 0.05);\n    color: #ffffff;\n    font-size: 0.85rem;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.2s ease;\n    flex: 1;\n}\n\n.dropdownHeader button:hover {\n    background: rgba(208, 180, 159, 0.2);\n    border-color: rgba(208, 180, 159, 0.4);\n}\n\n.dropdownList {\n    max-height: 200px;\n    overflow-y: auto;\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    scrollbar-width: thin;\n}\n\n.dropdownList::-webkit-scrollbar {\n    width: 4px;\n}\n\n.dropdownList::-webkit-scrollbar-track {\n    background: rgba(255, 255, 255, 0.05);\n}\n\n.dropdownList::-webkit-scrollbar-thumb {\n    background: rgba(208, 180, 159, 0.3);\n    border-radius: 2px;\n}\n\n.dropdownList li {\n    padding: 0;\n    margin-bottom: 2px;\n    opacity: 1;\n}\n\n.dropdownList label {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    cursor: pointer;\n    color: rgba(255, 255, 255, 0.8);\n    padding: 8px 12px;\n    border-radius: 8px;\n    transition: all 0.2s ease;\n    font-weight: 500;\n    font-size: 0.9rem;\n}\n\n.dropdownList label:hover {\n    background: rgba(255, 255, 255, 0.08);\n    color: #ffffff;\n}\n\n.dropdownList input[type=\"checkbox\"] {\n    width: 16px;\n    height: 16px;\n    appearance: none;\n    border: 2px solid rgba(255, 255, 255, 0.3);\n    border-radius: 3px;\n    background: transparent;\n    cursor: pointer;\n    transition: all 0.2s ease;\n    position: relative;\n    flex-shrink: 0;\n}\n\n.dropdownList input[type=\"checkbox\"]:checked {\n    background: linear-gradient(135deg, #D0B49F 0%, #B8A082 100%);\n    border-color: #D0B49F;\n}\n\n.dropdownList input[type=\"checkbox\"]:checked::after {\n    content: '✓';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    color: #1a1a1a;\n    font-size: 10px;\n    font-weight: bold;\n}\n\n.dropdownLabelText {\n    display: inline-block;\n    flex: 1;\n}\n\n.dropdownList input[type=\"checkbox\"]:checked + .dropdownLabelText {\n    color: #D0B49F;\n    font-weight: 600;\n}\n\n\n\n/* Grid */\n.coursesGrid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(380px, 1fr));\n    gap: 32px;\n    margin-bottom: 80px;\n}\n\n/* Card */\n.courseCard {\n    background: rgba(255, 255, 255, 0.05);\n    backdrop-filter: blur(20px);\n    border-radius: 24px;\n    overflow: hidden;\n    transition: all 0.4s ease;\n    position: relative;\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n}\n\n.courseCard::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 1px;\n    background: linear-gradient(90deg, transparent, rgba(208, 180, 159, 0.5), transparent);\n}\n\n.courseCard:hover {\n    transform: translateY(-12px) scale(1.02);\n    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.4);\n    border-color: rgba(208, 180, 159, 0.3);\n}\n\n.courseImage {\n    position: relative;\n    width: 100%;\n    height: 280px;\n    overflow: hidden;\n}\n\n.courseImage img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    transition: transform 0.6s ease;\n}\n\n.courseCard:hover .courseImage img {\n    transform: scale(1.15);\n}\n\n.courseBadge {\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    background: linear-gradient(135deg, #D0B49F 0%, #B8A082 100%);\n    color: #1a1a1a;\n    padding: 8px 16px;\n    border-radius: 20px;\n    font-size: 0.8rem;\n    font-weight: 700;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n    box-shadow: 0 4px 12px rgba(208, 180, 159, 0.3);\n}\n\n.courseContent {\n    padding: 32px;\n}\n\n.courseTitle {\n    font-size: 1.5rem;\n    font-weight: 700;\n    color: #ffffff;\n    margin-bottom: 12px;\n    line-height: 1.3;\n}\n\n.courseDescription {\n    color: rgba(255, 255, 255, 0.7);\n    margin-bottom: 24px;\n    line-height: 1.6;\n    font-size: 1rem;\n}\n\n.courseStats {\n    display: flex;\n    gap: 16px;\n    margin-bottom: 24px;\n    flex-wrap: wrap;\n}\n\n.courseStats span {\n    font-size: 0.9rem;\n    color: rgba(255, 255, 255, 0.6);\n    font-weight: 500;\n    display: flex;\n    align-items: center;\n    gap: 6px;\n}\n\n\n\n.courseFooter {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n    padding-top: 20px;\n}\n\n.price {\n    font-size: 1.3rem;\n    font-weight: 700;\n    color: #D0B49F;\n    background: linear-gradient(135deg, #D0B49F 0%, #E6D3B7 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n}\n\n.courseActions {\n    display: flex;\n    gap: 12px;\n}\n\n/* Modal Styles */\n.modal {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.9);\n    backdrop-filter: blur(10px);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 2000;\n    padding: 24px;\n}\n\n.modalContent {\n    background: rgba(20, 20, 20, 0.98);\n    backdrop-filter: blur(20px);\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 24px;\n    max-width: 900px;\n    width: 100%;\n    max-height: 90vh;\n    overflow-y: auto;\n    position: relative;\n    animation: slideUp 0.3s ease-out;\n    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);\n}\n\n.closeButton {\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    background: rgba(255, 255, 255, 0.1);\n    border: none;\n    color: #ffffff;\n    font-size: 1.5rem;\n    cursor: pointer;\n    width: 40px;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    transition: all 0.3s ease;\n    z-index: 1;\n    backdrop-filter: blur(10px);\n}\n\n.closeButton:hover {\n    background: rgba(208, 180, 159, 0.2);\n    transform: scale(1.1);\n}\n\n.modalHeader {\n    display: flex;\n    gap: 24px;\n    padding: 40px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.modalHeader img {\n    width: 140px;\n    height: 100px;\n    object-fit: cover;\n    border-radius: 16px;\n    flex-shrink: 0;\n}\n\n.modalTitle h2 {\n    font-size: 2rem;\n    font-weight: 700;\n    color: #ffffff;\n    margin-bottom: 12px;\n    background: linear-gradient(135deg, #ffffff 0%, #D0B49F 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n}\n\n.modalTitle p {\n    color: rgba(255, 255, 255, 0.7);\n    line-height: 1.6;\n    font-size: 1.1rem;\n}\n\n.modalBody {\n    padding: 40px;\n}\n\n.modalSection {\n    margin-bottom: 32px;\n}\n\n.modalSection h3 {\n    font-size: 1.3rem;\n    font-weight: 600;\n    color: #ffffff;\n    margin-bottom: 16px;\n}\n\n.modalSection ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n}\n\n.modalSection li {\n    color: rgba(255, 255, 255, 0.8);\n    margin-bottom: 12px;\n    padding-left: 24px;\n    position: relative;\n    font-size: 1rem;\n    line-height: 1.5;\n}\n\n.modalSection li::before {\n    content: '✓';\n    position: absolute;\n    left: 0;\n    color: #D0B49F;\n    font-weight: bold;\n    font-size: 1.1rem;\n}\n\n.courseDetails {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    gap: 16px;\n    margin-top: 24px;\n    background: rgba(255, 255, 255, 0.05);\n    padding: 20px;\n    border-radius: 16px;\n}\n\n.detailItem {\n    color: rgba(255, 255, 255, 0.7);\n    font-size: 0.95rem;\n    line-height: 1.4;\n}\n\n.detailItem strong {\n    color: #D0B49F;\n    font-weight: 600;\n}\n\n.modalFooter {\n    padding: 32px 40px;\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n    text-align: center;\n}\n\n@keyframes slideUp {\n    from {\n        opacity: 0;\n        transform: translateY(30px);\n    }\n\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n/* Loading and Error States */\n.loadingContainer,\n.errorContainer {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    min-height: 60vh;\n    text-align: center;\n}\n\n.loader {\n    color: #D0B49F;\n    font-size: 1.2rem;\n    font-weight: 600;\n}\n\n.error {\n    color: #ff6b6b;\n    font-size: 1.1rem;\n    margin-bottom: 20px;\n}\n\n.retryButton {\n    background: linear-gradient(135deg, #D0B49F 0%, #B8A082 100%);\n    color: #1a1a1a;\n    border: none;\n    padding: 12px 24px;\n    border-radius: 12px;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.3s ease;\n}\n\n.retryButton:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 8px 24px rgba(208, 180, 159, 0.3);\n}\n\n/* Mobile: make dropdown full width under filters */\n@media (max-width: 768px) {\n    .filterDropdown {\n        width: 100%;\n        margin-left: 0;\n        position: relative;\n    }\n\n    .dropdownMenu {\n        position: absolute;\n        top: calc(100% + 8px);\n        left: 0;\n        right: 0;\n        width: 100%;\n        margin-top: 0;\n        border-radius: 12px;\n        min-width: auto;\n        max-width: none;\n        z-index: 9999;\n    }\n    \n    .filterDropdown:not(.open) .dropdownMenu {\n        opacity: 0;\n        visibility: hidden;\n        transform: translateY(-10px);\n    }\n    \n    .filterDropdown.open .dropdownMenu {\n        opacity: 1;\n        visibility: visible;\n        transform: translateY(0);\n    }\n}\n\n/* Mobile Responsiveness */\n@media (max-width: 1024px) {\n    .coursesGrid {\n        grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n        gap: 24px;\n    }\n}\n\n@media (max-width: 768px) {\n    .container {\n        padding: 0 20px;\n    }\n    \n    .hero {\n        padding: 40px 0;\n        margin-bottom: 60px;\n    }\n    \n    .filters {\n        flex-direction: column;\n        gap: 20px;\n        padding: 20px;\n        align-items: stretch;\n    }\n    \n    .searchContainer {\n        max-width: 100%;\n    }\n    \n    .filterDropdown {\n        width: 100%;\n    }\n    \n    .filterButton {\n        width: 100%;\n        justify-content: space-between;\n    }\n    \n    .coursesGrid {\n        grid-template-columns: 1fr;\n        gap: 20px;\n        margin-bottom: 60px;\n    }\n    \n    .courseCard {\n        max-width: 100%;\n    }\n    \n    .courseImage {\n        height: 240px;\n    }\n    \n    .courseContent {\n        padding: 24px;\n    }\n    \n    .courseActions {\n        flex-direction: column;\n        gap: 8px;\n    }\n    \n    .modalHeader {\n        flex-direction: column;\n        text-align: center;\n        padding: 30px;\n    }\n    \n    .modalHeader img {\n        width: 100%;\n        height: 200px;\n    }\n    \n    .modalBody {\n        padding: 30px;\n    }\n    \n    .modalFooter {\n        padding: 24px 30px;\n    }\n}\n\n@media (max-width: 480px) {\n    .container {\n        padding: 0 16px;\n    }\n    \n    .hero {\n        padding: 30px 0;\n        margin-bottom: 40px;\n    }\n    \n    .filters {\n        padding: 16px;\n        border-radius: 16px;\n    }\n    \n    .searchInput {\n        padding: 14px 18px;\n        font-size: 0.95rem;\n    }\n    \n    .filterButton {\n        padding: 14px 20px;\n        font-size: 0.95rem;\n    }\n    \n    .coursesGrid {\n        gap: 16px;\n        margin-bottom: 40px;\n    }\n    \n    .courseImage {\n        height: 200px;\n    }\n    \n    .courseContent {\n        padding: 20px;\n    }\n    \n    .courseTitle {\n        font-size: 1.3rem;\n    }\n    \n    .courseDescription {\n        font-size: 0.95rem;\n    }\n    \n    .courseStats {\n        gap: 12px;\n    }\n    \n    .courseStats span {\n        font-size: 0.85rem;\n    }\n    \n    .modalHeader {\n        padding: 20px;\n    }\n    \n    .modalBody {\n        padding: 20px;\n    }\n    \n    .modalFooter {\n        padding: 20px;\n    }\n    \n    .courseDetails {\n        grid-template-columns: 1fr;\n        gap: 12px;\n        padding: 16px;\n    }\n}","size_bytes":16094},"src/app/admin/certificates/page.tsx":{"content":"\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport AdminLayout from \"../../../components/layout/AdminLayout\";\r\nimport LoadingSpinner, { LoadingOverlay } from \"../../../components/ui/LoadingSpinner\";\r\nimport { uploadFile, apiCall, API_CONFIG } from \"../../../config/api\";\r\nimport styles from \"./Certificates.module.css\";\r\n\r\ninterface Certificate {\r\n  id: string;\r\n  studentId: string;\r\n  studentName: string;\r\n  studentEmail: string;\r\n  courseName: string;\r\n  completionDate: string;\r\n  status: \"issued\" | \"pending\" | \"revoked\";\r\n  certificateUrl?: string;\r\n  generatedBy?: string;\r\n  generatedAt?: string;\r\n}\r\n\r\ninterface Student {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  course: string;\r\n  progress: number;\r\n  status: string;\r\n}\r\n\r\nexport default function CertificatesPage() {\r\n  const [certificates, setCertificates] = useState<Certificate[]>([]);\r\n  const [students, setStudents] = useState<Student[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [showGenerateModal, setShowGenerateModal] = useState(false);\r\n  const [selectedStudent, setSelectedStudent] = useState<Student | null>(null);\r\n  const [filterStatus, setFilterStatus] = useState(\"all\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [certificateFile, setCertificateFile] = useState<File | null>(null);\r\n  const [uploadMessage, setUploadMessage] = useState(\"\");\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const adminSession = localStorage.getItem(\"admin_session\");\r\n    if (!adminSession) {\r\n      router.push(\"/admin/login\");\r\n      return;\r\n    }\r\n    fetchCertificates();\r\n  }, []);\r\n\r\n  const fetchCertificates = async () => {\r\n    try {\r\n      // Use external API endpoints\r\n      const [certsData, studentsData] = await Promise.all([\r\n        apiCall(API_CONFIG.ENDPOINTS.ADMIN.CERTIFICATES.LIST).catch(() => ({ certificates: [] })),\r\n        apiCall(API_CONFIG.ENDPOINTS.ADMIN.STUDENTS.LIST).catch(() => ({ students: [] }))\r\n      ]);\r\n\r\n      setCertificates(certsData.certificates || []);\r\n      \r\n      // Filter students who are eligible for certificates (completed courses)\r\n      const eligibleStudents = (studentsData.students || []).filter(\r\n        (student: Student) => student.progress >= 100\r\n      );\r\n      setStudents(eligibleStudents);\r\n      \r\n    } catch (error) {\r\n      console.error(\"Failed to fetch data:\", error);\r\n      // Set some mock data for development\r\n      setStudents([\r\n        {\r\n          id: \"1\",\r\n          name: \"John Doe\",\r\n          email: \"john@example.com\",\r\n          course: \"Hair Styling Fundamentals\",\r\n          progress: 100,\r\n          status: \"completed\"\r\n        },\r\n        {\r\n          id: \"2\", \r\n          name: \"Jane Smith\",\r\n          email: \"jane@example.com\",\r\n          course: \"Makeup Artistry\",\r\n          progress: 100,\r\n          status: \"completed\"\r\n        }\r\n      ]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUploadCertificate = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!selectedStudent || !certificateFile) {\r\n      setUploadMessage(\"Error: Please select a student and choose a certificate file.\");\r\n      setTimeout(() => setUploadMessage(\"\"), 5000);\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    setUploadProgress(0);\r\n    \r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"certificate\", certificateFile);\r\n      formData.append(\"studentId\", selectedStudent.id);\r\n      formData.append(\"studentName\", selectedStudent.name);\r\n      formData.append(\"courseName\", selectedStudent.course);\r\n\r\n      const response = await uploadFile(\r\n        API_CONFIG.ENDPOINTS.ADMIN.CERTIFICATES.UPLOAD,\r\n        formData,\r\n        (progress) => setUploadProgress(progress)\r\n      );\r\n\r\n      // Success\r\n      fetchCertificates();\r\n      setShowGenerateModal(false);\r\n      setSelectedStudent(null);\r\n      setCertificateFile(null);\r\n      setUploadProgress(0);\r\n      setUploadMessage(\"Certificate uploaded successfully!\");\r\n      setTimeout(() => setUploadMessage(\"\"), 5000);\r\n      \r\n    } catch (error: any) {\r\n      setUploadProgress(0);\r\n      setUploadMessage(`Error: ${error.message || \"Failed to upload certificate\"}`);\r\n      setTimeout(() => setUploadMessage(\"\"), 5000);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleRevokeCertificate = async (certificateId: string) => {\r\n    if (confirm(\"Are you sure you want to revoke this certificate?\")) {\r\n      try {\r\n        const response = await fetch(\r\n          `/api/admin/certificates/${certificateId}/revoke`,\r\n          {\r\n            method: \"POST\",\r\n          }\r\n        );\r\n\r\n        if (response.ok) {\r\n          fetchCertificates();\r\n          alert(\"Certificate revoked successfully!\");\r\n        }\r\n      } catch (error) {\r\n        alert(\"Error revoking certificate\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const filteredCertificates = certificates.filter((cert) => {\r\n    const matchesSearch =\r\n      cert.studentName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      cert.courseName.toLowerCase().includes(searchTerm.toLowerCase());\r\n    const matchesFilter =\r\n      filterStatus === \"all\" || cert.status === filterStatus;\r\n    return matchesSearch && matchesFilter;\r\n  });\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <AdminLayout>\r\n        <div className={styles.loading}>Loading certificates...</div>\r\n      </AdminLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <div className={styles.certificatesPage}>\r\n        <div className={styles.header}>\r\n          <h1 className={styles.title}>Certificates Management</h1>\r\n          <div className={styles.headerActions}>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => setShowGenerateModal(true)}\r\n              disabled={students.length === 0}\r\n            >\r\n              <i className=\"ri-upload-line\"></i>\r\n              Upload Certificate\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Upload Message */}\r\n        {uploadMessage && (\r\n          <div className={`${styles.uploadMessage} ${uploadMessage.includes('Error') ? styles.error : styles.success}`}>\r\n            {uploadMessage}\r\n          </div>\r\n        )}\r\n\r\n        {/* Filters */}\r\n        <div className={styles.filters}>\r\n          <div className={styles.searchBox}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search certificates...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"input\"\r\n            />\r\n          </div>\r\n          <select\r\n            value={filterStatus}\r\n            onChange={(e) => setFilterStatus(e.target.value)}\r\n            className={styles.statusFilter}\r\n          >\r\n            <option value=\"all\">All Status</option>\r\n            <option value=\"issued\">Issued</option>\r\n            <option value=\"pending\">Pending</option>\r\n            <option value=\"revoked\">Revoked</option>\r\n          </select>\r\n        </div>\r\n\r\n        {/* Certificates List */}\r\n        <div className={styles.certificatesList}>\r\n          {filteredCertificates.length > 0 ? (\r\n            filteredCertificates.map((cert) => (\r\n              <div key={cert.id} className={`card ${styles.certificateCard}`}>\r\n                <div className={styles.certificateInfo}>\r\n                  <h3 className={styles.studentName}>{cert.studentName}</h3>\r\n                  <p className={styles.courseInfo}>\r\n                    <strong>Course:</strong> {cert.courseName}\r\n                  </p>\r\n                  <p className={styles.completionInfo}>\r\n                    <strong>Completed:</strong>{\" \"}\r\n                    {new Date(cert.completionDate).toLocaleDateString()}\r\n                  </p>\r\n                  {cert.generatedBy && (\r\n                    <p className={styles.generatedInfo}>\r\n                      <strong>Generated by:</strong> {cert.generatedBy}\r\n                    </p>\r\n                  )}\r\n                  <span className={`${styles.status} ${styles[cert.status]}`}>\r\n                    {cert.status.charAt(0).toUpperCase() + cert.status.slice(1)}\r\n                  </span>\r\n                </div>\r\n                <div className={styles.actions}>\r\n                  {cert.certificateUrl && (\r\n                    <a\r\n                      href={cert.certificateUrl}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      className=\"btn btn-secondary btn-sm\"\r\n                    >\r\n                      View\r\n                    </a>\r\n                  )}\r\n                  {cert.certificateUrl && (\r\n                    <a\r\n                      href={cert.certificateUrl}\r\n                      download\r\n                      className=\"btn btn-primary btn-sm\"\r\n                    >\r\n                      Download\r\n                    </a>\r\n                  )}\r\n                  {cert.status === \"issued\" && (\r\n                    <button\r\n                      className=\"btn btn-danger btn-sm\"\r\n                      onClick={() => handleRevokeCertificate(cert.id)}\r\n                    >\r\n                      Revoke\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div className={styles.noCertificates}>\r\n              <p>No certificates found matching your criteria.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Upload Progress Overlay */}\r\n      {isUploading && uploadProgress > 0 && (\r\n        <LoadingOverlay \r\n          text=\"Uploading Certificate\" \r\n          progress={uploadProgress}\r\n        />\r\n      )}\r\n\r\n      {/* Upload Certificate Modal */}\r\n        {showGenerateModal && (\r\n          <div className={styles.modal}>\r\n            <div className={styles.modalContent}>\r\n              <div className={styles.modalHeader}>\r\n                <h2>Upload Certificate</h2>\r\n                <button\r\n                  onClick={() => {\r\n                    setShowGenerateModal(false);\r\n                    setSelectedStudent(null);\r\n                    setCertificateFile(null);\r\n                    setUploadMessage(\"\");\r\n                  }}\r\n                  className={styles.closeBtn}\r\n                  disabled={isUploading}\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n\r\n              <form onSubmit={handleUploadCertificate} className={styles.modalBody}>\r\n                <div className={styles.formGroup}>\r\n                  <label>Select Student</label>\r\n                  <select\r\n                    value={selectedStudent?.id || \"\"}\r\n                    onChange={(e) => {\r\n                      const student = students.find(\r\n                        (s) => s.id === e.target.value\r\n                      );\r\n                      setSelectedStudent(student || null);\r\n                    }}\r\n                    className=\"input\"\r\n                    required\r\n                  >\r\n                    <option value=\"\">Choose a student...</option>\r\n                    {students.map((student) => (\r\n                      <option key={student.id} value={student.id}>\r\n                        {student.name} - {student.course} ({student.progress}%\r\n                        complete)\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n\r\n                <div className={styles.formGroup}>\r\n                  <label>Certificate File</label>\r\n                  <div \r\n                    className={`${styles.fileUploadArea} ${isDragOver ? styles.dragOver : ''}`}\r\n                    onDragOver={(e) => {\r\n                      e.preventDefault();\r\n                      setIsDragOver(true);\r\n                    }}\r\n                    onDragLeave={(e) => {\r\n                      e.preventDefault();\r\n                      setIsDragOver(false);\r\n                    }}\r\n                    onDrop={(e) => {\r\n                      e.preventDefault();\r\n                      setIsDragOver(false);\r\n                      \r\n                      const files = e.dataTransfer.files;\r\n                      if (files.length > 0) {\r\n                        const file = files[0];\r\n                        \r\n                        // Validate file size (10MB max)\r\n                        if (file.size > 10 * 1024 * 1024) {\r\n                          setUploadMessage(\"Error: File size must be less than 10MB\");\r\n                          setTimeout(() => setUploadMessage(\"\"), 5000);\r\n                          return;\r\n                        }\r\n                        \r\n                        // Validate file type\r\n                        const allowedTypes = ['application/pdf', 'image/jpeg', 'image/jpg', 'image/png'];\r\n                        if (!allowedTypes.includes(file.type)) {\r\n                          setUploadMessage(\"Error: Please select a valid file type (PDF, JPG, JPEG, PNG)\");\r\n                          setTimeout(() => setUploadMessage(\"\"), 5000);\r\n                          return;\r\n                        }\r\n                        \r\n                        setCertificateFile(file);\r\n                      }\r\n                    }}\r\n                  >\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\".pdf,.jpg,.jpeg,.png\"\r\n                      onChange={(e) => {\r\n                        const file = e.target.files?.[0];\r\n                        if (file) {\r\n                          // Validate file size (10MB max)\r\n                          if (file.size > 10 * 1024 * 1024) {\r\n                            setUploadMessage(\"Error: File size must be less than 10MB\");\r\n                            setTimeout(() => setUploadMessage(\"\"), 5000);\r\n                            e.target.value = \"\";\r\n                            return;\r\n                          }\r\n                          \r\n                          // Validate file type\r\n                          const allowedTypes = ['application/pdf', 'image/jpeg', 'image/jpg', 'image/png'];\r\n                          if (!allowedTypes.includes(file.type)) {\r\n                            setUploadMessage(\"Error: Please select a valid file type (PDF, JPG, JPEG, PNG)\");\r\n                            setTimeout(() => setUploadMessage(\"\"), 5000);\r\n                            e.target.value = \"\";\r\n                            return;\r\n                          }\r\n                          \r\n                          setCertificateFile(file);\r\n                        } else {\r\n                          setCertificateFile(null);\r\n                        }\r\n                      }}\r\n                      required\r\n                      className={styles.fileInput}\r\n                      id=\"certificate-file\"\r\n                    />\r\n                    <label htmlFor=\"certificate-file\" className={styles.fileUploadLabel}>\r\n                      <div className={styles.uploadIcon}>\r\n                        <i className={certificateFile ? \"ri-file-check-line\" : \"ri-upload-cloud-line\"}></i>\r\n                      </div>\r\n                      <div className={styles.uploadText}>\r\n                        <span className={styles.uploadTitle}>\r\n                          {certificateFile ? certificateFile.name : \"Choose certificate file\"}\r\n                        </span>\r\n                        <span className={styles.uploadSubtitle}>\r\n                          {isDragOver ? \"Drop file here\" : \"or drag and drop here\"}\r\n                        </span>\r\n                      </div>\r\n                    </label>\r\n                  </div>\r\n                  <small className={styles.fileNote}>\r\n                    Supported formats: PDF, JPG, JPEG, PNG (Max: 10MB)\r\n                  </small>\r\n                </div>\r\n\r\n                {selectedStudent && (\r\n                  <div className={styles.studentPreview}>\r\n                    <h4>Student Information</h4>\r\n                    <div className={styles.previewInfo}>\r\n                      <p>\r\n                        <strong>Student:</strong> {selectedStudent.name}\r\n                      </p>\r\n                      <p>\r\n                        <strong>Email:</strong> {selectedStudent.email}\r\n                      </p>\r\n                      <p>\r\n                        <strong>Course:</strong> {selectedStudent.course}\r\n                      </p>\r\n                      <p>\r\n                        <strong>Progress:</strong> {selectedStudent.progress}%\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {certificateFile && (\r\n                  <div className={styles.filePreview}>\r\n                    <h4>Selected File</h4>\r\n                    <div className={styles.fileInfo}>\r\n                      <p>\r\n                        <strong>File Name:</strong> {certificateFile.name}\r\n                      </p>\r\n                      <p>\r\n                        <strong>File Size:</strong> {(certificateFile.size / 1024 / 1024).toFixed(2)} MB\r\n                      </p>\r\n                      <p>\r\n                        <strong>File Type:</strong> {certificateFile.type}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                <div className={styles.formActions}>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      setShowGenerateModal(false);\r\n                      setSelectedStudent(null);\r\n                      setCertificateFile(null);\r\n                      setUploadMessage(\"\");\r\n                    }}\r\n                    className=\"btn btn-secondary\"\r\n                    disabled={isUploading}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    disabled={!selectedStudent || !certificateFile || isUploading}\r\n                  >\r\n                    {isUploading ? (\r\n                      <LoadingSpinner \r\n                        size=\"small\" \r\n                        color=\"white\" \r\n                        text={uploadProgress > 0 ? `Uploading ${Math.round(uploadProgress)}%` : \"Uploading...\"}\r\n                      />\r\n                    ) : (\r\n                      \"Upload Certificate\"\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n\r\n      </div>\r\n    </AdminLayout>\r\n  );\r\n}\r\n","size_bytes":18963},"src/components/ui/animated-components.tsx":{"content":"\"use client\";\n\ninterface AnimatedSectionProps {\n  children: React.ReactNode;\n  className?: string;\n  animationType?: \"fade-up\" | \"fade-left\" | \"fade-right\" | \"scale\";\n}\n\nexport default function AnimatedSection({\n  children,\n  className = \"\",\n  animationType = \"fade-up\",\n}: AnimatedSectionProps) {\n  return (\n    <div className={className}>\n      {children}\n    </div>\n  );\n}\n\n// Animated Card Component\nexport function AnimatedCard({\n  children,\n  className = \"\",\n  interactive = false,\n}: {\n  children: React.ReactNode;\n  className?: string;\n  interactive?: boolean;\n}) {\n  const cardClasses = [\n    \"card\",\n    interactive ? \"card-interactive\" : \"\",\n    \"hover-lift\",\n    className,\n  ]\n    .filter(Boolean)\n    .join(\" \");\n\n  return <div className={cardClasses}>{children}</div>;\n}\n","size_bytes":786},"src/components/navigation/FlowingMenu.css":{"content":".menu-wrap {\r\n    width: 30vw;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    background: #D0B49F;\r\n    border-radius: 25px 0 0 25px;\r\n}\r\n\r\n.menu {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.menu__item {\r\n    flex: 1;\r\n    position: relative;\r\n    overflow: hidden;\r\n    text-align: center;\r\n    width: 100%;\r\n    background: rgba(255, 255, 255, 0.1);\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.menu__item-link {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100%;\r\n    position: relative;\r\n    cursor: pointer;\r\n    text-transform: uppercase;\r\n    text-decoration: none;\r\n    white-space: nowrap;\r\n    font-weight: 600;\r\n    font-family: var(--font-heading);\r\n    color: #000000;\r\n    font-size: 4vh;\r\n    letter-spacing: 0.05em;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.menu__item-link:hover {\r\n    color: #ffffff;\r\n    transform: scale(1.05);\r\n}\r\n\r\n.menu__item-link:focus:not(:focus-visible) {\r\n    color: #000000;\r\n    outline: none;\r\n}\r\n\r\n.marquee {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    overflow: hidden;\r\n    width: 300%;\r\n    height: 100%;\r\n    pointer-events: none;\r\n    background: #ffffff;\r\n    transform: translate3d(0, 101%, 0);\r\n    transition: transform 0.6s ease-expo;\r\n    border-radius: 15px 15px 0 0;\r\n}\r\n\r\n.marquee__inner-wrap {\r\n    height: 100%;\r\n    width: 100%;\r\n    display: flex;\r\n    transform: translateX(0);\r\n}\r\n\r\n.marquee__inner {\r\n    display: flex;\r\n    align-items: center;\r\n    position: relative;\r\n    height: 100%;\r\n    width: 600%;\r\n    will-change: transform;\r\n    animation: marquee 15s linear infinite;\r\n}\r\n\r\n.marquee span {\r\n    color: #000000;\r\n    white-space: nowrap;\r\n    text-transform: uppercase;\r\n    font-weight: 600;\r\n    font-family: var(--font-subheading);\r\n    font-size: 4vh;\r\n    line-height: 1.2;\r\n    padding: 1vh 1vw 0;\r\n    letter-spacing: 0.02em;\r\n}\r\n\r\n.marquee__img {\r\n    width: 200px;\r\n    height: 7vh;\r\n    margin: 2em 2vw;\r\n    padding: 1em 0;\r\n    border-radius: 15px;\r\n    background-size: cover;\r\n    background-position: 50% 50%;\r\n}\r\n\r\n.menu__item-link:hover+.marquee {\r\n    transform: translate3d(0, 0%, 0);\r\n}\r\n\r\n.menu__item:hover {\r\n    background: rgba(255, 255, 255, 0.15);\r\n}\r\n\r\n@keyframes marquee {\r\n    from {\r\n        transform: translateX(0);\r\n    }\r\n\r\n    to {\r\n        transform: translateX(-50%);\r\n    }\r\n}\r\n\r\n/* ==============================================\r\n   RESPONSIVE DESIGN\r\n   ============================================== */\r\n\r\n/* Extra Large Desktop (≥1440px) */\r\n@media (min-width: 1440px) {\r\n    .menu__item-link {\r\n        font-size: 4.5vh;\r\n        font-weight: 700;\r\n    }\r\n\r\n    .marquee span {\r\n        font-size: 4.2vh;\r\n        font-weight: 500;\r\n        padding: 1.2vh 1.2vw 0;\r\n    }\r\n\r\n    .marquee__img {\r\n        width: 220px;\r\n        height: 8vh;\r\n        margin: 2.2em 2.2vw;\r\n    }\r\n}\r\n\r\n/* Large Desktop (1200px - 1439px) */\r\n@media (min-width: 1200px) and (max-width: 1439px) {\r\n    .menu__item-link {\r\n        font-size: 4.2vh;\r\n        font-weight: 650;\r\n    }\r\n\r\n    .marquee span {\r\n        font-size: 3.8vh;\r\n        font-weight: 450;\r\n        padding: 1.1vh 1.1vw 0;\r\n    }\r\n\r\n    .marquee__img {\r\n        width: 210px;\r\n        height: 7.5vh;\r\n        margin: 2.1em 2.1vw;\r\n    }\r\n}\r\n\r\n/* Medium Desktop (992px - 1199px) */\r\n@media (min-width: 992px) and (max-width: 1199px) {\r\n    .menu__item-link {\r\n        font-size: 3.8vh;\r\n        font-weight: 600;\r\n    }\r\n\r\n    .marquee span {\r\n        font-size: 3.5vh;\r\n        font-weight: 400;\r\n        padding: 1vh 1vw 0;\r\n    }\r\n\r\n    .marquee__img {\r\n        width: 190px;\r\n        height: 6.5vh;\r\n        margin: 1.8em 1.8vw;\r\n    }\r\n}\r\n\r\n/* Small Desktop / Large Tablet (769px - 991px) */\r\n@media (min-width: 769px) and (max-width: 991px) {\r\n    .menu-wrap {\r\n        width: 35vw;\r\n    }\r\n\r\n    .menu__item-link {\r\n        font-size: 3.5vh;\r\n        font-weight: 580;\r\n    }\r\n\r\n    .marquee span {\r\n        font-size: 3.2vh;\r\n        font-weight: 380;\r\n        padding: 0.9vh 0.9vw 0;\r\n    }\r\n\r\n    .marquee__img {\r\n        width: 170px;\r\n        height: 6vh;\r\n        margin: 1.6em 1.6vw;\r\n    }\r\n}\r\n\r\n/* Mobile Landscape (481px - 768px) */\r\n@media (min-width: 481px) and (max-width: 768px) {\r\n    .menu-wrap {\r\n        width: 100vw;\r\n    }\r\n\r\n    .menu__item-link {\r\n        font-size: 6vh;\r\n        font-weight: 650;\r\n        letter-spacing: 1px;\r\n    }\r\n\r\n    .marquee span {\r\n        font-size: 5.5vh;\r\n        font-weight: 450;\r\n        padding: 1.5vh 2vw 0;\r\n        letter-spacing: 0.5px;\r\n    }\r\n\r\n    .marquee__img {\r\n        width: 150px;\r\n        height: 8vh;\r\n        margin: 2em 3vw;\r\n        border-radius: 40px;\r\n    }\r\n\r\n    .marquee {\r\n        transition: transform 0.5s ease;\r\n    }\r\n}\r\n\r\n/* Mobile Portrait (320px - 480px) */\r\n@media (min-width: 320px) and (max-width: 480px) {\r\n    .menu-wrap {\r\n        width: 100vw;\r\n    }\r\n\r\n    .menu__item-link {\r\n        font-size: 5.5vh;\r\n        font-weight: 600;\r\n        letter-spacing: 0.8px;\r\n    }\r\n\r\n    .marquee span {\r\n        font-size: 5vh;\r\n        font-weight: 400;\r\n        padding: 1.3vh 2.5vw 0;\r\n        letter-spacing: 0.3px;\r\n    }\r\n\r\n    .marquee__img {\r\n        width: 130px;\r\n        height: 7vh;\r\n        margin: 1.8em 4vw;\r\n        border-radius: 35px;\r\n    }\r\n\r\n    .marquee {\r\n        transition: transform 0.4s ease;\r\n    }\r\n}\r\n\r\n/* Extra Small Mobile (≤320px) */\r\n@media (max-width: 320px) {\r\n    .menu-wrap {\r\n        width: 100vw;\r\n    }\r\n\r\n    .menu__item-link {\r\n        font-size: 5vh;\r\n        font-weight: 580;\r\n        letter-spacing: 0.6px;\r\n    }\r\n\r\n    .marquee span {\r\n        font-size: 4.5vh;\r\n        font-weight: 380;\r\n        padding: 1.2vh 3vw 0;\r\n        letter-spacing: 0.2px;\r\n    }\r\n\r\n    .marquee__img {\r\n        width: 110px;\r\n        height: 6vh;\r\n        margin: 1.6em 5vw;\r\n        border-radius: 30px;\r\n    }\r\n\r\n    .marquee {\r\n        transition: transform 0.3s ease;\r\n    }\r\n}","size_bytes":6033},"src/components/sections/About.tsx":{"content":"import styles from \"./About.module.css\";\n\nexport default function About() {\n  return (\n    <section id=\"about\" className={`section ${styles.about}`}>\n      <div className=\"container\">\n        <div className={styles.content}>\n          <div className={styles.textContent}>\n            <h2 className={styles.title}>About The Fringe</h2>\n            <p className={styles.description}>\n              For over a decade, The Fringe has been at the forefront of beauty\n              innovation, combining premium salon services with world-class\n              education. Our passion for excellence drives everything we do.\n            </p>\n            <p className={styles.description}>\n              Whether you're looking to transform your look or advance your\n              career in the beauty industry, we provide the expertise, tools,\n              and environment you need to succeed.\n            </p>\n            <div className={styles.stats}>\n              <div className={styles.stat}>\n                <span className={styles.statNumber}>1000+</span>\n                <span className={styles.statLabel}>Happy Clients</span>\n              </div>\n              <div className={styles.stat}>\n                <span className={styles.statNumber}>500+</span>\n                <span className={styles.statLabel}>Graduates</span>\n              </div>\n              <div className={styles.stat}>\n                <span className={styles.statNumber}>15+</span>\n                <span className={styles.statLabel}>Expert Stylists</span>\n              </div>\n            </div>\n          </div>\n          <div className={styles.imageContent}>\n            <img\n              src=\"/images/about-salon.jpg\"\n              alt=\"The Fringe Salon Interior\"\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":1818},"src/components/sections/Hero.tsx":{"content":"\"use client\";\n\nimport { useState, useRef, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { useSmoothScroll } from \"../../hooks/useSmoothScroll\";\nimport styles from \"./Hero.module.css\";\n\nexport default function Hero() {\n  const [showOffer, setShowOffer] = useState(false);\n  const [videoLoaded, setVideoLoaded] = useState(false);\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const { scrollTo } = useSmoothScroll();\n\n  useEffect(() => {\n    const video = videoRef.current;\n    if (video) {\n      const handleLoadedData = () => {\n        console.log(\"Video loaded successfully\");\n        setVideoLoaded(true);\n      };\n\n      const handleError = (e: Event) => {\n        console.error(\"Video failed to load:\", e);\n        console.error(\"Video error details:\", video.error);\n      };\n\n      const handleCanPlay = () => {\n        console.log(\"Video can start playing\");\n        setVideoLoaded(true);\n      };\n\n      const handleLoadStart = () => {\n        console.log(\"Video loading started\");\n      };\n\n      video.addEventListener(\"loadeddata\", handleLoadedData);\n      video.addEventListener(\"error\", handleError);\n      video.addEventListener(\"canplay\", handleCanPlay);\n      video.addEventListener(\"loadstart\", handleLoadStart);\n\n      // If video is already loaded\n      if (video.readyState >= 2) {\n        console.log(\"Video already loaded, readyState:\", video.readyState);\n        setVideoLoaded(true);\n      }\n\n      // Try to load the video\n      video.load();\n\n      return () => {\n        video.removeEventListener(\"loadeddata\", handleLoadedData);\n        video.removeEventListener(\"error\", handleError);\n        video.removeEventListener(\"canplay\", handleCanPlay);\n        video.removeEventListener(\"loadstart\", handleLoadStart);\n      };\n    }\n  }, []);\n\n  const toggleOffer = () => {\n    setShowOffer(!showOffer);\n  };\n\n  const scrollToServices = () => {\n    scrollTo(\"#services\", { duration: 1.5 });\n  };\n\n  return (\n    <section className={styles.hero}>\n      {/* Background Video */}\n      <div className={styles.videoBackground}>\n        <video\n          ref={videoRef}\n          autoPlay\n          muted\n          loop\n          playsInline\n          className={`${styles.video} ${videoLoaded ? styles.videoLoaded : \"\"}`}\n          poster=\"/video-poster.jpg\"\n          preload=\"auto\"\n          controls={false}\n        >\n          <source src=\"/intro.mp4\" type=\"video/mp4\" />\n          <source src=\"/intro.webm\" type=\"video/webm\" />\n          Your browser does not support the video tag.\n        </video>\n        <div className={styles.videoOverlay}></div>\n      </div>\n\n      {/* Hero Content */}\n      <div className={`container ${styles.heroContent}`}>\n        <div className={styles.contentWrapper}>\n          <h1 className={`${styles.heroTitle} font-heading`}>\n            <span className=\"gradient-text-accent\">Transform Your Look</span>\n            <br />\n            <span className=\"text-primary\">Advance Your Career</span>\n          </h1>\n\n          <p className={`${styles.heroDescription} font-subheading`}>\n            Experience premium salon services and professional beauty education\n            at The Fringe. Where style meets expertise, and dreams become\n            reality.\n          </p>\n\n          <div className={styles.ctaContainer}>\n            <Link\n              href=\"/book-now\"\n              className=\"btn btn-primary btn-lg font-accent\"\n            >\n              Book Appointment\n            </Link>\n            <Link\n              href=\"/courses\"\n              className=\"btn btn-secondary btn-lg font-accent\"\n            >\n              Explore Courses\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      {/* Scroll Down Indicator - At very bottom */}\n      <div className={styles.scrollIndicator} onClick={scrollToServices}>\n        <div className={styles.scrollMouse}>\n          <div className={styles.scrollWheel}></div>\n        </div>\n        <span className={`${styles.scrollText} font-accent`}>\n          Scroll to explore our services\n        </span>\n      </div>\n\n      {/* Special Offer Popup */}\n      {showOffer && (\n        <div className={styles.offerModal}>\n          <div className={styles.offerContent}>\n            <button\n              className={styles.closeButton}\n              onClick={toggleOffer}\n              aria-label=\"Close offer\"\n            >\n              ×\n            </button>\n            <h3 className={styles.offerTitle}>Special Offer!</h3>\n            <p className={styles.offerDescription}>\n              Get 20% off your first service or course enrollment. Use code:\n              WELCOME20\n            </p>\n            <div className={styles.offerActions}>\n              <Link href=\"/book-now\" className=\"btn btn-primary\">\n                Book Now\n              </Link>\n              <Link href=\"/courses\" className=\"btn btn-secondary\">\n                View Courses\n              </Link>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Offer Toggle Button */}\n      <button\n        className={styles.offerToggle}\n        onClick={toggleOffer}\n        aria-label=\"Toggle special offer\"\n      >\n        🎁\n      </button>\n    </section>\n  );\n}\n","size_bytes":5204},"src/app/admin/services/Services.module.css":{"content":".servicesPage {\r\n    padding: var(--spacing-xl);\r\n}\r\n\r\n.loading {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 50vh;\r\n    font-size: var(--font-size-lg);\r\n    color: var(--color-text-secondary);\r\n}\r\n\r\n.header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: var(--spacing-2xl);\r\n}\r\n\r\n.title {\r\n    font-size: var(--font-size-3xl);\r\n    font-weight: 700;\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n.servicesGrid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\r\n    gap: var(--spacing-xl);\r\n}\r\n\r\n.serviceCard {\r\n    padding: var(--spacing-xl);\r\n    transition: all var(--transition-normal);\r\n}\r\n\r\n.serviceCard:hover {\r\n    transform: translateY(-4px);\r\n    box-shadow: var(--shadow-lg);\r\n}\r\n\r\n.serviceHeader {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n    margin-bottom: var(--spacing-lg);\r\n}\r\n\r\n.serviceName {\r\n    font-size: var(--font-size-xl);\r\n    font-weight: 600;\r\n    color: var(--color-text-primary);\r\n    margin: 0;\r\n}\r\n\r\n.status {\r\n    padding: var(--spacing-xs) var(--spacing-sm);\r\n    border-radius: var(--radius-md);\r\n    font-size: var(--font-size-sm);\r\n    font-weight: 500;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.status.active {\r\n    background: rgba(34, 197, 94, 0.2);\r\n    color: #22c55e;\r\n    border: 1px solid #22c55e;\r\n}\r\n\r\n.status.inactive {\r\n    background: rgba(156, 163, 175, 0.2);\r\n    color: #9ca3af;\r\n    border: 1px solid #9ca3af;\r\n}\r\n\r\n.serviceDescription {\r\n    color: var(--color-text-secondary);\r\n    line-height: 1.6;\r\n    margin-bottom: var(--spacing-lg);\r\n}\r\n\r\n.serviceDetails {\r\n    margin-bottom: var(--spacing-lg);\r\n}\r\n\r\n.detailItem {\r\n    margin-bottom: var(--spacing-sm);\r\n    color: var(--color-text-secondary);\r\n}\r\n\r\n.serviceActions {\r\n    display: flex;\r\n    gap: var(--spacing-sm);\r\n}\r\n\r\n/* Modal styles (similar to previous modals) */\r\n.modal {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: rgba(0, 0, 0, 0.8);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 1000;\r\n}\r\n\r\n.modalContent {\r\n    background: var(--color-card-bg);\r\n    border-radius: var(--radius-lg);\r\n    border: 1px solid var(--color-card-border);\r\n    width: 100%;\r\n    max-width: 500px;\r\n    max-height: 90vh;\r\n    overflow-y: auto;\r\n}\r\n\r\n.modalHeader {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: var(--spacing-xl);\r\n    border-bottom: 1px solid var(--color-border);\r\n}\r\n\r\n.modalHeader h2 {\r\n    font-size: var(--font-size-xl);\r\n    font-weight: 600;\r\n    color: var(--color-text-primary);\r\n    margin: 0;\r\n}\r\n\r\n.closeBtn {\r\n    background: none;\r\n    border: none;\r\n    font-size: var(--font-size-2xl);\r\n    color: var(--color-text-secondary);\r\n    cursor: pointer;\r\n    padding: 0;\r\n    width: 30px;\r\n    height: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: var(--radius-sm);\r\n    transition: all var(--transition-normal);\r\n}\r\n\r\n.closeBtn:hover {\r\n    background: var(--color-tertiary-bg);\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n.form {\r\n    padding: var(--spacing-xl);\r\n}\r\n\r\n.formGroup {\r\n    margin-bottom: var(--spacing-lg);\r\n}\r\n\r\n.formGroup label {\r\n    display: block;\r\n    margin-bottom: var(--spacing-sm);\r\n    font-weight: 500;\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n.formRow {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-lg);\r\n}\r\n\r\n.formActions {\r\n    display: flex;\r\n    gap: var(--spacing-md);\r\n    justify-content: flex-end;\r\n    margin-top: var(--spacing-xl);\r\n    padding-top: var(--spacing-lg);\r\n    border-top: 1px solid var(--color-border);\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .servicesPage {\r\n        padding: var(--spacing-md);\r\n    }\r\n\r\n    .header {\r\n        flex-direction: column;\r\n        gap: var(--spacing-lg);\r\n        align-items: stretch;\r\n    }\r\n\r\n    .servicesGrid {\r\n        grid-template-columns: 1fr;\r\n    }\r\n\r\n    .formRow {\r\n        grid-template-columns: 1fr;\r\n    }\r\n}","size_bytes":4169},"src/components/ui/LoadingSpinner.tsx":{"content":"import React from 'react';\r\nimport styles from './LoadingSpinner.module.css';\r\n\r\ninterface LoadingSpinnerProps {\r\n  size?: 'small' | 'medium' | 'large';\r\n  color?: 'primary' | 'secondary' | 'white';\r\n  text?: string;\r\n  progress?: number; // For progress bar (0-100)\r\n}\r\n\r\nexport default function LoadingSpinner({ \r\n  size = 'medium', \r\n  color = 'primary', \r\n  text,\r\n  progress \r\n}: LoadingSpinnerProps) {\r\n  return (\r\n    <div className={`${styles.loadingContainer} ${styles[size]}`}>\r\n      {progress !== undefined ? (\r\n        // Progress bar for file uploads\r\n        <div className={styles.progressContainer}>\r\n          <div className={`${styles.progressBar} ${styles[color]}`}>\r\n            <div \r\n              className={styles.progressFill}\r\n              style={{ width: `${progress}%` }}\r\n            />\r\n          </div>\r\n          {text && (\r\n            <div className={styles.progressText}>\r\n              {text} ({Math.round(progress)}%)\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        // Spinning loader\r\n        <>\r\n          <div className={`${styles.spinner} ${styles[color]}`}>\r\n            <div className={styles.spinnerRing}></div>\r\n            <div className={styles.spinnerRing}></div>\r\n            <div className={styles.spinnerRing}></div>\r\n          </div>\r\n          {text && <div className={styles.loadingText}>{text}</div>}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Overlay loading component for full-screen loading\r\nexport function LoadingOverlay({ \r\n  text = \"Loading...\", \r\n  progress \r\n}: { \r\n  text?: string; \r\n  progress?: number; \r\n}) {\r\n  return (\r\n    <div className={styles.loadingOverlay}>\r\n      <div className={styles.overlayContent}>\r\n        <LoadingSpinner \r\n          size=\"large\" \r\n          color=\"primary\" \r\n          text={text} \r\n          progress={progress}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}","size_bytes":1894},"src/config/api.ts":{"content":"// API Configuration\r\nexport const API_CONFIG = {\r\n  BASE_URL: process.env.NEXT_PUBLIC_API_BASE_URL || 'https://api.thefringe.com',\r\n  ENDPOINTS: {\r\n    // Admin endpoints\r\n    ADMIN: {\r\n      LOGIN: '/admin/auth/login',\r\n      FORGOT_PASSWORD: '/admin/auth/forgot-password',\r\n      CERTIFICATES: {\r\n        LIST: '/admin/certificates',\r\n        UPLOAD: '/admin/certificates/upload',\r\n        REVOKE: '/admin/certificates/revoke',\r\n      },\r\n      STUDENTS: {\r\n        LIST: '/admin/students',\r\n        CREATE: '/admin/students',\r\n        UPDATE: '/admin/students',\r\n        DELETE: '/admin/students',\r\n      },\r\n      SERVICES: {\r\n        LIST: '/admin/services',\r\n        CREATE: '/admin/services',\r\n        UPDATE: '/admin/services',\r\n        DELETE: '/admin/services',\r\n      },\r\n      COURSES: {\r\n        LIST: '/admin/courses',\r\n        CREATE: '/admin/courses',\r\n        UPDATE: '/admin/courses',\r\n        DELETE: '/admin/courses',\r\n      },\r\n      SETTINGS: '/admin/settings',\r\n    },\r\n    // Student endpoints\r\n    STUDENT: {\r\n      LOGIN: '/student/auth/login',\r\n      FORGOT_PASSWORD: '/student/auth/forgot-password',\r\n      DASHBOARD: '/student/dashboard',\r\n      COURSES: '/student/courses',\r\n      CERTIFICATES: '/student/certificates',\r\n      PROFILE: '/student/profile',\r\n      SETTINGS: '/student/settings',\r\n    },\r\n    // Public endpoints\r\n    PUBLIC: {\r\n      SERVICES: '/services',\r\n      COURSES: '/courses',\r\n      CONTACT: '/contact',\r\n      NEWSLETTER: '/newsletter/subscribe',\r\n    }\r\n  }\r\n};\r\n\r\n// Helper function to build full API URL\r\nexport const buildApiUrl = (endpoint: string): string => {\r\n  return `${API_CONFIG.BASE_URL}${endpoint}`;\r\n};\r\n\r\n// Helper function for API calls with error handling\r\nexport const apiCall = async (\r\n  endpoint: string, \r\n  options: RequestInit = {}\r\n): Promise<any> => {\r\n  const url = buildApiUrl(endpoint);\r\n  \r\n  const defaultOptions: RequestInit = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...options.headers,\r\n    },\r\n    ...options,\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(url, defaultOptions);\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('API call failed:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Helper function for file uploads\r\nexport const uploadFile = async (\r\n  endpoint: string,\r\n  formData: FormData,\r\n  onProgress?: (progress: number) => void\r\n): Promise<any> => {\r\n  const url = buildApiUrl(endpoint);\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest();\r\n    \r\n    // Track upload progress\r\n    if (onProgress) {\r\n      xhr.upload.addEventListener('progress', (event) => {\r\n        if (event.lengthComputable) {\r\n          const progress = (event.loaded / event.total) * 100;\r\n          onProgress(progress);\r\n        }\r\n      });\r\n    }\r\n    \r\n    xhr.addEventListener('load', () => {\r\n      if (xhr.status >= 200 && xhr.status < 300) {\r\n        try {\r\n          const response = JSON.parse(xhr.responseText);\r\n          resolve(response);\r\n        } catch (error) {\r\n          resolve({ success: true });\r\n        }\r\n      } else {\r\n        try {\r\n          const errorResponse = JSON.parse(xhr.responseText);\r\n          reject(new Error(errorResponse.message || `Upload failed with status: ${xhr.status}`));\r\n        } catch (error) {\r\n          reject(new Error(`Upload failed with status: ${xhr.status}`));\r\n        }\r\n      }\r\n    });\r\n    \r\n    xhr.addEventListener('error', () => {\r\n      reject(new Error('Upload failed due to network error'));\r\n    });\r\n    \r\n    xhr.open('POST', url);\r\n    xhr.send(formData);\r\n  });\r\n};","size_bytes":3816},"src/app/admin/login/AdminLogin.module.css":{"content":".loginPage {\r\n    min-height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: linear-gradient(135deg, #000000 0%, #1a1a1a 100%);\r\n    padding: var(--spacing-lg);\r\n}\r\n\r\n.loginContainer {\r\n    width: 100%;\r\n    max-width: 400px;\r\n}\r\n\r\n.loginCard {\r\n    background-color: var(--color-card-bg);\r\n    border: 1px solid var(--color-border);\r\n    border-radius: var(--radius-xl);\r\n    padding: var(--spacing-3xl);\r\n    box-shadow: var(--shadow-xl);\r\n}\r\n\r\n.header {\r\n    text-align: center;\r\n    margin-bottom: var(--spacing-2xl);\r\n}\r\n\r\n.title {\r\n    font-size: var(--font-size-3xl);\r\n    font-weight: 700;\r\n    color: var(--color-text-primary);\r\n    margin-bottom: var(--spacing-sm);\r\n}\r\n\r\n.subtitle {\r\n    color: var(--color-text-secondary);\r\n    font-size: var(--font-size-base);\r\n}\r\n\r\n.errorMessage {\r\n    background-color: rgba(244, 67, 54, 0.1);\r\n    border: 1px solid rgba(244, 67, 54, 0.3);\r\n    border-radius: var(--radius-md);\r\n    padding: var(--spacing-md);\r\n    margin-bottom: var(--spacing-lg);\r\n    color: #f44336;\r\n    text-align: center;\r\n    font-size: var(--font-size-sm);\r\n}\r\n\r\n.form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: var(--spacing-lg);\r\n    margin-bottom: var(--spacing-xl);\r\n}\r\n\r\n.formGroup {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: var(--spacing-sm);\r\n}\r\n\r\n.formGroup label {\r\n    font-weight: 600;\r\n    color: var(--color-text-primary);\r\n    font-size: var(--font-size-sm);\r\n}\r\n\r\n.submitButton {\r\n    width: 100%;\r\n    margin-top: var(--spacing-md);\r\n}\r\n\r\n.submitButton:disabled {\r\n    opacity: 0.6;\r\n    cursor: not-allowed;\r\n}\r\n\r\n.forgotPassword {\r\n    text-align: center;\r\n    margin: var(--spacing-lg) 0;\r\n}\r\n\r\n.forgotLink {\r\n    background: none;\r\n    border: none;\r\n    color: var(--color-accent-primary);\r\n    text-decoration: underline;\r\n    font-size: var(--font-size-sm);\r\n    cursor: pointer;\r\n    transition: color var(--transition-normal);\r\n}\r\n\r\n.forgotLink:hover {\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n.footer {\r\n    text-align: center;\r\n    padding-top: var(--spacing-lg);\r\n    border-top: 1px solid var(--color-border);\r\n}\r\n\r\n.backLink {\r\n    color: var(--color-text-secondary);\r\n    text-decoration: none;\r\n    font-size: var(--font-size-sm);\r\n    transition: color var(--transition-normal);\r\n}\r\n\r\n.backLink:hover {\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n@media (max-width: 480px) {\r\n    .loginCard {\r\n        padding: var(--spacing-xl);\r\n    }\r\n\r\n    .title {\r\n        font-size: var(--font-size-2xl);\r\n    }\r\n}","size_bytes":2557},"src/app/admin/newsletter/Newsletter.module.css":{"content":".newsletterPage {\n    padding: var(--spacing-xl);\n}\n\n.loading {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 50vh;\n    font-size: var(--font-size-lg);\n    color: var(--color-text-secondary);\n}\n\n.header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: var(--spacing-2xl);\n}\n\n.title {\n    font-size: var(--font-size-3xl);\n    font-weight: 700;\n    color: var(--color-text-primary);\n}\n\n.stats {\n    margin-bottom: var(--spacing-2xl);\n}\n\n.statCard {\n    padding: var(--spacing-xl);\n    text-align: center;\n    max-width: 300px;\n}\n\n.statCard h3 {\n    font-size: var(--font-size-lg);\n    margin-bottom: var(--spacing-md);\n    color: var(--color-text-secondary);\n}\n\n.statNumber {\n    font-size: var(--font-size-4xl);\n    font-weight: 700;\n    color: var(--color-text-primary);\n}\n\n.subscribersList h2 {\n    font-size: var(--font-size-2xl);\n    margin-bottom: var(--spacing-lg);\n    color: var(--color-text-primary);\n}\n\n.tableContainer {\n    background: var(--color-card-bg);\n    border-radius: var(--radius-lg);\n    border: 1px solid var(--color-card-border);\n    overflow: hidden;\n}\n\n.subscribersTable {\n    width: 100%;\n    border-collapse: collapse;\n}\n\n.subscribersTable th {\n    background: var(--color-tertiary-bg);\n    padding: var(--spacing-lg);\n    text-align: left;\n    font-weight: 600;\n    color: var(--color-text-primary);\n    border-bottom: 1px solid var(--color-border);\n}\n\n.subscribersTable td {\n    padding: var(--spacing-lg);\n    border-bottom: 1px solid var(--color-border);\n    color: var(--color-text-secondary);\n}\n\n.subscribersTable tr:hover {\n    background: var(--color-tertiary-bg);\n}\n\n.activeStatus {\n    padding: var(--spacing-xs) var(--spacing-sm);\n    background: rgba(34, 197, 94, 0.2);\n    color: #22c55e;\n    border: 1px solid #22c55e;\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n}","size_bytes":1951},"src/components/ui/textLoop/textLoop.js":{"content":"\"use client\";\nimport { useEffect, useState } from \"react\";\nimport styles from \"./textLoop.module.css\";\n\nexport default function TextLoop() {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const words = [\n    \"Excellence\",\n    \"Innovation\", \n    \"Beauty\",\n    \"Expertise\",\n    \"Transformation\",\n    \"Quality\",\n    \"Elegance\",\n    \"Artistry\",\n    \"Professional\",\n    \"Luxury\"\n  ];\n\n  useEffect(() => {\n    setIsVisible(true);\n  }, []);\n\n  return (\n    <div className={`${styles.scrollContainer} ${isVisible ? styles.visible : ''}`}>\n      <div className={styles.scrollTrack}>\n        {/* Create multiple sets for seamless loop */}\n        {Array.from({ length: 4 }, (_, setIndex) =>\n          words.map((word, wordIndex) => (\n            <span \n              key={`${setIndex}-${wordIndex}`} \n              className={styles.word}\n              style={{ \n                animationDelay: `${(setIndex * words.length + wordIndex) * 0.1}s` \n              }}\n            >\n              {word}\n            </span>\n          ))\n        )}\n      </div>\n      \n      <div className={styles.gradientOverlay}>\n        <div className={styles.gradientLeft}></div>\n        <div className={styles.gradientRight}></div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":1244},"src/app/privacy-policy/page.tsx":{"content":"import { Metadata } from 'next';\r\nimport Layout from '../../components/layout/Layout';\r\nimport styles from './PrivacyPolicy.module.css';\r\n\r\nexport const metadata: Metadata = {\r\n  title: 'Privacy Policy | The Fringe Beauty Academy',\r\n  description: 'Learn about how The Fringe Beauty Academy collects, uses, and protects your personal information. Our comprehensive privacy policy explains your rights and our commitments.',\r\n  keywords: 'privacy policy, data protection, personal information, The Fringe Beauty Academy',\r\n  openGraph: {\r\n    title: 'Privacy Policy | The Fringe Beauty Academy',\r\n    description: 'Learn about how The Fringe Beauty Academy collects, uses, and protects your personal information.',\r\n    type: 'website',\r\n  },\r\n};\r\n\r\nexport default function PrivacyPolicyPage() {\r\n  const lastUpdated = \"December 15, 2024\";\r\n\r\n  return (\r\n    <Layout>\r\n      <div className={styles.privacyPage}>\r\n        <div className=\"container\">\r\n          <div className={styles.header}>\r\n            <h1 className={styles.title}>Privacy Policy</h1>\r\n            <p className={styles.lastUpdated}>Last updated: {lastUpdated}</p>\r\n          </div>\r\n\r\n          <div className={styles.content}>\r\n            <section className={styles.section}>\r\n              <h2>1. Information We Collect</h2>\r\n              <p>\r\n                At The Fringe Beauty Academy, we collect information you provide directly to us, such as when you:\r\n              </p>\r\n              <ul>\r\n                <li>Create an account or enroll in our courses</li>\r\n                <li>Contact us for support or inquiries</li>\r\n                <li>Subscribe to our newsletter</li>\r\n                <li>Book appointments or services</li>\r\n                <li>Participate in surveys or promotions</li>\r\n              </ul>\r\n              \r\n              <h3>Personal Information</h3>\r\n              <p>This may include:</p>\r\n              <ul>\r\n                <li>Name, email address, and phone number</li>\r\n                <li>Billing and shipping addresses</li>\r\n                <li>Payment information (processed securely by our payment providers)</li>\r\n                <li>Course progress and certification records</li>\r\n                <li>Photos and videos for portfolio purposes (with consent)</li>\r\n              </ul>\r\n            </section>\r\n\r\n            <section className={styles.section}>\r\n              <h2>2. How We Use Your Information</h2>\r\n              <p>We use the information we collect to:</p>\r\n              <ul>\r\n                <li>Provide, maintain, and improve our services</li>\r\n                <li>Process transactions and send related information</li>\r\n                <li>Send you technical notices and support messages</li>\r\n                <li>Communicate about courses, services, and promotional offers</li>\r\n                <li>Monitor and analyze usage patterns to improve user experience</li>\r\n                <li>Comply with legal obligations and protect our rights</li>\r\n              </ul>\r\n            </section>\r\n\r\n            <section className={styles.section}>\r\n              <h2>3. Information Sharing and Disclosure</h2>\r\n              <p>\r\n                We do not sell, trade, or otherwise transfer your personal information to third parties without your consent, except as described in this policy:\r\n              </p>\r\n              \r\n              <h3>Service Providers</h3>\r\n              <p>\r\n                We may share your information with third-party service providers who assist us in operating our website, conducting business, or serving you, including:\r\n              </p>\r\n              <ul>\r\n                <li>Payment processors</li>\r\n                <li>Email service providers</li>\r\n                <li>Cloud storage providers</li>\r\n                <li>Analytics services</li>\r\n              </ul>\r\n\r\n              <h3>Legal Requirements</h3>\r\n              <p>\r\n                We may disclose your information if required by law or in response to valid requests by public authorities.\r\n              </p>\r\n            </section>\r\n\r\n            <section className={styles.section}>\r\n              <h2>4. Data Security</h2>\r\n              <p>\r\n                We implement appropriate technical and organizational measures to protect your personal information against unauthorized access, alteration, disclosure, or destruction. These measures include:\r\n              </p>\r\n              <ul>\r\n                <li>Encryption of sensitive data in transit and at rest</li>\r\n                <li>Regular security assessments and updates</li>\r\n                <li>Access controls and authentication measures</li>\r\n                <li>Employee training on data protection</li>\r\n              </ul>\r\n            </section>\r\n\r\n            <section className={styles.section}>\r\n              <h2>5. Your Rights and Choices</h2>\r\n              <p>You have the right to:</p>\r\n              <ul>\r\n                <li>Access, update, or delete your personal information</li>\r\n                <li>Opt-out of marketing communications</li>\r\n                <li>Request a copy of your data</li>\r\n                <li>Object to processing of your personal information</li>\r\n                <li>Request restriction of processing</li>\r\n                <li>Data portability (where applicable)</li>\r\n              </ul>\r\n              \r\n              <p>\r\n                To exercise these rights, please contact us at{' '}\r\n                <a href=\"mailto:privacy@thefringe.com\" className={styles.link}>\r\n                  privacy@thefringe.com\r\n                </a>\r\n              </p>\r\n            </section>\r\n\r\n            <section className={styles.section}>\r\n              <h2>6. Cookies and Tracking Technologies</h2>\r\n              <p>\r\n                We use cookies and similar tracking technologies to enhance your experience on our website. \r\n                For detailed information about our use of cookies, please see our{' '}\r\n                <a href=\"/cookie-policy\" className={styles.link}>Cookie Policy</a>.\r\n              </p>\r\n            </section>\r\n\r\n            <section className={styles.section}>\r\n              <h2>7. Data Retention</h2>\r\n              <p>\r\n                We retain your personal information for as long as necessary to fulfill the purposes outlined in this policy, \r\n                unless a longer retention period is required or permitted by law. Course records and certifications may be \r\n                retained for extended periods for verification purposes.\r\n              </p>\r\n            </section>\r\n\r\n            <section className={styles.section}>\r\n              <h2>8. International Data Transfers</h2>\r\n              <p>\r\n                Your information may be transferred to and processed in countries other than your own. We ensure that such \r\n                transfers comply with applicable data protection laws and implement appropriate safeguards.\r\n              </p>\r\n            </section>\r\n\r\n            <section className={styles.section}>\r\n              <h2>9. Children's Privacy</h2>\r\n              <p>\r\n                Our services are not directed to individuals under 16 years of age. We do not knowingly collect personal \r\n                information from children under 16. If we become aware that we have collected such information, we will \r\n                take steps to delete it promptly.\r\n              </p>\r\n            </section>\r\n\r\n            <section className={styles.section}>\r\n              <h2>10. Changes to This Policy</h2>\r\n              <p>\r\n                We may update this Privacy Policy from time to time. We will notify you of any material changes by posting \r\n                the new policy on this page and updating the \"Last updated\" date. Your continued use of our services after \r\n                such changes constitutes acceptance of the updated policy.\r\n              </p>\r\n            </section>\r\n\r\n            <section className={styles.section}>\r\n              <h2>11. Contact Us</h2>\r\n              <p>\r\n                If you have any questions about this Privacy Policy or our data practices, please contact us:\r\n              </p>\r\n              <div className={styles.contactInfo}>\r\n                <p><strong>The Fringe Beauty Academy</strong></p>\r\n                <p>Email: <a href=\"mailto:privacy@thefringe.com\" className={styles.link}>privacy@thefringe.com</a></p>\r\n                <p>Phone: <a href=\"tel:+15551234567\" className={styles.link}>+1 (555) 123-4567</a></p>\r\n                <p>Address: 123 Beauty Street, City, State 12345</p>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}","size_bytes":8703},"src/app/student/settings/Settings.module.css":{"content":".settingsPage {\r\n  padding: 24px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.header {\r\n  margin-bottom: 32px;\r\n}\r\n\r\n.title {\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  color: #ffffff;\r\n  margin-bottom: 8px;\r\n  background: linear-gradient(135deg, #ffffff 0%, #D0B49F 100%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n}\r\n\r\n.subtitle {\r\n  color: rgba(255, 255, 255, 0.7);\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.message {\r\n  padding: 16px 20px;\r\n  border-radius: 12px;\r\n  margin-bottom: 24px;\r\n  font-weight: 500;\r\n}\r\n\r\n.message.success {\r\n  background: rgba(34, 197, 94, 0.1);\r\n  border: 1px solid rgba(34, 197, 94, 0.3);\r\n  color: #22c55e;\r\n}\r\n\r\n.message.error {\r\n  background: rgba(239, 68, 68, 0.1);\r\n  border: 1px solid rgba(239, 68, 68, 0.3);\r\n  color: #ef4444;\r\n}\r\n\r\n.settingsGrid {\r\n  display: grid;\r\n  gap: 24px;\r\n  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\r\n}\r\n\r\n.settingCard {\r\n  background: rgba(255, 255, 255, 0.05);\r\n  backdrop-filter: blur(20px);\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  border-radius: 16px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n}\r\n\r\n.cardHeader {\r\n  padding: 24px 24px 16px 24px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.cardTitle {\r\n  font-size: 1.3rem;\r\n  font-weight: 600;\r\n  color: #ffffff;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.cardDescription {\r\n  color: rgba(255, 255, 255, 0.6);\r\n  font-size: 0.95rem;\r\n}\r\n\r\n.cardContent {\r\n  padding: 24px;\r\n}\r\n\r\n.formGroup {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.formGroup label {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: 500;\r\n  color: #ffffff;\r\n}\r\n\r\n.formGroup .input {\r\n  width: 100%;\r\n  padding: 12px 16px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-radius: 8px;\r\n  background: rgba(255, 255, 255, 0.05);\r\n  color: #ffffff;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.formGroup .input:focus {\r\n  outline: none;\r\n  border-color: #D0B49F;\r\n  background: rgba(255, 255, 255, 0.08);\r\n  box-shadow: 0 0 0 3px rgba(208, 180, 159, 0.2);\r\n}\r\n\r\n.formGroup .input::placeholder {\r\n  color: rgba(255, 255, 255, 0.4);\r\n}\r\n\r\n.passwordForm {\r\n  width: 100%;\r\n}\r\n\r\n.formActions {\r\n  display: flex;\r\n  gap: 12px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.formActions .btn {\r\n  padding: 10px 20px;\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.toggleGroup {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n}\r\n\r\n.toggleLabel {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-weight: 500;\r\n  color: #ffffff;\r\n  cursor: pointer;\r\n  padding: 12px 0;\r\n}\r\n\r\n.toggle {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 28px;\r\n}\r\n\r\n.toggle input {\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n}\r\n\r\n.toggleSlider {\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  transition: 0.4s;\r\n  border-radius: 28px;\r\n}\r\n\r\n.toggleSlider:before {\r\n  position: absolute;\r\n  content: \"\";\r\n  height: 20px;\r\n  width: 20px;\r\n  left: 4px;\r\n  bottom: 4px;\r\n  background-color: white;\r\n  transition: 0.4s;\r\n  border-radius: 50%;\r\n}\r\n\r\n.toggle input:checked + .toggleSlider {\r\n  background: linear-gradient(135deg, #D0B49F 0%, #B8A082 100%);\r\n}\r\n\r\n.toggle input:checked + .toggleSlider:before {\r\n  transform: translateX(22px);\r\n}\r\n\r\n.loading,\r\n.error {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 400px;\r\n  font-size: 1.1rem;\r\n  color: rgba(255, 255, 255, 0.7);\r\n}\r\n\r\n.error {\r\n  color: #ef4444;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .settingsPage {\r\n    padding: 16px;\r\n  }\r\n\r\n  .title {\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  .subtitle {\r\n    font-size: 1rem;\r\n  }\r\n\r\n  .settingsGrid {\r\n    grid-template-columns: 1fr;\r\n    gap: 20px;\r\n  }\r\n\r\n  .cardHeader,\r\n  .cardContent {\r\n    padding: 20px;\r\n  }\r\n\r\n  .toggleLabel {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 8px;\r\n  }\r\n\r\n  .formActions {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .formActions .btn {\r\n    width: 100%;\r\n  }\r\n}","size_bytes":4089},"src/services/courses.service.ts":{"content":"import { fetchApi } from '@/lib/api';\nimport { mockCourses } from './mockData';\n\nexport interface Course {\n  id: string;\n  title: string;\n  description: string;\n  duration: string;\n  price: number;\n  image: string;\n  instructor: string;\n  level: 'beginner' | 'intermediate' | 'advanced';\n  topics: string[];\n  enrollmentStatus: 'open' | 'closed' | 'in-progress';\n}\n\nexport interface EnrollmentData {\n  courseId: string;\n  userId: string;\n  paymentDetails?: any;\n}\n\nexport const coursesService = {\n  async getAllCourses(): Promise<Course[]> {\n    try {\n      return await fetchApi<Course[]>('/courses');\n    } catch (error) {\n      console.log('Falling back to mock data for courses', error);\n      return mockCourses;\n    }\n  },\n\n  async getCourseById(id: string): Promise<Course> {\n    try {\n      return await fetchApi<Course>(`/courses/${id}`);\n    } catch (error) {\n      console.log('Falling back to mock data for course details', error);\n      const course = mockCourses.find(c => c.id === id);\n      if (!course) throw new Error('Course not found');\n      return course;\n    }\n  },\n\n  async enrollInCourse(data: EnrollmentData): Promise<void> {\n    try {\n      return await fetchApi<void>('/courses/enroll', {\n        method: 'POST',\n        body: JSON.stringify(data),\n      });\n    } catch (error) {\n      console.log('Simulating course enrollment with mock data', error);\n      // In mock mode, we just simulate success\n      return;\n    }\n  },\n\n  async getMyCourses(userId: string): Promise<Course[]> {\n    try {\n      return await fetchApi<Course[]>(`/courses/user/${userId}`);\n    } catch (error) {\n      console.log('Falling back to mock data for user courses', error);\n      // In mock mode, return a subset of courses as enrolled\n      return mockCourses.slice(0, 2);\n    }\n  },\n\n  async getCourseProgress(courseId: string, userId: string): Promise<number> {\n    try {\n      return await fetchApi<number>(`/courses/${courseId}/progress/${userId}`);\n    } catch (error) {\n      console.log('Falling back to mock data for course progress', error);\n      // In mock mode, return a random progress between 0-100\n      return Math.floor(Math.random() * 100);\n    }\n  },\n};","size_bytes":2183},"src/app/student/dashboard/page.tsx":{"content":"\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport StudentLayout from \"../../../components/layout/StudentLayout\";\r\nimport VideoPlayer from \"../../../components/ui/VideoPlayer\";\r\nimport styles from \"./Dashboard.module.css\";\r\n\r\nexport default function StudentDashboard() {\r\n  const [student, setStudent] = useState<any>(null);\r\n  const [course, setCourse] = useState<any>(null);\r\n  const [progress, setProgress] = useState<any>(null);\r\n  const [currentModule, setCurrentModule] = useState<any>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    // Check student authentication\r\n    const studentSession = localStorage.getItem(\"student_session\");\r\n    if (!studentSession) {\r\n      router.push(\"/student/login\");\r\n      return;\r\n    }\r\n\r\n    fetchStudentData();\r\n  }, []);\r\n\r\n  const fetchStudentData = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/student/dashboard\");\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setStudent(data.student);\r\n        setCourse(data.course);\r\n        setProgress(data.progress);\r\n        if (data.course?.modules?.length > 0) {\r\n          setCurrentModule(data.course.modules[0]);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch student data:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleModuleSelect = (module: any) => {\r\n    setCurrentModule(module);\r\n  };\r\n\r\n  const handleVideoProgress = async (\r\n    moduleId: string,\r\n    progress: number,\r\n    watchTime: number\r\n  ) => {\r\n    try {\r\n      await fetch(\"/api/student/progress\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          moduleId,\r\n          progress,\r\n          watchTime,\r\n        }),\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to update progress:\", error);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <StudentLayout>\r\n        <div className={styles.loading}>Loading your dashboard...</div>\r\n      </StudentLayout>\r\n    );\r\n  }\r\n\r\n  if (!course) {\r\n    return (\r\n      <StudentLayout>\r\n        <div className={styles.noCourse}>\r\n          <h2>No Course Assigned</h2>\r\n          <p>Please contact your instructor to get enrolled in a course.</p>\r\n        </div>\r\n      </StudentLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <StudentLayout>\r\n      <div className={styles.dashboard}>\r\n        {/* Course Header */}\r\n        <div className={styles.courseHeader}>\r\n          <div className={styles.courseInfo}>\r\n            <h1 className={styles.courseTitle}>{course.title}</h1>\r\n            <p className={styles.courseDescription}>{course.description}</p>\r\n          </div>\r\n\r\n          <div className={styles.progressOverview}>\r\n            <div className={styles.progressCircle}>\r\n              <div className={styles.progressValue}>\r\n                {Math.round(progress?.progressPercent || 0)}%\r\n              </div>\r\n            </div>\r\n            <div className={styles.progressText}>\r\n              <p>Course Progress</p>\r\n              <span>\r\n                {progress?.completedModules || 0} of{\" \"}\r\n                {course.modules?.length || 0} modules\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.content}>\r\n          {/* Module List */}\r\n          <div className={styles.modulesList}>\r\n            <h2 className={styles.sectionTitle}>Course Modules</h2>\r\n            <div className={styles.modules}>\r\n              {course.modules?.map((module: any, index: number) => (\r\n                <div\r\n                  key={module.id}\r\n                  className={`${styles.moduleItem} ${\r\n                    currentModule?.id === module.id ? styles.active : \"\"\r\n                  } ${\r\n                    progress?.completedModules?.includes(module.id)\r\n                      ? styles.completed\r\n                      : \"\"\r\n                  }`}\r\n                  onClick={() => handleModuleSelect(module)}\r\n                >\r\n                  <div className={styles.moduleNumber}>{index + 1}</div>\r\n                  <div className={styles.moduleContent}>\r\n                    <h3 className={styles.moduleTitle}>{module.title}</h3>\r\n                    <p className={styles.moduleDuration}>\r\n                      {module.duration\r\n                        ? `${module.duration} min`\r\n                        : \"Duration varies\"}\r\n                    </p>\r\n                  </div>\r\n                  <div className={styles.moduleStatus}>\r\n                    {progress?.completedModules?.includes(module.id)\r\n                      ? \"✓\"\r\n                      : \"○\"}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Video Player */}\r\n          <div className={styles.videoSection}>\r\n            {currentModule ? (\r\n              <>\r\n                <div className={styles.videoHeader}>\r\n                  <h2 className={styles.moduleTitle}>{currentModule.title}</h2>\r\n                  {currentModule.description && (\r\n                    <p className={styles.moduleDescription}>\r\n                      {currentModule.description}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n\r\n                {currentModule.videoUrl ? (\r\n                  <VideoPlayer\r\n                    src={currentModule.videoUrl}\r\n                    onProgress={(progress, watchTime) =>\r\n                      handleVideoProgress(currentModule.id, progress, watchTime)\r\n                    }\r\n                    startTime={\r\n                      progress?.moduleProgress?.[currentModule.id]\r\n                        ?.lastPosition || 0\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <div className={styles.noVideo}>\r\n                    <h3>Content Module</h3>\r\n                    <div className={styles.moduleContentText}>\r\n                      {currentModule.content ||\r\n                        \"No content available for this module.\"}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <div className={styles.selectModule}>\r\n                <h3>Select a Module</h3>\r\n                <p>Choose a module from the list to start learning.</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Certificate Section */}\r\n        {student?.certificateUrl && (\r\n          <div className={styles.certificateSection}>\r\n            <h2 className={styles.sectionTitle}>Your Certificate</h2>\r\n            <div className={`card ${styles.certificateCard}`}>\r\n              <div className={styles.certificateIcon}>🏆</div>\r\n              <div className={styles.certificateContent}>\r\n                <h3>Course Completion Certificate</h3>\r\n                <p>\r\n                  Congratulations! You have successfully completed this course.\r\n                </p>\r\n                <a\r\n                  href={student.certificateUrl}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  View Certificate\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </StudentLayout>\r\n  );\r\n}\r\n","size_bytes":7537},"src/app/student/login/page.tsx":{"content":"\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport styles from \"./StudentLogin.module.css\";\nimport { authService } from \"@/services/auth.service\";\n\nexport default function StudentLoginPage() {\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const router = useRouter();\n\n  const handleChange = (e: any) => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      const res = await authService.login(credentials);\n      \n      // Store auth data in both cookies and localStorage for compatibility\n      localStorage.setItem(\"authToken\", res.token);\n      localStorage.setItem(\"userRole\", res.user.role);\n      localStorage.setItem(\"student_session\", res.token);\n      \n      router.push(\"/student/dashboard\");\n    } catch (err: any) {\n      setError(err?.message || \"Login failed\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className={styles.loginPage}>\n      <div className={styles.loginContainer}>\n        <div className={styles.loginCard}>\n          <div className={styles.header}>\n            <h1 className={styles.title}>Student Portal</h1>\n            <p className={styles.subtitle}>\n              Access your courses and certificates\n            </p>\n          </div>\n\n          {error && <div className={styles.errorMessage}>{error}</div>}\n\n          <form onSubmit={handleSubmit} className={styles.form}>\n            <div className={styles.formGroup}>\n              <label htmlFor=\"email\">Email Address</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={credentials.email}\n                onChange={handleChange}\n                required\n                className=\"input\"\n                placeholder=\"your.email@example.com\"\n              />\n            </div>\n\n            <div className={styles.formGroup}>\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                value={credentials.password}\n                onChange={handleChange}\n                required\n                className=\"input\"\n                placeholder=\"Enter your password\"\n              />\n            </div>\n\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className={`btn btn-primary btn-lg ${styles.submitButton}`}\n            >\n              {isLoading ? \"Signing In...\" : \"Access Portal\"}\n            </button>\n          </form>\n\n          <div className={styles.forgotPassword}>\n            <button\n              type=\"button\"\n              onClick={() => {\n                const email = prompt(\"Enter your email address:\");\n                if (email) {\n                  // API call to send reset email\n                  fetch(\"/api/student/forgot-password\", {\n                    method: \"POST\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({ email }),\n                  }).then(() => {\n                    alert(\"Password reset instructions sent to your email!\");\n                  }).catch(() => {\n                    alert(\"Failed to send reset email. Please try again.\");\n                  });\n                }\n              }}\n              className={styles.forgotLink}\n            >\n              Forgot Password?\n            </button>\n          </div>\n\n          <div className={styles.footer}>\n            <p>\n              Need help?{\" \"}\n              <a href=\"/contact\" className={styles.helpLink}>\n                Contact Support\n              </a>\n            </p>\n            <p>\n              <a href=\"/\" className={styles.backLink}>\n                ← Back to Website\n              </a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":4192},"src/hooks/useAuth.ts":{"content":"import { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { authService } from '@/services/auth.service';\nimport type { User } from '@/services/auth.service';\n\nexport function useAuth() {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n  const router = useRouter();\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const token = document.cookie.split('; ').find(row => row.startsWith('authToken='))?.split('=')[1];\n        if (!token) {\n          setLoading(false);\n          return;\n        }\n\n        const currentUser = await authService.getCurrentUser();\n        setUser(currentUser);\n      } catch (error) {\n        // If there's an error, clear the auth state\n        localStorage.removeItem('authToken');\n        localStorage.removeItem('userRole');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    const { token, user } = await authService.login({ email, password });\n    \n    // Store auth data in both cookies and localStorage for compatibility\n    document.cookie = `authToken=${token}; path=/`;\n    document.cookie = `userRole=${user.role}; path=/`;\n    localStorage.setItem('authToken', token);\n    localStorage.setItem('userRole', user.role);\n    \n    // Store role-specific session tokens that dashboards expect\n    if (user.role === 'admin') {\n      localStorage.setItem('admin_session', token);\n    } else if (user.role === 'student') {\n      localStorage.setItem('student_session', token);\n    }\n    \n    setUser(user);\n    \n    // Redirect based on user role\n    if (user.role === 'admin') {\n      router.push('/admin/dashboard');\n    } else if (user.role === 'student') {\n      router.push('/student/dashboard');\n    }\n    return user;\n  };\n\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } finally {\n      // Clear cookies\n      document.cookie = 'authToken=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT';\n      document.cookie = 'userRole=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT';\n      \n      // Clear localStorage\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('admin_session');\n      localStorage.removeItem('student_session');\n      \n      setUser(null);\n      router.push('/login');\n    }\n  };\n\n  return {\n    user,\n    loading,\n    login,\n    logout,\n    isAuthenticated: !!user,\n    isAdmin: user?.role === 'admin',\n    isStudent: user?.role === 'student',\n  };\n}","size_bytes":2631},"src/app/student/certificate/Certificate.module.css":{"content":".certificatePage {\n    padding: var(--spacing-xl);\n    min-height: 100vh;\n}\n\n.loading {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 50vh;\n    font-size: var(--font-size-lg);\n    color: var(--color-text-secondary);\n}\n\n.header {\n    text-align: center;\n    margin-bottom: var(--spacing-3xl);\n}\n\n.title {\n    font-size: var(--font-size-3xl);\n    font-weight: 700;\n    margin-bottom: var(--spacing-md);\n    color: var(--color-text-primary);\n}\n\n.subtitle {\n    font-size: var(--font-size-lg);\n    color: var(--color-text-secondary);\n}\n\n.certificateContainer {\n    max-width: 800px;\n    margin: 0 auto;\n}\n\n.certificateCard {\n    background: var(--color-card-bg);\n    border: 1px solid var(--color-card-border);\n    border-radius: var(--radius-lg);\n    padding: var(--spacing-2xl);\n    text-align: center;\n}\n\n.certificatePreview {\n    background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%);\n    color: #000;\n    padding: var(--spacing-3xl);\n    border-radius: var(--radius-lg);\n    margin-bottom: var(--spacing-2xl);\n    border: 3px solid var(--color-text-primary);\n}\n\n.certificateHeader {\n    margin-bottom: var(--spacing-2xl);\n}\n\n.certificateHeader h2 {\n    font-size: var(--font-size-3xl);\n    font-weight: 700;\n    margin-bottom: var(--spacing-lg);\n    color: #000;\n}\n\n.logo {\n    font-size: var(--font-size-xl);\n    font-weight: 600;\n    color: #666;\n}\n\n.certificateBody {\n    margin-bottom: var(--spacing-2xl);\n}\n\n.certificateText {\n    font-size: var(--font-size-lg);\n    margin-bottom: var(--spacing-md);\n    color: #333;\n}\n\n.studentName {\n    font-size: var(--font-size-3xl);\n    font-weight: 700;\n    margin: var(--spacing-lg) 0;\n    color: #000;\n    text-decoration: underline;\n}\n\n.courseName {\n    font-size: var(--font-size-2xl);\n    font-weight: 600;\n    margin: var(--spacing-lg) 0;\n    color: #000;\n    font-style: italic;\n}\n\n.completionDate {\n    font-size: var(--font-size-base);\n    color: #666;\n    margin-top: var(--spacing-lg);\n}\n\n.certificateFooter {\n    margin-top: var(--spacing-2xl);\n}\n\n.signature {\n    text-align: right;\n    margin-right: var(--spacing-3xl);\n}\n\n.signatureLine {\n    width: 200px;\n    height: 2px;\n    background: #000;\n    margin: 0 0 var(--spacing-sm) auto;\n}\n\n.signature p {\n    font-size: var(--font-size-sm);\n    color: #666;\n}\n\n.certificateActions {\n    display: flex;\n    gap: var(--spacing-lg);\n    justify-content: center;\n}\n\n.progressCard {\n    background: var(--color-card-bg);\n    border: 1px solid var(--color-card-border);\n    border-radius: var(--radius-lg);\n    padding: var(--spacing-2xl);\n    text-align: center;\n}\n\n.progressHeader h2 {\n    font-size: var(--font-size-2xl);\n    margin-bottom: var(--spacing-md);\n    color: var(--color-text-primary);\n}\n\n.progressHeader p {\n    font-size: var(--font-size-lg);\n    color: var(--color-text-secondary);\n    margin-bottom: var(--spacing-2xl);\n}\n\n.progressDetails {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: var(--spacing-2xl);\n    margin-bottom: var(--spacing-2xl);\n}\n\n.progressCircle {\n    position: relative;\n}\n\n.progressRing {\n    width: 120px;\n    height: 120px;\n    border-radius: var(--radius-full);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n}\n\n.progressInner {\n    width: 90px;\n    height: 90px;\n    background: var(--color-card-bg);\n    border-radius: var(--radius-full);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.progressPercent {\n    font-size: var(--font-size-xl);\n    font-weight: 700;\n    color: var(--color-text-primary);\n}\n\n.progressInfo {\n    text-align: left;\n}\n\n.progressInfo h3 {\n    font-size: var(--font-size-xl);\n    margin-bottom: var(--spacing-md);\n    color: var(--color-text-primary);\n}\n\n.progressInfo p {\n    font-size: var(--font-size-base);\n    color: var(--color-text-secondary);\n    margin-bottom: var(--spacing-sm);\n}\n\n.remainingModules p {\n    color: var(--color-text-muted);\n    font-size: var(--font-size-sm);\n}\n\n.encouragement {\n    padding: var(--spacing-xl);\n    background: var(--color-tertiary-bg);\n    border-radius: var(--radius-lg);\n    margin-top: var(--spacing-xl);\n}\n\n.encouragement p {\n    font-size: var(--font-size-lg);\n    margin-bottom: var(--spacing-lg);\n    color: var(--color-text-secondary);\n}\n\n@media (max-width: 768px) {\n    .certificatePage {\n        padding: var(--spacing-md);\n    }\n\n    .certificatePreview {\n        padding: var(--spacing-xl);\n    }\n\n    .certificateActions {\n        flex-direction: column;\n    }\n\n    .progressDetails {\n        flex-direction: column;\n        gap: var(--spacing-lg);\n    }\n\n    .progressInfo {\n        text-align: center;\n    }\n}\n\n@media print {\n\n    .certificateActions,\n    .header,\n    .encouragement {\n        display: none;\n    }\n\n    .certificatePreview {\n        box-shadow: none;\n        border: 2px solid #000;\n    }\n}","size_bytes":4907},"src/components/navigation/FlowingMenu.tsx":{"content":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { gsap } from \"gsap\";\r\nimport \"./FlowingMenu.css\";\r\n\r\ninterface FlowingMenuProps {\r\n  items?: Array<{\r\n    link: string;\r\n    text: string;\r\n    image: string;\r\n  }>;\r\n}\r\n\r\ninterface MenuItemProps {\r\n  link: string;\r\n  text: string;\r\n  image: string;\r\n}\r\n\r\nfunction FlowingMenu({ items = [] }: FlowingMenuProps) {\r\n  return (\r\n    <div className=\"menu-wrap\">\r\n      <nav className=\"menu\">\r\n        {items.map((item, idx) => (\r\n          <MenuItem key={idx} {...item} />\r\n        ))}\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MenuItem({ link, text, image }: MenuItemProps) {\r\n  const itemRef = React.useRef<HTMLDivElement>(null);\r\n  const marqueeRef = React.useRef<HTMLDivElement>(null);\r\n  const marqueeInnerRef = React.useRef<HTMLDivElement>(null);\r\n\r\n  const animationDefaults = { duration: 0.6, ease: \"expo\" };\r\n\r\n  const findClosestEdge = (\r\n    mouseX: number,\r\n    mouseY: number,\r\n    width: number,\r\n    height: number\r\n  ) => {\r\n    const topEdgeDist = distMetric(mouseX, mouseY, width / 2, 0);\r\n    const bottomEdgeDist = distMetric(mouseX, mouseY, width / 2, height);\r\n    return topEdgeDist < bottomEdgeDist ? \"top\" : \"bottom\";\r\n  };\r\n\r\n  const distMetric = (x: number, y: number, x2: number, y2: number) => {\r\n    const xDiff = x - x2;\r\n    const yDiff = y - y2;\r\n    return xDiff * xDiff + yDiff * yDiff;\r\n  };\r\n\r\n  const handleMouseEnter = (ev: React.MouseEvent) => {\r\n    if (!itemRef.current || !marqueeRef.current || !marqueeInnerRef.current)\r\n      return;\r\n    const rect = itemRef.current.getBoundingClientRect();\r\n    const x = ev.clientX - rect.left;\r\n    const y = ev.clientY - rect.top;\r\n    const edge = findClosestEdge(x, y, rect.width, rect.height);\r\n\r\n    gsap\r\n      .timeline({ defaults: animationDefaults })\r\n      .set(marqueeRef.current, { y: edge === \"top\" ? \"-101%\" : \"101%\" }, 0)\r\n      .set(marqueeInnerRef.current, { y: edge === \"top\" ? \"101%\" : \"-101%\" }, 0)\r\n      .to([marqueeRef.current, marqueeInnerRef.current], { y: \"0%\" }, 0);\r\n  };\r\n\r\n  const handleMouseLeave = (ev: React.MouseEvent) => {\r\n    if (!itemRef.current || !marqueeRef.current || !marqueeInnerRef.current)\r\n      return;\r\n    const rect = itemRef.current.getBoundingClientRect();\r\n    const x = ev.clientX - rect.left;\r\n    const y = ev.clientY - rect.top;\r\n    const edge = findClosestEdge(x, y, rect.width, rect.height);\r\n\r\n    gsap\r\n      .timeline({ defaults: animationDefaults })\r\n      .to(marqueeRef.current, { y: edge === \"top\" ? \"-101%\" : \"101%\" }, 0)\r\n      .to(marqueeInnerRef.current, { y: edge === \"top\" ? \"101%\" : \"-101%\" }, 0);\r\n  };\r\n\r\n  const repeatedMarqueeContent = Array.from({ length: 4 }).map((_, idx) => (\r\n    <React.Fragment key={idx}>\r\n      <span>{text}</span>\r\n      <div\r\n        className=\"marquee__img\"\r\n        style={{ backgroundImage: `url(${image})` }}\r\n      />\r\n    </React.Fragment>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"menu__item\" ref={itemRef}>\r\n      <a\r\n        className=\"menu__item-link\"\r\n        href={link}\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n      >\r\n        {text}\r\n      </a>\r\n      <div className=\"marquee\" ref={marqueeRef}>\r\n        <div className=\"marquee__inner-wrap\" ref={marqueeInnerRef}>\r\n          <div className=\"marquee__inner\" aria-hidden=\"true\">\r\n            {repeatedMarqueeContent}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FlowingMenu;\r\n","size_bytes":3465},"src/app/student/profile/page.tsx":{"content":"\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport StudentLayout from \"../../../components/layout/StudentLayout\";\r\nimport styles from \"./Profile.module.css\";\r\n\r\ninterface StudentProfile {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  course: string;\r\n  enrollmentDate: string;\r\n  progress: number;\r\n  status: \"active\" | \"completed\" | \"paused\";\r\n  certificateUrl?: string;\r\n}\r\n\r\nexport default function StudentProfile() {\r\n  const [profile, setProfile] = useState<StudentProfile | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [showPasswordReset, setShowPasswordReset] = useState(false);\r\n  const [passwordData, setPasswordData] = useState({\r\n    currentPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const studentSession = localStorage.getItem(\"student_session\");\r\n    if (!studentSession) {\r\n      router.push(\"/student/login\");\r\n      return;\r\n    }\r\n    fetchProfile();\r\n  }, []);\r\n\r\n  const fetchProfile = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/student/profile\");\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setProfile(data.profile);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch profile:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordReset = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (passwordData.newPassword !== passwordData.confirmPassword) {\r\n      alert(\"New passwords don't match!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"/api/student/change-password\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          currentPassword: passwordData.currentPassword,\r\n          newPassword: passwordData.newPassword,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setShowPasswordReset(false);\r\n        setPasswordData({\r\n          currentPassword: \"\",\r\n          newPassword: \"\",\r\n          confirmPassword: \"\",\r\n        });\r\n        alert(\"Password changed successfully!\");\r\n      } else {\r\n        const data = await response.json();\r\n        alert(data.error || \"Failed to change password\");\r\n      }\r\n    } catch (error) {\r\n      alert(\"Error changing password\");\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <StudentLayout>\r\n        <div className={styles.loading}>Loading profile...</div>\r\n      </StudentLayout>\r\n    );\r\n  }\r\n\r\n  if (!profile) {\r\n    return (\r\n      <StudentLayout>\r\n        <div className={styles.error}>Failed to load profile</div>\r\n      </StudentLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <StudentLayout>\r\n      <div className={styles.profilePage}>\r\n        <div className={styles.header}>\r\n          <h1 className={styles.title}>My Profile</h1>\r\n          <button\r\n            onClick={() => setShowPasswordReset(true)}\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            Change Password\r\n          </button>\r\n        </div>\r\n\r\n        <div className={styles.profileContent}>\r\n          {/* Profile Information */}\r\n          <div className={`card ${styles.profileCard}`}>\r\n            <div className={styles.profileHeader}>\r\n              <div className={styles.avatar}>\r\n                {profile.name.charAt(0).toUpperCase()}\r\n              </div>\r\n              <div className={styles.profileInfo}>\r\n                <h2 className={styles.profileName}>{profile.name}</h2>\r\n                <p className={styles.profileEmail}>{profile.email}</p>\r\n                <span className={`${styles.status} ${styles[profile.status]}`}>\r\n                  {profile.status.charAt(0).toUpperCase() +\r\n                    profile.status.slice(1)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Course Information */}\r\n          <div className={`card ${styles.courseCard}`}>\r\n            <h3 className={styles.sectionTitle}>Course Details</h3>\r\n            <div className={styles.courseInfo}>\r\n              <div className={styles.infoItem}>\r\n                <span className={styles.infoLabel}>Enrolled Course:</span>\r\n                <span className={styles.infoValue}>{profile.course}</span>\r\n              </div>\r\n              <div className={styles.infoItem}>\r\n                <span className={styles.infoLabel}>Enrollment Date:</span>\r\n                <span className={styles.infoValue}>\r\n                  {new Date(profile.enrollmentDate).toLocaleDateString()}\r\n                </span>\r\n              </div>\r\n              <div className={styles.infoItem}>\r\n                <span className={styles.infoLabel}>Progress:</span>\r\n                <div className={styles.progressContainer}>\r\n                  <div className={styles.progressBar}>\r\n                    <div\r\n                      className={styles.progressFill}\r\n                      style={{ width: `${profile.progress}%` }}\r\n                    ></div>\r\n                  </div>\r\n                  <span className={styles.progressText}>\r\n                    {profile.progress}%\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Certificate Status */}\r\n          <div className={`card ${styles.certificateCard}`}>\r\n            <h3 className={styles.sectionTitle}>Certificate Status</h3>\r\n            <div className={styles.certificateInfo}>\r\n              {profile.certificateUrl ? (\r\n                <div className={styles.certificateAvailable}>\r\n                  <div className={styles.certificateIcon}>🏆</div>\r\n                  <div>\r\n                    <p className={styles.certificateText}>\r\n                      Congratulations! Your certificate is ready.\r\n                    </p>\r\n                    <a\r\n                      href={profile.certificateUrl}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      className=\"btn btn-primary\"\r\n                    >\r\n                      Download Certificate\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className={styles.certificateNotAvailable}>\r\n                  <div className={styles.certificateIcon}>📋</div>\r\n                  <div>\r\n                    <p className={styles.certificateText}>\r\n                      Certificate not yet available.\r\n                    </p>\r\n                    <p className={styles.certificateSubtext}>\r\n                      Complete your course to receive your certificate.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Password Reset Modal */}\r\n        {showPasswordReset && (\r\n          <div className={styles.modal}>\r\n            <div className={styles.modalContent}>\r\n              <div className={styles.modalHeader}>\r\n                <h2>Change Password</h2>\r\n                <button\r\n                  onClick={() => {\r\n                    setShowPasswordReset(false);\r\n                    setPasswordData({\r\n                      currentPassword: \"\",\r\n                      newPassword: \"\",\r\n                      confirmPassword: \"\",\r\n                    });\r\n                  }}\r\n                  className={styles.closeBtn}\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n\r\n              <form onSubmit={handlePasswordReset} className={styles.form}>\r\n                <div className={styles.formGroup}>\r\n                  <label>Current Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    value={passwordData.currentPassword}\r\n                    onChange={(e) =>\r\n                      setPasswordData({\r\n                        ...passwordData,\r\n                        currentPassword: e.target.value,\r\n                      })\r\n                    }\r\n                    required\r\n                    className=\"input\"\r\n                    placeholder=\"Enter current password\"\r\n                  />\r\n                </div>\r\n\r\n                <div className={styles.formGroup}>\r\n                  <label>New Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    value={passwordData.newPassword}\r\n                    onChange={(e) =>\r\n                      setPasswordData({\r\n                        ...passwordData,\r\n                        newPassword: e.target.value,\r\n                      })\r\n                    }\r\n                    required\r\n                    className=\"input\"\r\n                    placeholder=\"Enter new password\"\r\n                    minLength={6}\r\n                  />\r\n                </div>\r\n\r\n                <div className={styles.formGroup}>\r\n                  <label>Confirm New Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    value={passwordData.confirmPassword}\r\n                    onChange={(e) =>\r\n                      setPasswordData({\r\n                        ...passwordData,\r\n                        confirmPassword: e.target.value,\r\n                      })\r\n                    }\r\n                    required\r\n                    className=\"input\"\r\n                    placeholder=\"Confirm new password\"\r\n                    minLength={6}\r\n                  />\r\n                </div>\r\n\r\n                <div className={styles.formActions}>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      setShowPasswordReset(false);\r\n                      setPasswordData({\r\n                        currentPassword: \"\",\r\n                        newPassword: \"\",\r\n                        confirmPassword: \"\",\r\n                      });\r\n                    }}\r\n                    className=\"btn btn-secondary\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Change Password\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </StudentLayout>\r\n  );\r\n}\r\n","size_bytes":10442},"src/app/contact/Contact.module.css":{"content":".contactPage {\r\n    padding-top: 100px;\r\n    min-height: 100vh;\r\n}\r\n\r\n.hero {\r\n    text-align: center;\r\n    margin-bottom: var(--spacing-3xl);\r\n    padding: var(--spacing-3xl) 0;\r\n}\r\n\r\n.pageTitle {\r\n    font-size: var(--font-size-5xl);\r\n    font-weight: 700;\r\n    color: var(--color-text-primary);\r\n    margin-bottom: var(--spacing-lg);\r\n}\r\n\r\n.pageSubtitle {\r\n    font-size: var(--font-size-xl);\r\n    color: var(--color-text-secondary);\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n}\r\n\r\n.contactContainer {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-3xl);\r\n    margin-bottom: var(--spacing-3xl);\r\n}\r\n\r\n.sectionTitle {\r\n    font-size: var(--font-size-2xl);\r\n    font-weight: 700;\r\n    color: var(--color-text-primary);\r\n    margin-bottom: var(--spacing-xl);\r\n}\r\n\r\n/* Contact Info Styles */\r\n.contactInfo {\r\n    padding: var(--spacing-xl);\r\n}\r\n\r\n.infoCard {\r\n    background-color: var(--color-tertiary-bg);\r\n    border: 1px solid var(--color-border);\r\n    border-radius: var(--radius-lg);\r\n    padding: var(--spacing-xl);\r\n    margin-bottom: var(--spacing-xl);\r\n}\r\n\r\n.infoItem {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    gap: var(--spacing-lg);\r\n    margin-bottom: var(--spacing-xl);\r\n}\r\n\r\n.infoItem:last-child {\r\n    margin-bottom: 0;\r\n}\r\n\r\n.infoIcon {\r\n    font-size: var(--font-size-2xl);\r\n    flex-shrink: 0;\r\n    margin-top: var(--spacing-xs);\r\n}\r\n\r\n.infoContent h3 {\r\n    font-size: var(--font-size-lg);\r\n    font-weight: 600;\r\n    color: var(--color-text-primary);\r\n    margin-bottom: var(--spacing-xs);\r\n}\r\n\r\n.infoContent p {\r\n    color: var(--color-text-secondary);\r\n    line-height: 1.6;\r\n}\r\n\r\n.emergencyContact {\r\n    background-color: var(--color-secondary-bg);\r\n    border: 1px solid var(--color-border);\r\n    border-radius: var(--radius-lg);\r\n    padding: var(--spacing-lg);\r\n}\r\n\r\n.emergencyContact h3 {\r\n    font-size: var(--font-size-lg);\r\n    font-weight: 600;\r\n    color: var(--color-text-primary);\r\n    margin-bottom: var(--spacing-sm);\r\n}\r\n\r\n.emergencyContact p {\r\n    color: var(--color-text-secondary);\r\n    line-height: 1.6;\r\n}\r\n\r\n.emergencyContact strong {\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n/* Contact Form Styles */\r\n.contactForm {\r\n    background-color: var(--color-tertiary-bg);\r\n    border: 1px solid var(--color-border);\r\n    border-radius: var(--radius-lg);\r\n    padding: var(--spacing-xl);\r\n}\r\n\r\n.successMessage {\r\n    background-color: rgba(76, 175, 80, 0.1);\r\n    border: 1px solid rgba(76, 175, 80, 0.3);\r\n    border-radius: var(--radius-md);\r\n    padding: var(--spacing-lg);\r\n    margin-bottom: var(--spacing-xl);\r\n}\r\n\r\n.successMessage p {\r\n    color: #4CAF50;\r\n    margin: 0;\r\n}\r\n\r\n.form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: var(--spacing-lg);\r\n}\r\n\r\n.formGroup {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: var(--spacing-sm);\r\n}\r\n\r\n.formGroup label {\r\n    font-weight: 600;\r\n    color: var(--color-text-primary);\r\n    font-size: var(--font-size-sm);\r\n}\r\n\r\n.formGroup input,\r\n.formGroup select,\r\n.formGroup textarea {\r\n    resize: vertical;\r\n}\r\n\r\n.submitButton {\r\n    width: 100%;\r\n    margin-top: var(--spacing-md);\r\n}\r\n\r\n.submitButton:disabled {\r\n    opacity: 0.6;\r\n    cursor: not-allowed;\r\n}\r\n\r\n/* FAQ Styles */\r\n.faqSection {\r\n    padding: var(--spacing-3xl) 0;\r\n    border-top: 1px solid var(--color-border);\r\n}\r\n\r\n.faqGrid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\r\n    gap: var(--spacing-xl);\r\n}\r\n\r\n.faqItem {\r\n    background-color: var(--color-tertiary-bg);\r\n    border: 1px solid var(--color-border);\r\n    border-radius: var(--radius-lg);\r\n    padding: var(--spacing-lg);\r\n    transition: all var(--transition-normal);\r\n}\r\n\r\n.faqItem:hover {\r\n    border-color: var(--color-border-hover);\r\n    transform: translateY(-2px);\r\n}\r\n\r\n.faqItem h3 {\r\n    font-size: var(--font-size-lg);\r\n    font-weight: 600;\r\n    color: var(--color-text-primary);\r\n    margin-bottom: var(--spacing-sm);\r\n}\r\n\r\n.faqItem p {\r\n    color: var(--color-text-secondary);\r\n    line-height: 1.6;\r\n}\r\n\r\n/* Mobile Responsive */\r\n@media (max-width: 768px) {\r\n    .contactContainer {\r\n        grid-template-columns: 1fr;\r\n        gap: var(--spacing-2xl);\r\n    }\r\n\r\n    .pageTitle {\r\n        font-size: var(--font-size-4xl);\r\n    }\r\n\r\n    .contactInfo,\r\n    .contactForm {\r\n        padding: var(--spacing-lg);\r\n    }\r\n\r\n    .infoItem {\r\n        flex-direction: column;\r\n        text-align: center;\r\n        gap: var(--spacing-md);\r\n    }\r\n\r\n    .faqGrid {\r\n        grid-template-columns: 1fr;\r\n    }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n    .contactPage {\r\n        padding-top: 80px;\r\n    }\r\n\r\n    .hero {\r\n        padding: var(--spacing-2xl) 0;\r\n    }\r\n\r\n    .infoCard,\r\n    .emergencyContact,\r\n    .contactForm {\r\n        padding: var(--spacing-md);\r\n    }\r\n}","size_bytes":4811},"src/components/sections/Services.tsx":{"content":"\"use client\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport { useSmoothScroll } from \"../../hooks/useSmoothScroll\";\nimport { servicesService, type Service } from \"../../services/services.service\";\nimport { settingsService } from \"../../services/settings.service\";\nimport styles from \"./Services.module.css\";\n\n// Register GSAP plugins\nif (typeof window !== \"undefined\") {\n  gsap.registerPlugin(ScrollTrigger);\n}\n\ninterface ServiceCategory {\n  id: string;\n  title: string;\n  subtitle: string;\n  description: string;\n  services: Service[];\n}\n\nexport default function Services() {\n  const { scrollTo } = useSmoothScroll();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const sectionsRef = useRef<HTMLDivElement[]>([]);\n  const navRef = useRef<HTMLDivElement>(null);\n  const [isNavCompact, setIsNavCompact] = useState(false);\n  const [activeSlides, setActiveSlides] = useState<{ [key: string]: number }>(\n    {}\n  );\n  const [serviceCategories, setServiceCategories] = useState<ServiceCategory[]>(\n    []\n  );\n  const [loading, setLoading] = useState(true);\n  const [showPrices, setShowPrices] = useState(true);\n\n  // Category mapping for display information\n  const categoryDisplayInfo: {\n    [key: string]: { title: string; subtitle: string; description: string };\n  } = {\n    HAIR: {\n      title: \"Hair Services\",\n      subtitle: \"Transform Your Hair\",\n      description: \"Professional hair styling and treatments\",\n    },\n    SKIN: {\n      title: \"Skin Care\",\n      subtitle: \"Rejuvenate Your Skin\",\n      description: \"Luxurious facial treatments and skin care\",\n    },\n    MAKEUP: {\n      title: \"Makeup Services\",\n      subtitle: \"Complete Your Look\",\n      description: \"Professional makeup for any occasion\",\n    },\n    NAILS: {\n      title: \"Nail Services\",\n      subtitle: \"Perfect Your Nails\",\n      description: \"Professional nail care and artistic designs\",\n    },\n    MASSAGE: {\n      title: \"Massage Therapy\",\n      subtitle: \"Relax & Rejuvenate\",\n      description: \"Therapeutic massage treatments for wellness\",\n    },\n    SPA: {\n      title: \"Spa Treatments\",\n      subtitle: \"Ultimate Relaxation\",\n      description: \"Luxurious spa experiences and treatments\",\n    },\n    BROWS: {\n      title: \"Brow Services\",\n      subtitle: \"Frame Your Face\",\n      description: \"Expert brow shaping and enhancement\",\n    },\n    WAXING: {\n      title: \"Waxing Services\",\n      subtitle: \"Smooth & Silky\",\n      description: \"Professional hair removal services\",\n    },\n    TANNING: {\n      title: \"Tanning Services\",\n      subtitle: \"Golden Glow\",\n      description: \"Safe and natural-looking tanning solutions\",\n    },\n  };\n\n  // Fetch services data and settings on component mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n\n        // Fetch both services and settings\n        const [featuredServices, settings] = await Promise.all([\n          servicesService.getFeaturedServicesByCategory(3),\n          settingsService.getSettings(),\n        ]);\n\n        setShowPrices(settings.showPrices);\n\n        const categories: ServiceCategory[] = Object.keys(featuredServices)\n          .slice(0, 4) // Limit to only 4 categories\n          .map((categoryKey) => {\n            const displayInfo = categoryDisplayInfo[categoryKey] || {\n              title: categoryKey.charAt(0) + categoryKey.slice(1).toLowerCase(),\n              subtitle: `${\n                categoryKey.charAt(0) + categoryKey.slice(1).toLowerCase()\n              } Services`,\n              description: `Professional ${categoryKey.toLowerCase()} services`,\n            };\n\n            return {\n              id: categoryKey.toLowerCase() + \"-services\",\n              title: displayInfo.title,\n              subtitle: displayInfo.subtitle,\n              description: displayInfo.description,\n              services: featuredServices[categoryKey],\n            };\n          });\n\n        setServiceCategories(categories);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (sectionsRef.current.length === 0) return;\n\n    // Handle navigation scroll state\n    const handleScroll = () => {\n      if (navRef.current) {\n        const scrollY = window.scrollY;\n        const navTop = navRef.current.offsetTop;\n        setIsNavCompact(scrollY > navTop + 100);\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    // Set up GSAP animations for each section\n    sectionsRef.current.forEach((section, index) => {\n      if (!section) return;\n\n      // Animate section entrance\n      gsap.fromTo(\n        section.querySelector(`.${styles.categoryHeader}`),\n        { opacity: 0, y: 100 },\n        {\n          opacity: 1,\n          y: 0,\n          duration: 1,\n          ease: \"power3.out\",\n          scrollTrigger: {\n            trigger: section,\n            start: \"top 80%\",\n            end: \"bottom 20%\",\n            toggleActions: \"play none none reverse\",\n          },\n        }\n      );\n\n      // Animate service cards\n      const serviceCards = section.querySelectorAll(`.${styles.serviceCard}`);\n      gsap.fromTo(\n        serviceCards,\n        { opacity: 0, y: 50 },\n        {\n          opacity: 1,\n          y: 0,\n          duration: 0.8,\n          stagger: 0.2,\n          ease: \"power2.out\",\n          scrollTrigger: {\n            trigger: section,\n            start: \"top 60%\",\n            end: \"bottom 20%\",\n            toggleActions: \"play none none reverse\",\n          },\n        }\n      );\n    });\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n      ScrollTrigger.getAll().forEach((trigger) => trigger.kill());\n    };\n  }, []);\n\n  // Carousel functionality useEffect\n  useEffect(() => {\n    // Initialize active slides\n    const initialActiveSlides: { [key: string]: number } = {};\n    serviceCategories.forEach((category) => {\n      initialActiveSlides[category.id] = 0;\n    });\n    setActiveSlides(initialActiveSlides);\n\n    // Add scroll listeners for each carousel\n    const handleCarouselScroll = (categoryId: string) => {\n      const container = document.getElementById(`services-${categoryId}`);\n      if (!container) return;\n\n      const scrollLeft = container.scrollLeft;\n      const cardWidth =\n        container.children[0]?.getBoundingClientRect().width || 0;\n\n      // Dynamic gap based on screen width\n      let gap = 30; // Default for >1024px\n      if (window.innerWidth <= 320) gap = 15;\n      else if (window.innerWidth <= 480) gap = 20;\n      else if (window.innerWidth <= 768) gap = 25;\n      else if (window.innerWidth <= 1024) gap = 30;\n\n      const activeIndex = Math.round(scrollLeft / (cardWidth + gap));\n\n      setActiveSlides((prev) => ({\n        ...prev,\n        [categoryId]: Math.max(\n          0,\n          Math.min(activeIndex, container.children.length - 1)\n        ),\n      }));\n    };\n\n    const scrollListeners: Array<() => void> = [];\n\n    // Set up scroll listeners with a delay to ensure DOM is ready\n    const setupListeners = () => {\n      serviceCategories.forEach((category) => {\n        const container = document.getElementById(`services-${category.id}`);\n        if (container) {\n          const listener = () => handleCarouselScroll(category.id);\n          container.addEventListener(\"scroll\", listener, { passive: true });\n          scrollListeners.push(() =>\n            container.removeEventListener(\"scroll\", listener)\n          );\n        }\n      });\n    };\n\n    // Setup listeners after a short delay to ensure DOM is ready\n    const timeoutId = setTimeout(setupListeners, 100);\n\n    return () => {\n      clearTimeout(timeoutId);\n      scrollListeners.forEach((cleanup) => cleanup());\n    };\n  }, []);\n\n  const addToRefs = (el: HTMLDivElement | null) => {\n    if (el && !sectionsRef.current.includes(el)) {\n      sectionsRef.current.push(el);\n    }\n  };\n\n  const scrollToCategory = (categoryId: string) => {\n    scrollTo(`#${categoryId}`, { duration: 1.5 });\n  };\n\n  if (loading) {\n    return (\n      <section id=\"services\" className={styles.servicesWrapper}>\n        <div className={styles.loadingContainer}>\n          <div className={styles.loader}>Loading Services...</div>\n        </div>\n      </section>\n    );\n  }\n\n  if (serviceCategories.length === 0) {\n    return (\n      <section id=\"services\" className={styles.servicesWrapper}>\n        <div className={styles.errorContainer}>\n          <p>No services available at the moment.</p>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section\n      id=\"services\"\n      className={styles.servicesWrapper}\n      ref={containerRef}\n    >\n      {/* Full-screen service category sections */}\n      {serviceCategories.map((category, index) => (\n        <div\n          key={category.id}\n          id={category.id}\n          ref={addToRefs}\n          className={styles.categorySection}\n        >\n          <div className={styles.categoryContainer}>\n            <div className={styles.categoryHeader}>\n              <h2 className={styles.categoryTitle}>{category.title}</h2>\n              <h3 className={styles.categorySubtitle}>{category.subtitle}</h3>\n              <p className={styles.categoryDescription}>\n                {category.description}\n              </p>\n            </div>\n\n            <div className={styles.servicesContainer}>\n              <div\n                className={styles.servicesGrid}\n                id={`services-${category.id}`}\n              >\n                {category.services.map((service, serviceIndex) => (\n                  <div key={service.id} className={styles.serviceCard}>\n                    <div className={styles.serviceImageContainer}>\n                      <img\n                        src={service.image}\n                        alt={service.title}\n                        className={styles.serviceImage}\n                      />\n                      <div className={styles.serviceOverlay}>\n                        <button\n                          className={styles.serviceOverlayButton}\n                          onClick={() => (window.location.href = \"/services\")}\n                        >\n                          Book Now\n                        </button>\n                      </div>\n                    </div>\n                    <div className={styles.serviceContent}>\n                      <h4 className={styles.serviceTitle}>{service.title}</h4>\n                      <p className={styles.serviceDescription}>\n                        {service.description}\n                      </p>\n\n                      <div className={styles.serviceDetails}>\n                        <div className={styles.serviceMeta}>\n                          <span className={styles.duration}>\n                            ⏱ {service.duration}\n                          </span>\n                          {showPrices ? (\n                            <span className={styles.price}>\n                              ${service.price}\n                            </span>\n                          ) : (\n                            <span className={styles.contactPrice}>\n                              Contact for pricing\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {/* Slider Navigation Dots - Only show on mobile */}\n              <div className={styles.sliderNavigation}>\n                {category.services.map((_, dotIndex) => (\n                  <button\n                    key={dotIndex}\n                    className={`${styles.sliderDot} ${\n                      activeSlides[category.id] === dotIndex\n                        ? styles.active\n                        : \"\"\n                    }`}\n                    onClick={() => {\n                      const container = document.getElementById(\n                        `services-${category.id}`\n                      );\n                      const cardWidth =\n                        container?.children[0]?.getBoundingClientRect().width ||\n                        0;\n\n                      // Dynamic gap based on screen width\n                      let gap = 30; // Default for >1024px\n                      if (window.innerWidth <= 320) gap = 15;\n                      else if (window.innerWidth <= 480) gap = 20;\n                      else if (window.innerWidth <= 768) gap = 25;\n                      else if (window.innerWidth <= 1024) gap = 30;\n\n                      container?.scrollTo({\n                        left: dotIndex * (cardWidth + gap),\n                        behavior: \"smooth\",\n                      });\n                      setActiveSlides((prev) => ({\n                        ...prev,\n                        [category.id]: dotIndex,\n                      }));\n                    }}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n\n      {/* Final CTA section */}\n      <div className={styles.ctaSection}>\n        <div className={styles.ctaContainer}>\n          <h3 className={styles.ctaTitle}>Ready to Transform Your Look?</h3>\n          <p className={styles.ctaDescription}>\n            Book your appointment today and experience our premium services\n          </p>\n          <button\n            className={styles.ctaButton}\n            onClick={() => scrollTo(\"#book-now\", { duration: 2 })}\n          >\n            Book Your Appointment\n          </button>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":13711},"src/app/student/dashboard/Dashboard.module.css":{"content":".dashboard {\n    min-height: 100vh;\n    padding: var(--spacing-xl);\n}\n\n.loading {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 50vh;\n    font-size: var(--font-size-lg);\n    color: var(--color-text-secondary);\n}\n\n.noCourse {\n    text-align: center;\n    padding: var(--spacing-3xl);\n}\n\n.noCourse h2 {\n    font-size: var(--font-size-3xl);\n    margin-bottom: var(--spacing-lg);\n    color: var(--color-text-primary);\n}\n\n.noCourse p {\n    font-size: var(--font-size-lg);\n    color: var(--color-text-secondary);\n}\n\n/* Course Header */\n.courseHeader {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    margin-bottom: var(--spacing-3xl);\n    padding: var(--spacing-xl);\n    background: var(--color-card-bg);\n    border-radius: var(--radius-lg);\n    border: 1px solid var(--color-card-border);\n}\n\n.courseInfo {\n    flex: 1;\n}\n\n.courseTitle {\n    font-size: var(--font-size-3xl);\n    font-weight: 700;\n    margin-bottom: var(--spacing-md);\n    color: var(--color-text-primary);\n}\n\n.courseDescription {\n    font-size: var(--font-size-lg);\n    color: var(--color-text-secondary);\n    line-height: 1.6;\n}\n\n.progressOverview {\n    display: flex;\n    align-items: center;\n    gap: var(--spacing-lg);\n}\n\n.progressCircle {\n    width: 80px;\n    height: 80px;\n    border-radius: var(--radius-full);\n    background: conic-gradient(var(--color-text-primary) calc(var(--progress, 0) * 1%), var(--color-border) 0);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n}\n\n.progressCircle::before {\n    content: '';\n    width: 60px;\n    height: 60px;\n    background: var(--color-card-bg);\n    border-radius: var(--radius-full);\n    position: absolute;\n}\n\n.progressValue {\n    font-size: var(--font-size-lg);\n    font-weight: 700;\n    color: var(--color-text-primary);\n    z-index: 1;\n}\n\n.progressText p {\n    font-size: var(--font-size-sm);\n    color: var(--color-text-muted);\n    margin-bottom: var(--spacing-xs);\n}\n\n.progressText span {\n    font-size: var(--font-size-base);\n    color: var(--color-text-secondary);\n}\n\n/* Content Layout */\n.content {\n    display: grid;\n    grid-template-columns: 350px 1fr;\n    gap: var(--spacing-2xl);\n}\n\n/* Modules List */\n.modulesList {\n    background: var(--color-card-bg);\n    border-radius: var(--radius-lg);\n    border: 1px solid var(--color-card-border);\n    padding: var(--spacing-xl);\n    height: fit-content;\n}\n\n.sectionTitle {\n    font-size: var(--font-size-xl);\n    font-weight: 600;\n    margin-bottom: var(--spacing-lg);\n    color: var(--color-text-primary);\n}\n\n.modules {\n    display: flex;\n    flex-direction: column;\n    gap: var(--spacing-sm);\n}\n\n.moduleItem {\n    display: flex;\n    align-items: center;\n    gap: var(--spacing-md);\n    padding: var(--spacing-md);\n    border-radius: var(--radius-md);\n    cursor: pointer;\n    transition: all var(--transition-normal);\n    border: 2px solid transparent;\n}\n\n.moduleItem:hover {\n    background: var(--color-tertiary-bg);\n    border-color: var(--color-border-hover);\n}\n\n.moduleItem.active {\n    background: var(--color-tertiary-bg);\n    border-color: var(--color-text-primary);\n}\n\n.moduleItem.completed {\n    opacity: 0.7;\n}\n\n.moduleNumber {\n    width: 32px;\n    height: 32px;\n    border-radius: var(--radius-full);\n    background: var(--color-border);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: 600;\n    font-size: var(--font-size-sm);\n    color: var(--color-text-primary);\n    flex-shrink: 0;\n}\n\n.moduleItem.active .moduleNumber {\n    background: var(--color-text-primary);\n    color: var(--color-primary-bg);\n}\n\n.moduleContent {\n    flex: 1;\n}\n\n.moduleTitle {\n    font-size: var(--font-size-base);\n    font-weight: 500;\n    margin-bottom: var(--spacing-xs);\n    color: var(--color-text-primary);\n}\n\n.moduleDuration {\n    font-size: var(--font-size-sm);\n    color: var(--color-text-muted);\n}\n\n.moduleStatus {\n    font-size: var(--font-size-lg);\n    color: var(--color-text-secondary);\n}\n\n.moduleItem.completed .moduleStatus {\n    color: #10b981;\n}\n\n/* Video Section */\n.videoSection {\n    background: var(--color-card-bg);\n    border-radius: var(--radius-lg);\n    border: 1px solid var(--color-card-border);\n    padding: var(--spacing-xl);\n}\n\n.videoHeader {\n    margin-bottom: var(--spacing-xl);\n}\n\n.videoHeader .moduleTitle {\n    font-size: var(--font-size-2xl);\n    font-weight: 600;\n    margin-bottom: var(--spacing-md);\n    color: var(--color-text-primary);\n}\n\n.moduleDescription {\n    font-size: var(--font-size-base);\n    color: var(--color-text-secondary);\n    line-height: 1.6;\n}\n\n.noVideo {\n    text-align: center;\n    padding: var(--spacing-3xl);\n}\n\n.noVideo h3 {\n    font-size: var(--font-size-xl);\n    margin-bottom: var(--spacing-lg);\n    color: var(--color-text-primary);\n}\n\n.moduleContentText {\n    font-size: var(--font-size-base);\n    color: var(--color-text-secondary);\n    line-height: 1.7;\n    white-space: pre-wrap;\n}\n\n.selectModule {\n    text-align: center;\n    padding: var(--spacing-3xl);\n}\n\n.selectModule h3 {\n    font-size: var(--font-size-xl);\n    margin-bottom: var(--spacing-md);\n    color: var(--color-text-primary);\n}\n\n.selectModule p {\n    font-size: var(--font-size-base);\n    color: var(--color-text-secondary);\n}\n\n/* Certificate Section */\n.certificateSection {\n    margin-top: var(--spacing-3xl);\n}\n\n.certificateCard {\n    display: flex;\n    align-items: center;\n    gap: var(--spacing-xl);\n    padding: var(--spacing-xl);\n    background: var(--color-card-bg);\n    border: 1px solid var(--color-card-border);\n    border-radius: var(--radius-lg);\n}\n\n.certificateIcon {\n    font-size: var(--font-size-5xl);\n}\n\n.certificateContent h3 {\n    font-size: var(--font-size-xl);\n    font-weight: 600;\n    margin-bottom: var(--spacing-md);\n    color: var(--color-text-primary);\n}\n\n.certificateContent p {\n    font-size: var(--font-size-base);\n    color: var(--color-text-secondary);\n    margin-bottom: var(--spacing-lg);\n}\n\n/* Responsive Design */\n@media (max-width: 1024px) {\n    .content {\n        grid-template-columns: 1fr;\n        gap: var(--spacing-xl);\n    }\n\n    .courseHeader {\n        flex-direction: column;\n        gap: var(--spacing-lg);\n        align-items: stretch;\n    }\n\n    .progressOverview {\n        justify-content: center;\n    }\n}\n\n@media (max-width: 768px) {\n    .dashboard {\n        padding: var(--spacing-md);\n    }\n\n    .courseTitle {\n        font-size: var(--font-size-2xl);\n    }\n\n    .courseDescription {\n        font-size: var(--font-size-base);\n    }\n\n    .progressCircle {\n        width: 60px;\n        height: 60px;\n    }\n\n    .progressCircle::before {\n        width: 45px;\n        height: 45px;\n    }\n\n    .progressValue {\n        font-size: var(--font-size-base);\n    }\n\n    .certificateCard {\n        flex-direction: column;\n        text-align: center;\n    }\n}\n\n@media (max-width: 480px) {\n\n    .modulesList,\n    .videoSection {\n        padding: var(--spacing-md);\n    }\n\n    .moduleItem {\n        padding: var(--spacing-sm);\n    }\n\n    .videoHeader .moduleTitle {\n        font-size: var(--font-size-xl);\n    }\n}","size_bytes":7121},"src/hooks/useSmoothScroll.ts":{"content":"\"use client\";\r\nimport { useEffect, useRef } from 'react';\r\nimport Lenis from 'lenis';\r\n\r\nexport const useSmoothScroll = () => {\r\n  const lenisRef = useRef<Lenis | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize Lenis with configuration from memory\r\n    const lenis = new Lenis({\r\n      duration: 1, // 1 second as specified in memory\r\n      easing: (t: number) => 1 - Math.pow(1 - t, 3), // Easing function from memory\r\n      smoothWheel: true,\r\n      touchMultiplier: 0, // Disable on touch devices for better performance\r\n    });\r\n\r\n    lenisRef.current = lenis;\r\n\r\n    // Animation frame loop\r\n    function raf(time: number) {\r\n      lenis.raf(time);\r\n      requestAnimationFrame(raf);\r\n    }\r\n\r\n    // Initialize with slight delay to prevent conflicts (from memory)\r\n    const initTimer = setTimeout(() => {\r\n      requestAnimationFrame(raf);\r\n    }, 100);\r\n\r\n    return () => {\r\n      clearTimeout(initTimer);\r\n      lenis.destroy();\r\n    };\r\n  }, []);\r\n\r\n  const scrollTo = (target: string | HTMLElement, options?: { offset?: number; duration?: number }) => {\r\n    if (lenisRef.current) {\r\n      lenisRef.current.scrollTo(target, {\r\n        offset: options?.offset || 0,\r\n        duration: options?.duration || 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  return { scrollTo, lenis: lenisRef.current };\r\n};","size_bytes":1305},"src/app/admin/dashboard/page.tsx":{"content":"\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport AdminLayout from \"../../../components/layout/AdminLayout\";\nimport styles from \"./Dashboard.module.css\";\n\nexport default function AdminDashboard() {\n  const [stats, setStats] = useState({\n    totalStudents: 0,\n    activeCourses: 0,\n    totalServices: 0,\n    newsletterSubscribers: 0,\n  });\n  const [recentActivity, setRecentActivity] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const router = useRouter();\n\n  useEffect(() => {\n    // Check admin authentication\n    const adminSession = localStorage.getItem(\"admin_session\");\n    if (!adminSession) {\n      router.push(\"/admin/login\");\n      return;\n    }\n\n    fetchDashboardData();\n  }, []);\n\n  const fetchDashboardData = async () => {\n    try {\n      const response = await fetch(\"/api/admin/dashboard\");\n      const data = await response.json();\n\n      if (response.ok) {\n        setStats(data.stats);\n        setRecentActivity(data.recentActivity);\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch dashboard data:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <AdminLayout>\n        <div className={styles.loading}>Loading dashboard...</div>\n      </AdminLayout>\n    );\n  }\n\n  return (\n    <AdminLayout>\n      <div className={styles.dashboard}>\n        <div className={styles.header}>\n          <h1 className={styles.title}>Dashboard</h1>\n          <p className={styles.subtitle}>\n            Welcome back! Here's your salon overview.\n          </p>\n        </div>\n\n        {/* Stats Cards */}\n        <div className={styles.statsGrid}>\n          <div className={`card ${styles.statCard}`}>\n            <div className={styles.statIcon}>👥</div>\n            <div className={styles.statContent}>\n              <h3 className={styles.statNumber}>{stats.totalStudents}</h3>\n              <p className={styles.statLabel}>Total Students</p>\n            </div>\n          </div>\n\n          <div className={`card ${styles.statCard}`}>\n            <div className={styles.statIcon}>📚</div>\n            <div className={styles.statContent}>\n              <h3 className={styles.statNumber}>{stats.activeCourses}</h3>\n              <p className={styles.statLabel}>Active Courses</p>\n            </div>\n          </div>\n\n          <div className={`card ${styles.statCard}`}>\n            <div className={styles.statIcon}>💼</div>\n            <div className={styles.statContent}>\n              <h3 className={styles.statNumber}>{stats.totalServices}</h3>\n              <p className={styles.statLabel}>Total Services</p>\n            </div>\n          </div>\n\n          <div className={`card ${styles.statCard}`}>\n            <div className={styles.statIcon}>📧</div>\n            <div className={styles.statContent}>\n              <h3 className={styles.statNumber}>\n                {stats.newsletterSubscribers}\n              </h3>\n              <p className={styles.statLabel}>Newsletter Subscribers</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Quick Actions */}\n        <div className={styles.quickActions}>\n          <h2 className={styles.sectionTitle}>Quick Actions</h2>\n          <div className={styles.actionsGrid}>\n            <a\n              href=\"/admin/students/create\"\n              className={`card ${styles.actionCard}`}\n            >\n              <div className={styles.actionIcon}>👤</div>\n              <div className={styles.actionContent}>\n                <h3>Add Student</h3>\n                <p>Create new student account</p>\n              </div>\n            </a>\n\n            <a\n              href=\"/admin/courses/create\"\n              className={`card ${styles.actionCard}`}\n            >\n              <div className={styles.actionIcon}>➕</div>\n              <div className={styles.actionContent}>\n                <h3>Create Course</h3>\n                <p>Add new training course</p>\n              </div>\n            </a>\n\n            <a\n              href=\"/admin/services/create\"\n              className={`card ${styles.actionCard}`}\n            >\n              <div className={styles.actionIcon}>✨</div>\n              <div className={styles.actionContent}>\n                <h3>Add Service</h3>\n                <p>Create new salon service</p>\n              </div>\n            </a>\n\n            <a href=\"/admin/newsletter\" className={`card ${styles.actionCard}`}>\n              <div className={styles.actionIcon}>📊</div>\n              <div className={styles.actionContent}>\n                <h3>Newsletter Export</h3>\n                <p>Download subscriber list</p>\n              </div>\n            </a>\n          </div>\n        </div>\n\n        {/* Recent Activity */}\n        <div className={styles.recentActivity}>\n          <h2 className={styles.sectionTitle}>Recent Activity</h2>\n          <div className={`card ${styles.activityCard}`}>\n            {recentActivity.length > 0 ? (\n              <div className={styles.activityList}>\n                {recentActivity.map((activity: any, index) => (\n                  <div key={index} className={styles.activityItem}>\n                    <div className={styles.activityIcon}>\n                      {activity.type === \"student\"\n                        ? \"👤\"\n                        : activity.type === \"course\"\n                        ? \"📚\"\n                        : activity.type === \"newsletter\"\n                        ? \"📧\"\n                        : \"💼\"}\n                    </div>\n                    <div className={styles.activityContent}>\n                      <p className={styles.activityText}>\n                        {activity.description}\n                      </p>\n                      <span className={styles.activityTime}>\n                        {activity.timeAgo}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className={styles.noActivity}>\n                <p>No recent activity to show.</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </AdminLayout>\n  );\n}\n","size_bytes":6201},"src/services/services.service.ts":{"content":"import { fetchApi } from '@/lib/api';\nimport { mockServices } from './mockData';\n\nexport interface Service {\n  id: string;\n  title: string;\n  description: string;\n  price: number;\n  duration: string;\n  image: string;\n  features: string[];\n  category: string;\n}\n\nexport interface ServiceBooking {\n  serviceId: string;\n  userId: string;\n  date: string;\n  time: string;\n  status: 'pending' | 'confirmed' | 'cancelled';\n}\n\nexport const servicesService = {\n  async getAllServices(): Promise<Service[]> {\n    try {\n      return await fetchApi<Service[]>('/services');\n    } catch (error) {\n      console.log('Falling back to mock data for services', error);\n      return mockServices;\n    }\n  },\n\n  async getServicesByCategory(): Promise<{[key: string]: Service[]}> {\n    try {\n      const services = await this.getAllServices();\n      const servicesByCategory: {[key: string]: Service[]} = {};\n      \n      services.forEach(service => {\n        if (!servicesByCategory[service.category]) {\n          servicesByCategory[service.category] = [];\n        }\n        servicesByCategory[service.category].push(service);\n      });\n      \n      return servicesByCategory;\n    } catch (error) {\n      console.log('Error grouping services by category', error);\n      return {};\n    }\n  },\n\n  async getFeaturedServicesByCategory(limit: number = 3): Promise<{[key: string]: Service[]}> {\n    try {\n      const servicesByCategory = await this.getServicesByCategory();\n      const featuredServices: {[key: string]: Service[]} = {};\n      \n      Object.keys(servicesByCategory).forEach(category => {\n        featuredServices[category] = servicesByCategory[category].slice(0, limit);\n      });\n      \n      return featuredServices;\n    } catch (error) {\n      console.log('Error getting featured services by category', error);\n      return {};\n    }\n  },\n\n  async getServiceById(id: string): Promise<Service> {\n    try {\n      return await fetchApi<Service>(`/services/${id}`);\n    } catch (error) {\n      console.log('Falling back to mock data for service details', error);\n      const service = mockServices.find(s => s.id === id);\n      if (!service) throw new Error('Service not found');\n      return service;\n    }\n  },\n\n  async bookService(booking: Omit<ServiceBooking, 'status'>): Promise<ServiceBooking> {\n    try {\n      return await fetchApi<ServiceBooking>('/services/book', {\n        method: 'POST',\n        body: JSON.stringify(booking),\n      });\n    } catch (error) {\n      console.log('Simulating booking creation with mock data', error);\n      return {\n        ...booking,\n        status: 'pending'\n      };\n    }\n  },\n\n  async getMyBookings(userId: string): Promise<ServiceBooking[]> {\n    try {\n      return await fetchApi<ServiceBooking[]>(`/services/bookings/${userId}`);\n    } catch (error) {\n      console.log('Falling back to mock data for bookings', error);\n      return []; // Return empty bookings for mock\n    }\n  },\n\n  async cancelBooking(bookingId: string): Promise<void> {\n    try {\n      return await fetchApi<void>(`/services/bookings/${bookingId}/cancel`, {\n        method: 'POST',\n      });\n    } catch (error) {\n      console.log('Simulating booking cancellation', error);\n    }\n  },\n};","size_bytes":3200},"src/app/services/Services.module.css":{"content":".servicesPage {\r\n    padding-top: 100px;\r\n    min-height: 100vh;\r\n    background: linear-gradient(135deg, #0f0f0f 0%, #1a1a1a 50%, #0f0f0f 100%);\r\n    position: relative;\r\n}\r\n\r\n.servicesPage::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: #000;\r\n    pointer-events: none;\r\n}\r\n\r\n.container {\r\n    max-width: 1400px;\r\n    margin: 0 auto;\r\n    padding: 0 24px;\r\n    position: relative;\r\n    z-index: 1;\r\n}\r\n\r\n.hero {\r\n    text-align: center;\r\n    margin-bottom: 80px;\r\n    padding: 60px 0;\r\n}\r\n\r\n.pageTitle {\r\n    font-size: clamp(2.5rem, 6vw, 4rem);\r\n    font-weight: 800;\r\n    color: #ffffff;\r\n    margin-bottom: 24px;\r\n    background: linear-gradient(135deg, #ffffff 0%, #D0B49F 100%);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    background-clip: text;\r\n    line-height: 1.1;\r\n}\r\n\r\n.pageSubtitle {\r\n    font-size: clamp(1.1rem, 3vw, 1.3rem);\r\n    color: rgba(255, 255, 255, 0.8);\r\n    max-width: 700px;\r\n    margin: 0 auto;\r\n    line-height: 1.5;\r\n    font-weight: 400;\r\n}\r\n\r\n/* Filters / Search */\r\n.filters {\r\n    display: flex;\r\n    gap: 24px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 60px;\r\n    flex-wrap: wrap;\r\n    background: rgba(255, 255, 255, 0.05);\r\n    backdrop-filter: blur(20px);\r\n    padding: 24px;\r\n    border-radius: 20px;\r\n    border: 1px solid rgba(255, 255, 255, 0.1);\r\n    position: relative;\r\n    z-index: 10;\r\n}\r\n\r\n.categoryFilters {\r\n    display: flex;\r\n    gap: var(--spacing-md);\r\n    flex-wrap: wrap;\r\n}\r\n\r\n/* Right-aligned dropdown for filters */\r\n.filterDropdown {\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n    position: relative;\r\n}\r\n\r\n/* when dropdown is open rotate the caret and slightly elevate the trigger */\r\n.filterDropdown.open .filterButton {\r\n    background: rgba(208, 180, 159, 0.15);\r\n    border-color: rgba(208, 180, 159, 0.5);\r\n    box-shadow: 0 8px 24px rgba(208, 180, 159, 0.2);\r\n}\r\n\r\n.filterDropdown.open .filterButton::after {\r\n    transform: rotate(180deg);\r\n}\r\n\r\n/* extra spacing so search and category buttons sit at opposite ends */\r\n.filters {\r\n    display: flex;\r\n    gap: var(--spacing-md);\r\n    justify-content: space-between;\r\n    /* push items to ends */\r\n    margin-bottom: var(--spacing-3xl);\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.filterSelect {\r\n    background: var(--color-card-bg);\r\n    color: var(--color-text-primary);\r\n    border: 1px solid var(--color-border);\r\n    padding: var(--spacing-sm) var(--spacing-md);\r\n    border-radius: var(--radius-md);\r\n    font-size: var(--font-size-sm);\r\n}\r\n\r\n/* Multi-select dropdown styles */\r\n.filterButton {\r\n    background: rgba(255, 255, 255, 0.08);\r\n    color: #ffffff;\r\n    border: 1px solid rgba(255, 255, 255, 0.2);\r\n    padding: 16px 24px;\r\n    border-radius: 16px;\r\n    display: inline-flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n    cursor: pointer;\r\n    font-weight: 600;\r\n    font-size: 1rem;\r\n    transition: all 0.3s ease;\r\n    backdrop-filter: blur(10px);\r\n    min-width: 180px;\r\n    justify-content: space-between;\r\n}\r\n\r\n.filterButton:hover {\r\n    background: rgba(255, 255, 255, 0.12);\r\n    border-color: rgba(208, 180, 159, 0.5);\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 8px 24px rgba(208, 180, 159, 0.2);\r\n}\r\n\r\n.filterButton::after {\r\n    content: '';\r\n    display: inline-block;\r\n    width: 0;\r\n    height: 0;\r\n    border-left: 6px solid transparent;\r\n    border-right: 6px solid transparent;\r\n    border-top: 6px solid #ffffff;\r\n    transform-origin: center;\r\n    transition: transform 0.3s ease;\r\n}\r\n\r\n.filterButton:focus {\r\n    outline: none;\r\n    border-color: #D0B49F;\r\n    box-shadow: 0 0 0 3px rgba(208, 180, 159, 0.3);\r\n}\r\n\r\n.dropdownMenu {\r\n    position: absolute;\r\n    top: calc(100% + 8px);\r\n    right: 0;\r\n    background: rgba(20, 20, 20, 0.98);\r\n    backdrop-filter: blur(20px);\r\n    border: 1px solid rgba(255, 255, 255, 0.15);\r\n    border-radius: 12px;\r\n    padding: 16px;\r\n    z-index: 9999;\r\n    min-width: 280px;\r\n    max-width: 320px;\r\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    transform: translateY(-10px);\r\n    transition: all 0.2s ease;\r\n}\r\n\r\n.filterDropdown.open .dropdownMenu {\r\n    opacity: 1;\r\n    visibility: visible;\r\n    transform: translateY(0);\r\n}\r\n\r\n.dropdownHeader {\r\n    display: flex;\r\n    gap: 8px;\r\n    justify-content: space-between;\r\n    margin-bottom: 12px;\r\n    padding-bottom: 12px;\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.dropdownHeader button {\r\n    padding: 6px 12px;\r\n    border-radius: 8px;\r\n    border: 1px solid rgba(255, 255, 255, 0.2);\r\n    background: rgba(255, 255, 255, 0.05);\r\n    color: #ffffff;\r\n    font-size: 0.85rem;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n    flex: 1;\r\n}\r\n\r\n.dropdownHeader button:hover {\r\n    background: rgba(208, 180, 159, 0.2);\r\n    border-color: rgba(208, 180, 159, 0.4);\r\n}\r\n\r\n.dropdownList {\r\n    max-height: 200px;\r\n    overflow-y: auto;\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    scrollbar-width: thin;\r\n}\r\n\r\n.dropdownList::-webkit-scrollbar {\r\n    width: 4px;\r\n}\r\n\r\n.dropdownList::-webkit-scrollbar-track {\r\n    background: rgba(255, 255, 255, 0.05);\r\n}\r\n\r\n.dropdownList::-webkit-scrollbar-thumb {\r\n    background: rgba(208, 180, 159, 0.3);\r\n    border-radius: 2px;\r\n}\r\n\r\n.dropdownList li {\r\n    padding: 0;\r\n    margin-bottom: 2px;\r\n}\r\n\r\n.dropdownList label {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    cursor: pointer;\r\n    color: rgba(255, 255, 255, 0.8);\r\n    padding: 8px 12px;\r\n    border-radius: 6px;\r\n    transition: all 0.2s ease;\r\n    font-weight: 500;\r\n    font-size: 0.9rem;\r\n}\r\n\r\n.dropdownList label:hover {\r\n    background: rgba(255, 255, 255, 0.08);\r\n    color: #ffffff;\r\n}\r\n\r\n.dropdownList input[type=\"checkbox\"] {\r\n    width: 16px;\r\n    height: 16px;\r\n    appearance: none;\r\n    border: 2px solid rgba(255, 255, 255, 0.3);\r\n    border-radius: 3px;\r\n    background: transparent;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n    position: relative;\r\n    flex-shrink: 0;\r\n}\r\n\r\n.dropdownList input[type=\"checkbox\"]:checked {\r\n    background: linear-gradient(135deg, #D0B49F 0%, #B8A082 100%);\r\n    border-color: #D0B49F;\r\n}\r\n\r\n.dropdownList input[type=\"checkbox\"]:checked::after {\r\n    content: '✓';\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    color: #1a1a1a;\r\n    font-size: 10px;\r\n    font-weight: bold;\r\n}\r\n\r\n.dropdownLabelText {\r\n    display: inline-block;\r\n    flex: 1;\r\n}\r\n\r\n/* checked option visuals */\r\n.dropdownList input[type=\"checkbox\"]:checked+.dropdownLabelText {\r\n    color: #D0B49F;\r\n    font-weight: 600;\r\n}\r\n\r\n.dropdownList li {\r\n    opacity: 1;\r\n}\r\n\r\n\r\n\r\n@keyframes fadeInUp {\r\n    from {\r\n        opacity: 0;\r\n        transform: translateY(10px);\r\n    }\r\n\r\n    to {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n    }\r\n}\r\n\r\n/* larger tap targets on mobile */\r\n@media (max-width: 480px) {\r\n    .dropdownList label {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n\r\n    .dropdownMenu {\r\n        min-width: 100%;\r\n        padding: var(--spacing-md);\r\n    }\r\n}\r\n\r\n/* Mobile: make dropdown full width under filters */\r\n@media (max-width: 768px) {\r\n    .filterDropdown {\r\n        width: 100%;\r\n        margin-left: 0;\r\n        position: relative;\r\n    }\r\n\r\n    .dropdownMenu {\r\n        position: absolute;\r\n        top: calc(100% + 8px);\r\n        left: 0;\r\n        right: 0;\r\n        width: 100%;\r\n        margin-top: 0;\r\n        border-radius: 12px;\r\n        min-width: auto;\r\n        max-width: none;\r\n        z-index: 9999;\r\n    }\r\n\r\n    .filterDropdown:not(.open) .dropdownMenu {\r\n        opacity: 0;\r\n        visibility: hidden;\r\n        transform: translateY(-10px);\r\n    }\r\n\r\n    .filterDropdown.open .dropdownMenu {\r\n        opacity: 1;\r\n        visibility: visible;\r\n        transform: translateY(0);\r\n    }\r\n}\r\n\r\n@keyframes slideDown {\r\n    from {\r\n        opacity: 0;\r\n        transform: translateY(-10px);\r\n    }\r\n\r\n    to {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n    }\r\n}\r\n\r\n.categoryButton {\r\n    padding: var(--spacing-sm) var(--spacing-lg);\r\n    background-color: transparent;\r\n    border: 1px solid var(--color-border);\r\n    border-radius: var(--radius-md);\r\n    color: var(--color-text-secondary);\r\n    cursor: pointer;\r\n    transition: var(--transition-normal);\r\n    font-size: var(--font-size-sm);\r\n}\r\n\r\n.categoryButton:hover {\r\n    transform: translateY(-2px);\r\n    border-color: var(--color-border-hover);\r\n    color: var(--color-text-primary);\r\n}\r\n\r\n.categoryButton.active {\r\n    background-color: var(--color-text-primary);\r\n    color: var(--color-primary-bg);\r\n    border-color: var(--color-text-primary);\r\n}\r\n\r\n.searchContainer {\r\n    flex: 1;\r\n    max-width: 400px;\r\n}\r\n\r\n.searchInput {\r\n    width: 100%;\r\n    padding: 16px 20px;\r\n    border: 1px solid rgba(255, 255, 255, 0.2);\r\n    border-radius: 16px;\r\n    background: rgba(255, 255, 255, 0.08);\r\n    color: #ffffff;\r\n    font-size: 1rem;\r\n    font-weight: 500;\r\n    transition: all 0.3s ease;\r\n    backdrop-filter: blur(10px);\r\n}\r\n\r\n.searchInput::placeholder {\r\n    color: rgba(255, 255, 255, 0.5);\r\n}\r\n\r\n.searchInput:focus {\r\n    outline: none;\r\n    border-color: #D0B49F;\r\n    background: rgba(255, 255, 255, 0.12);\r\n    box-shadow: 0 0 0 3px rgba(208, 180, 159, 0.2);\r\n    transform: translateY(-2px);\r\n}\r\n\r\n/* Grid */\r\n.servicesGrid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(380px, 1fr));\r\n    gap: 32px;\r\n    margin-bottom: 80px;\r\n}\r\n\r\n/* Card */\r\n.serviceCard {\r\n    background: rgba(255, 255, 255, 0.05);\r\n    backdrop-filter: blur(20px);\r\n    border-radius: 24px;\r\n    overflow: hidden;\r\n    transition: all 0.4s ease;\r\n    position: relative;\r\n    border: 3px solid rgb(255, 255, 255);\r\n    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.serviceCard::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 1px;\r\n    background: linear-gradient(90deg, transparent, rgba(208, 180, 159, 0.5), transparent);\r\n}\r\n\r\n.serviceCard:hover {\r\n    transform: translateY(-12px) scale(1.02);\r\n    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.serviceImage {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 280px;\r\n    overflow: hidden;\r\n}\r\n\r\n.serviceImage img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    transition: transform 0.6s ease;\r\n}\r\n\r\n.serviceOverlay {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: linear-gradient(135deg, rgba(0, 0, 0, 0.7) 0%, rgba(0, 0, 0, 0.4) 100%);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    opacity: 0;\r\n    transition: all 0.4s ease;\r\n}\r\n\r\n.serviceOverlay button {\r\n    background: linear-gradient(135deg, #D0B49F 0%, #B8A082 100%);\r\n    color: #1a1a1a;\r\n    border: none;\r\n    padding: 16px 32px;\r\n    border-radius: 50px;\r\n    font-weight: 700;\r\n    font-size: 1.1rem;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n}\r\n\r\n.serviceOverlay button:hover {\r\n    transform: translateY(-3px) scale(1.05);\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.serviceCard:hover .serviceOverlay {\r\n    opacity: 1;\r\n}\r\n\r\n.serviceCard:hover .serviceImage img {\r\n    transform: scale(1.15);\r\n}\r\n\r\n.serviceContent {\r\n    padding: 32px;\r\n}\r\n\r\n.serviceTitle {\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    color: #ffffff;\r\n    margin-bottom: 12px;\r\n    line-height: 1.3;\r\n}\r\n\r\n.serviceDescription {\r\n    color: rgba(255, 255, 255, 0.7);\r\n    margin-bottom: 24px;\r\n    line-height: 1.6;\r\n    font-size: 1rem;\r\n}\r\n\r\n.serviceDetails {\r\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n    padding-top: 20px;\r\n}\r\n\r\n.serviceMeta {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.serviceFeatures ul li {\r\n    list-style-type: none;\r\n    font-size: 1rem;\r\n    color: #e6e6e6;\r\n    padding-left: 10px;\r\n}\r\n\r\n.duration {\r\n    color: rgba(255, 255, 255, 0.6);\r\n    font-size: 0.9rem;\r\n    font-weight: 500;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 6px;\r\n}\r\n\r\n.price {\r\n    font-size: 1.3rem;\r\n    font-weight: 700;\r\n    color: #D0B49F;\r\n    background: linear-gradient(135deg, #D0B49F 0%, #E6D3B7 100%);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    background-clip: text;\r\n}\r\n\r\n.contactPrice {\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    color: rgba(255, 255, 255, 0.8);\r\n    font-style: italic;\r\n}\r\n\r\n.noResults {\r\n    text-align: center;\r\n    padding: var(--spacing-3xl);\r\n    color: var(--color-text-secondary);\r\n}\r\n\r\n.ctaSection {\r\n    text-align: center;\r\n    padding: 60px 40px;\r\n    background: rgba(255, 255, 255, 0.05);\r\n    backdrop-filter: blur(20px);\r\n    border-radius: 24px;\r\n    border: 1px solid rgba(255, 255, 255, 0.1);\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n\r\n.ctaSection::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 1px;\r\n    background: linear-gradient(90deg, transparent, rgba(208, 180, 159, 0.5), transparent);\r\n}\r\n\r\n.ctaTitle {\r\n    font-size: clamp(2rem, 5vw, 3rem);\r\n    font-weight: 800;\r\n    color: #ffffff;\r\n    margin-bottom: 16px;\r\n    background: linear-gradient(135deg, #ffffff 0%, #D0B49F 100%);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    background-clip: text;\r\n}\r\n\r\n.ctaDescription {\r\n    font-size: 1.2rem;\r\n    color: rgba(255, 255, 255, 0.8);\r\n    margin-bottom: 40px;\r\n    max-width: 600px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n}\r\n\r\n.ctaButtons {\r\n    display: flex;\r\n    gap: 20px;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.ctaButtons a {\r\n    padding: 18px 36px;\r\n    border-radius: 50px;\r\n    font-weight: 700;\r\n    font-size: 1.1rem;\r\n    text-decoration: none;\r\n    transition: all 0.3s ease;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n}\r\n\r\n.ctaButtons a:first-child {\r\n    background: linear-gradient(135deg, #D0B49F 0%, #B8A082 100%);\r\n    color: #1a1a1a;\r\n    box-shadow: 0 8px 24px rgba(208, 180, 159, 0.3);\r\n}\r\n\r\n.ctaButtons a:first-child:hover {\r\n    transform: translateY(-3px) scale(1.05);\r\n    box-shadow: 0 12px 32px rgba(208, 180, 159, 0.5);\r\n}\r\n\r\n.ctaButtons a:last-child {\r\n    background: transparent;\r\n    color: #ffffff;\r\n    border: 2px solid rgba(255, 255, 255, 0.3);\r\n}\r\n\r\n.ctaButtons a:last-child:hover {\r\n    background: rgba(255, 255, 255, 0.1);\r\n    border-color: rgba(255, 255, 255, 0.5);\r\n    transform: translateY(-3px);\r\n}\r\n\r\n/* Mobile Responsiveness */\r\n@media (max-width: 1024px) {\r\n    .servicesGrid {\r\n        grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\r\n        gap: 24px;\r\n    }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .container {\r\n        padding: 0 20px;\r\n    }\r\n\r\n    .hero {\r\n        padding: 40px 0;\r\n        margin-bottom: 60px;\r\n    }\r\n\r\n    .filters {\r\n        flex-direction: column;\r\n        gap: 20px;\r\n        padding: 20px;\r\n        align-items: stretch;\r\n    }\r\n\r\n    .searchContainer {\r\n        max-width: 100%;\r\n    }\r\n\r\n    .filterDropdown {\r\n        width: 100%;\r\n    }\r\n\r\n    .filterButton {\r\n        width: 100%;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    .servicesGrid {\r\n        grid-template-columns: 1fr;\r\n        gap: 20px;\r\n        margin-bottom: 60px;\r\n    }\r\n\r\n    .serviceCard {\r\n        max-width: 100%;\r\n    }\r\n\r\n    .serviceImage {\r\n        height: 240px;\r\n    }\r\n\r\n    .serviceContent {\r\n        padding: 24px;\r\n    }\r\n\r\n    .ctaSection {\r\n        padding: 40px 24px;\r\n    }\r\n\r\n    .ctaButtons {\r\n        flex-direction: column;\r\n        align-items: center;\r\n        gap: 16px;\r\n    }\r\n\r\n    .ctaButtons a {\r\n        width: 100%;\r\n        max-width: 300px;\r\n        text-align: center;\r\n    }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n    .container {\r\n        padding: 0 16px;\r\n    }\r\n\r\n    .hero {\r\n        padding: 30px 0;\r\n        margin-bottom: 40px;\r\n    }\r\n\r\n    .filters {\r\n        padding: 16px;\r\n        border-radius: 16px;\r\n    }\r\n\r\n    .searchInput {\r\n        padding: 14px 18px;\r\n        font-size: 0.95rem;\r\n    }\r\n\r\n    .filterButton {\r\n        padding: 14px 20px;\r\n        font-size: 0.95rem;\r\n    }\r\n\r\n    .servicesGrid {\r\n        gap: 16px;\r\n        margin-bottom: 40px;\r\n    }\r\n\r\n    .serviceImage {\r\n        height: 200px;\r\n    }\r\n\r\n    .serviceContent {\r\n        padding: 20px;\r\n    }\r\n\r\n    .serviceTitle {\r\n        font-size: 1.3rem;\r\n    }\r\n\r\n    .serviceDescription {\r\n        font-size: 0.95rem;\r\n    }\r\n\r\n    .ctaSection {\r\n        padding: 32px 20px;\r\n        border-radius: 20px;\r\n    }\r\n}","size_bytes":16776},"common/types.ts":{"content":"// Shared types used across all applications\r\n\r\nexport interface User {\r\n  id: string;\r\n  email: string;\r\n  name: string;\r\n  role: UserRole;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nexport interface Student {\r\n  id: string;\r\n  email: string;\r\n  name: string;\r\n  phone?: string;\r\n  enrollmentDate: Date;\r\n  status: StudentStatus;\r\n  assignedCourseId?: string;\r\n  certificateUrl?: string;\r\n}\r\n\r\nexport interface Course {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  category: CourseType;\r\n  isPublic: boolean;\r\n  duration: string;\r\n  price?: number;\r\n  thumbnail?: string;\r\n  status: CourseStatus;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nexport interface Service {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  category: ServiceCategory;\r\n  price?: number;\r\n  duration?: string;\r\n  image?: string;\r\n  isActive: boolean;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\n// Enums\r\nexport enum UserRole {\r\n  ADMIN = 'ADMIN',\r\n  SUPER_ADMIN = 'SUPER_ADMIN',\r\n  STUDENT = 'STUDENT'\r\n}\r\n\r\nexport enum StudentStatus {\r\n  ACTIVE = 'ACTIVE',\r\n  INACTIVE = 'INACTIVE',\r\n  GRADUATED = 'GRADUATED',\r\n  SUSPENDED = 'SUSPENDED'\r\n}\r\n\r\nexport enum CourseType {\r\n  PUBLIC = 'PUBLIC',\r\n  ACADEMY = 'ACADEMY',\r\n  PROFESSIONAL = 'PROFESSIONAL',\r\n  MASTERCLASS = 'MASTERCLASS'\r\n}\r\n\r\nexport enum CourseStatus {\r\n  ACTIVE = 'ACTIVE',\r\n  INACTIVE = 'INACTIVE',\r\n  DRAFT = 'DRAFT',\r\n  ARCHIVED = 'ARCHIVED'\r\n}\r\n\r\nexport enum ServiceCategory {\r\n  HAIR_STYLING = 'HAIR_STYLING',\r\n  HAIR_COLORING = 'HAIR_COLORING',\r\n  MAKEUP = 'MAKEUP',\r\n  NAIL_ART = 'NAIL_ART',\r\n  SKINCARE = 'SKINCARE',\r\n  SPECIAL_OCCASION = 'SPECIAL_OCCASION'\r\n}\r\n\r\n// Authentication\r\nexport interface LoginRequest {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface LoginResponse {\r\n  success: boolean;\r\n  token?: string;\r\n  user?: {\r\n    email: string;\r\n    role: UserRole;\r\n  };\r\n  error?: string;\r\n}\r\n","size_bytes":1895},"src/components/sections/About.module.css":{"content":".about {\n    background-color: var(--color-primary-bg);\n}\n\n.content {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-3xl);\n    align-items: center;\n}\n\n.textContent {\n    padding-right: var(--spacing-xl);\n}\n\n.title {\n    font-size: var(--font-size-4xl);\n    font-weight: 700;\n    color: var(--color-text-primary);\n    margin-bottom: var(--spacing-xl);\n}\n\n.description {\n    font-size: var(--font-size-lg);\n    color: var(--color-text-secondary);\n    line-height: 1.8;\n    margin-bottom: var(--spacing-lg);\n}\n\n.stats {\n    display: flex;\n    gap: var(--spacing-xl);\n    margin-top: var(--spacing-2xl);\n}\n\n.stat {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n}\n\n.statNumber {\n    font-size: var(--font-size-3xl);\n    font-weight: 700;\n    color: var(--color-text-primary);\n    margin-bottom: var(--spacing-xs);\n}\n\n.statLabel {\n    font-size: var(--font-size-sm);\n    color: var(--color-text-tertiary);\n    text-transform: uppercase;\n    letter-spacing: 1px;\n}\n\n.imageContent {\n    position: relative;\n}\n\n.imageContent img {\n    width: 100%;\n    height: 400px;\n    object-fit: cover;\n    border-radius: 20px;\n    border: 2px solid rgba(255, 255, 255, 0.1);\n    transition: all 0.3s ease;\n}\n\n@media (max-width: 768px) {\n    .content {\n        grid-template-columns: 1fr;\n        gap: var(--spacing-2xl);\n    }\n\n    .textContent {\n        padding-right: 0;\n        order: 2;\n    }\n\n    .imageContent {\n        order: 1;\n    }\n\n    .title {\n        font-size: var(--font-size-3xl);\n    }\n\n    .stats {\n        justify-content: space-around;\n        gap: var(--spacing-md);\n    }\n}\n\n.imageContent img:hover {\n    transform: scale(1.02);\n    border-color: rgba(255, 255, 255, 0.2);\n}","size_bytes":1756},"next.config.js":{"content":"/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  reactStrictMode: true,\n};\n\nmodule.exports = nextConfig;\n","size_bytes":120},"src/components/sections/Newsletter.module.css":{"content":".newsletter {\r\n    padding: 120px 0;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n\r\n.newsletter::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    pointer-events: none;\r\n}\r\n\r\n.container {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 24px;\r\n    position: relative;\r\n    z-index: 1;\r\n}\r\n\r\n.content {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: 80px;\r\n    align-items: center;\r\n}\r\n\r\n.textContent {\r\n    padding-right: 40px;\r\n}\r\n\r\n.title {\r\n    font-size: 3.5rem;\r\n    font-weight: 700;\r\n    color: #ffffff;\r\n    margin-bottom: 24px;\r\n    line-height: 1.2;\r\n    background: linear-gradient(135deg, #ffffff 0%, #D0B49F 100%);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    background-clip: text;\r\n}\r\n\r\n.description {\r\n    font-size: 1.25rem;\r\n    color: #b0b0b0;\r\n    line-height: 1.6;\r\n    margin-bottom: 40px;\r\n    font-weight: 400;\r\n}\r\n\r\n.benefits {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n\r\n.benefits li {\r\n    color: #d0d0d0;\r\n    margin-bottom: 16px;\r\n    font-size: 1.1rem;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n    font-weight: 500;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.benefits li:hover {\r\n    color: #D0B49F;\r\n    transform: translateX(8px);\r\n}\r\n\r\n.formContainer {\r\n    background: rgba(255, 255, 255, 0.05);\r\n    backdrop-filter: blur(20px);\r\n    padding: 48px;\r\n    border-radius: 24px;\r\n    border: 1px solid rgba(255, 255, 255, 0.1);\r\n    box-shadow: \r\n        0 20px 40px rgba(0, 0, 0, 0.3),\r\n        inset 0 1px 0 rgba(255, 255, 255, 0.1);\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n\r\n.formContainer::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 1px;\r\n    background: linear-gradient(90deg, transparent, rgba(208, 180, 159, 0.5), transparent);\r\n}\r\n\r\n.form {\r\n    width: 100%;\r\n}\r\n\r\n.inputGroup {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    margin-bottom: 24px;\r\n}\r\n\r\n.input {\r\n    padding: 18px 24px;\r\n    background: rgba(255, 255, 255, 0.08);\r\n    border: 1px solid rgba(255, 255, 255, 0.15);\r\n    border-radius: 16px;\r\n    color: #ffffff;\r\n    font-size: 1.1rem;\r\n    font-weight: 500;\r\n    transition: all 0.3s ease;\r\n    backdrop-filter: blur(10px);\r\n}\r\n\r\n.input::placeholder {\r\n    color: rgba(255, 255, 255, 0.5);\r\n    font-weight: 400;\r\n}\r\n\r\n.input:focus {\r\n    outline: none;\r\n    border-color: #D0B49F;\r\n    background: rgba(255, 255, 255, 0.12);\r\n    box-shadow: 0 0 0 3px rgba(208, 180, 159, 0.2);\r\n    transform: translateY(-2px);\r\n}\r\n\r\n.submitButton {\r\n    width: 100%;\r\n    padding: 20px 32px;\r\n    background: linear-gradient(135deg, #D0B49F 0%, #B8A082 100%);\r\n    color: #1a1a1a;\r\n    border: none;\r\n    border-radius: 16px;\r\n    font-size: 1.1rem;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n\r\n.submitButton::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: -100%;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\r\n    transition: left 0.5s ease;\r\n}\r\n\r\n.submitButton:hover::before {\r\n    left: 100%;\r\n}\r\n\r\n.submitButton:hover {\r\n    transform: translateY(-3px);\r\n}\r\n\r\n.submitButton:active {\r\n    transform: translateY(-1px);\r\n}\r\n\r\n.submitButton:disabled {\r\n    opacity: 0.7;\r\n    cursor: not-allowed;\r\n    transform: none;\r\n    box-shadow: none;\r\n}\r\n\r\n.message {\r\n    padding: 16px 24px;\r\n    border-radius: 12px;\r\n    margin-bottom: 24px;\r\n    text-align: center;\r\n    font-weight: 600;\r\n    font-size: 1rem;\r\n}\r\n\r\n.message.success {\r\n    background: rgba(34, 197, 94, 0.15);\r\n    border: 1px solid rgba(34, 197, 94, 0.3);\r\n    color: #22c55e;\r\n}\r\n\r\n.message.error {\r\n    background: rgba(239, 68, 68, 0.15);\r\n    border: 1px solid rgba(239, 68, 68, 0.3);\r\n    color: #ef4444;\r\n}\r\n\r\n.privacy {\r\n    font-size: 0.9rem;\r\n    color: rgba(255, 255, 255, 0.6);\r\n    text-align: center;\r\n    margin: 20px 0 0 0;\r\n    font-weight: 400;\r\n}\r\n\r\n/* Responsive Design */\r\n@media (max-width: 1024px) {\r\n    .content {\r\n        gap: 60px;\r\n    }\r\n    \r\n    .textContent {\r\n        padding-right: 20px;\r\n    }\r\n    \r\n    .title {\r\n        font-size: 3rem;\r\n    }\r\n    \r\n    .formContainer {\r\n        padding: 40px;\r\n    }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .newsletter {\r\n        padding: 80px 0;\r\n    }\r\n    \r\n    .container {\r\n        padding: 0 20px;\r\n    }\r\n    \r\n    .content {\r\n        grid-template-columns: 1fr;\r\n        gap: 50px;\r\n    }\r\n\r\n    .textContent {\r\n        padding-right: 0;\r\n        text-align: left;\r\n    }\r\n\r\n    .title {\r\n        font-size: 2.5rem;\r\n        margin-bottom: 20px;\r\n    }\r\n    \r\n    .description {\r\n        font-size: 1.1rem;\r\n        margin-bottom: 30px;\r\n\r\n    }\r\n    \r\n    .benefits li {\r\n        justify-content: left;\r\n        font-size: 1rem;\r\n    }\r\n    \r\n    .formContainer {\r\n        padding: 32px;\r\n        border-radius: 20px;\r\n    }\r\n    \r\n    .inputGroup {\r\n        gap: 16px;\r\n    }\r\n    \r\n    .input {\r\n        padding: 16px 20px;\r\n        font-size: 1rem;\r\n    }\r\n    \r\n    .submitButton {\r\n        padding: 18px 28px;\r\n        font-size: 1rem;\r\n    }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n    .newsletter {\r\n        padding: 60px 0;\r\n    }\r\n    \r\n    .container {\r\n        padding: 0 16px;\r\n    }\r\n    \r\n    .title {\r\n        font-size: 2rem;\r\n        margin-bottom: 16px;\r\n    }\r\n    \r\n    .description {\r\n        font-size: 1rem;\r\n        margin-bottom: 24px;\r\n    }\r\n    \r\n    .benefits li {\r\n        font-size: 0.95rem;\r\n        margin-bottom: 12px;\r\n    }\r\n    \r\n    .formContainer {\r\n        padding: 24px;\r\n        border-radius: 16px;\r\n    }\r\n    \r\n    .input {\r\n        padding: 14px 18px;\r\n        border-radius: 12px;\r\n    }\r\n    \r\n    .submitButton {\r\n        padding: 16px 24px;\r\n        border-radius: 12px;\r\n        font-size: 0.95rem;\r\n    }\r\n}","size_bytes":6076},"src/app/api/admin/certificates/upload/route.ts":{"content":"import { NextRequest, NextResponse } from 'next/server';\r\nimport { writeFile, mkdir } from 'fs/promises';\r\nimport { join } from 'path';\r\nimport { existsSync } from 'fs';\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const formData = await request.formData();\r\n    const file = formData.get('certificate') as File;\r\n    const studentId = formData.get('studentId') as string;\r\n    const studentName = formData.get('studentName') as string;\r\n    const courseName = formData.get('courseName') as string;\r\n\r\n    if (!file || !studentId || !studentName || !courseName) {\r\n      return NextResponse.json(\r\n        { error: 'Missing required fields' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Validate file type\r\n    const allowedTypes = ['application/pdf', 'image/jpeg', 'image/jpg', 'image/png'];\r\n    if (!allowedTypes.includes(file.type)) {\r\n      return NextResponse.json(\r\n        { error: 'Invalid file type. Only PDF, JPG, JPEG, PNG are allowed.' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Validate file size (10MB max)\r\n    if (file.size > 10 * 1024 * 1024) {\r\n      return NextResponse.json(\r\n        { error: 'File size too large. Maximum 10MB allowed.' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Create uploads directory if it doesn't exist\r\n    const uploadsDir = join(process.cwd(), 'public', 'uploads', 'certificates');\r\n    if (!existsSync(uploadsDir)) {\r\n      await mkdir(uploadsDir, { recursive: true });\r\n    }\r\n\r\n    // Generate unique filename\r\n    const timestamp = Date.now();\r\n    const fileExtension = file.name.split('.').pop();\r\n    const fileName = `${studentId}_${timestamp}.${fileExtension}`;\r\n    const filePath = join(uploadsDir, fileName);\r\n\r\n    // Convert file to buffer and save\r\n    const bytes = await file.arrayBuffer();\r\n    const buffer = Buffer.from(bytes);\r\n    await writeFile(filePath, buffer);\r\n\r\n    // Create certificate record (in a real app, this would go to a database)\r\n    const certificateRecord = {\r\n      id: `cert_${timestamp}`,\r\n      studentId,\r\n      studentName,\r\n      studentEmail: `${studentName.toLowerCase().replace(' ', '.')}@example.com`, // Mock email\r\n      courseName,\r\n      completionDate: new Date().toISOString(),\r\n      status: 'issued' as const,\r\n      certificateUrl: `/uploads/certificates/${fileName}`,\r\n      generatedBy: 'Admin User', // In real app, get from session\r\n      generatedAt: new Date().toISOString(),\r\n    };\r\n\r\n    // In a real application, you would save this to your database\r\n    // For now, we'll just return success\r\n    console.log('Certificate uploaded:', certificateRecord);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: 'Certificate uploaded successfully',\r\n      certificate: certificateRecord,\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error uploading certificate:', error);\r\n    return NextResponse.json(\r\n      { error: 'Failed to upload certificate' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}","size_bytes":2988},"src/components/ui/VideoPlayer.module.css":{"content":".videoPlayer {\r\n    width: 100%;\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n}\r\n\r\n.videoContainer {\r\n    position: relative;\r\n    background-color: var(--color-primary-bg);\r\n    border-radius: var(--radius-lg);\r\n    overflow: hidden;\r\n    border: 1px solid var(--color-border);\r\n}\r\n\r\n.video {\r\n    width: 100%;\r\n    height: auto;\r\n    min-height: 400px;\r\n    display: block;\r\n    cursor: pointer;\r\n}\r\n\r\n.controls {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background: linear-gradient(transparent, rgba(0, 0, 0, 0.8));\r\n    padding: var(--spacing-lg);\r\n    display: flex;\r\n    align-items: center;\r\n    gap: var(--spacing-md);\r\n    opacity: 0;\r\n    transition: opacity var(--transition-normal);\r\n}\r\n\r\n.videoContainer:hover .controls {\r\n    opacity: 1;\r\n}\r\n\r\n.playButton {\r\n    background: none;\r\n    border: none;\r\n    color: var(--color-text-primary);\r\n    font-size: var(--font-size-xl);\r\n    cursor: pointer;\r\n    padding: var(--spacing-sm);\r\n    border-radius: var(--radius-md);\r\n    transition: all var(--transition-normal);\r\n    flex-shrink: 0;\r\n}\r\n\r\n.playButton:hover {\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    transform: scale(1.1);\r\n}\r\n\r\n.progressContainer {\r\n    flex: 1;\r\n    margin: 0 var(--spacing-md);\r\n}\r\n\r\n.progressSlider {\r\n    width: 100%;\r\n    height: 6px;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border-radius: 3px;\r\n    outline: none;\r\n    cursor: pointer;\r\n    appearance: none;\r\n}\r\n\r\n.progressSlider::-webkit-slider-thumb {\r\n    appearance: none;\r\n    width: 16px;\r\n    height: 16px;\r\n    background: var(--color-text-primary);\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    transition: transform var(--transition-normal);\r\n}\r\n\r\n.progressSlider::-webkit-slider-thumb:hover {\r\n    transform: scale(1.2);\r\n}\r\n\r\n.progressSlider::-moz-range-thumb {\r\n    width: 16px;\r\n    height: 16px;\r\n    background: var(--color-text-primary);\r\n    border-radius: 50%;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: transform var(--transition-normal);\r\n}\r\n\r\n.progressSlider::-moz-range-thumb:hover {\r\n    transform: scale(1.2);\r\n}\r\n\r\n.timeDisplay {\r\n    color: var(--color-text-primary);\r\n    font-size: var(--font-size-sm);\r\n    font-family: monospace;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: var(--spacing-xs);\r\n    flex-shrink: 0;\r\n}\r\n\r\n/* Mobile Responsive */\r\n@media (max-width: 768px) {\r\n    .video {\r\n        min-height: 250px;\r\n    }\r\n\r\n    .controls {\r\n        padding: var(--spacing-md);\r\n        gap: var(--spacing-sm);\r\n    }\r\n\r\n    .playButton {\r\n        font-size: var(--font-size-lg);\r\n    }\r\n\r\n    .timeDisplay {\r\n        font-size: var(--font-size-xs);\r\n    }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n    .video {\r\n        min-height: 200px;\r\n    }\r\n\r\n    .controls {\r\n        opacity: 1;\r\n        /* Always show on mobile */\r\n    }\r\n\r\n    .progressContainer {\r\n        margin: 0 var(--spacing-sm);\r\n    }\r\n}","size_bytes":2911},"src/components/sections/Reviews.module.css":{"content":".reviews {\r\n    background-color: var(--color-secondary-bg);\r\n}\r\n\r\n.header {\r\n    text-align: center;\r\n    margin-bottom: var(--spacing-3xl);\r\n}\r\n\r\n.title {\r\n    font-size: var(--font-size-4xl);\r\n    font-weight: 700;\r\n    color: var(--color-text-primary);\r\n    margin-bottom: var(--spacing-md);\r\n}\r\n\r\n.subtitle {\r\n    font-size: var(--font-size-xl);\r\n    color: var(--color-text-secondary);\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n}\r\n\r\n.reviewGrid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\r\n    gap: var(--spacing-xl);\r\n}\r\n\r\n.reviewCard {\r\n    padding: var(--spacing-2xl);\r\n    text-align: center;\r\n    background: var(--color-card-bg);\r\n    border-radius: 20px;\r\n    border: 1px solid rgba(255, 255, 255, 0.1);\r\n    transition: all var(--transition-normal);\r\n}\r\n\r\n.stars {\r\n    margin-bottom: var(--spacing-lg);\r\n    font-size: var(--font-size-lg);\r\n}\r\n\r\n.star {\r\n    margin: 0 2px;\r\n}\r\n\r\n.reviewText {\r\n    font-size: var(--font-size-lg);\r\n    color: var(--color-text-secondary);\r\n    line-height: 1.6;\r\n    margin-bottom: var(--spacing-xl);\r\n    font-style: italic;\r\n}\r\n\r\n.reviewer {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: var(--spacing-xs);\r\n}\r\n\r\n.reviewerName {\r\n    color: var(--color-text-primary);\r\n    font-weight: 600;\r\n}\r\n\r\n.reviewerService {\r\n    color: var(--color-text-tertiary);\r\n    font-size: var(--font-size-sm);\r\n}\r\n\r\n.reviewCard:hover {\r\n    transform: translateY(-8px) scale(1.02);\r\n    border-color: rgba(255, 255, 255, 0.2);\r\n    border-radius: 25px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .reviewGrid {\r\n        grid-template-columns: 1fr;\r\n        gap: var(--spacing-lg);\r\n    }\r\n\r\n    .title {\r\n        font-size: var(--font-size-3xl);\r\n    }\r\n}","size_bytes":1743},"src/components/sections/Reviews.tsx":{"content":"import styles from \"./Reviews.module.css\";\n\nexport default function Reviews() {\n  const reviews = [\n    {\n      id: 1,\n      name: \"Sarah Johnson\",\n      rating: 5,\n      text: \"Amazing experience at The Fringe! The stylists are incredibly talented and the education program helped me launch my career.\",\n      service: \"Hair Styling & Course\",\n    },\n    {\n      id: 2,\n      name: \"Michael Chen\",\n      rating: 5,\n      text: \"Professional service and excellent results. I've been coming here for years and they never disappoint.\",\n      service: \"Hair Color\",\n    },\n    {\n      id: 3,\n      name: \"Emma Rodriguez\",\n      rating: 5,\n      text: \"The best beauty academy in the city! The instructors are top-notch and the facilities are state-of-the-art.\",\n      service: \"Makeup Course\",\n    },\n  ];\n\n  return (\n    <section id=\"reviews\" className={`section ${styles.reviews}`}>\n      <div className=\"container\">\n        <div className={styles.header}>\n          <h2 className={styles.title}>What Our Clients Say</h2>\n          <p className={styles.subtitle}>\n            Don't just take our word for it - hear from our satisfied clients\n            and graduates\n          </p>\n        </div>\n\n        <div className={styles.reviewGrid}>\n          {reviews.map((review) => (\n            <div key={review.id} className={`card ${styles.reviewCard}`}>\n              <div className={styles.stars}>\n                {[...Array(5)].map((_, i) => (\n                  <span key={i} className={styles.star}>\n                    ⭐\n                  </span>\n                ))}\n              </div>\n              <p className={styles.reviewText}>\"{review.text}\"</p>\n              <div className={styles.reviewer}>\n                <strong className={styles.reviewerName}>{review.name}</strong>\n                <span className={styles.reviewerService}>{review.service}</span>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":1972},"src/app/about/page.tsx":{"content":"import Layout from \"../../components/layout/Layout\";\n\nexport default function AboutPage() {\n  return (\n    <Layout>\n      <section className=\"section\" style={{ paddingTop: \"120px\" }}>\n        <div className=\"container\">\n          <h1 className=\"text-4xl font-bold text-primary mb-8\">\n            About The Fringe\n          </h1>\n\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"1fr 1fr\",\n              gap: \"3rem\",\n              alignItems: \"center\",\n            }}\n          >\n            <div>\n              <h2 className=\"text-2xl font-semibold text-primary mb-4\">\n                Our Story\n              </h2>\n              <p className=\"text-lg text-secondary mb-4\">\n                Founded in 2010, The Fringe has grown from a small neighborhood\n                salon into a premier beauty destination and educational\n                institution. Our passion for excellence and innovation drives\n                everything we do.\n              </p>\n              <p className=\"text-lg text-secondary mb-4\">\n                We believe that beauty is an art form, and everyone deserves to\n                feel confident and beautiful. Whether you're looking for a new\n                style or starting your career in beauty, we're here to help you\n                achieve your goals.\n              </p>\n\n              <h3 className=\"text-xl font-semibold text-primary mb-3\">\n                Our Mission\n              </h3>\n              <p className=\"text-secondary mb-6\">\n                To provide exceptional beauty services while fostering the next\n                generation of beauty professionals through comprehensive\n                education and hands-on training.\n              </p>\n\n              <div style={{ display: \"flex\", gap: \"2rem\" }}>\n                <div className=\"text-center\">\n                  <div className=\"text-3xl font-bold text-primary\">1000+</div>\n                  <div className=\"text-sm text-tertiary\">Happy Clients</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-3xl font-bold text-primary\">500+</div>\n                  <div className=\"text-sm text-tertiary\">Graduates</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-3xl font-bold text-primary\">15+</div>\n                  <div className=\"text-sm text-tertiary\">Expert Stylists</div>\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <img\n                src=\"/images/about-salon.jpg\"\n                alt=\"The Fringe Salon Interior\"\n                style={{\n                  width: \"100%\",\n                  height: \"400px\",\n                  objectFit: \"cover\",\n                  borderRadius: \"1rem\",\n                  border: \"1px solid #333333\",\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n    </Layout>\n  );\n}\n","size_bytes":3000},"src/app/contact/page.tsx":{"content":"\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport Layout from \"../../components/layout/Layout\";\r\nimport styles from \"./Contact.module.css\";\r\n\r\nexport default function ContactPage() {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    service: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submitStatus, setSubmitStatus] = useState(\"\");\r\n\r\n  const handleChange = (e: any) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n\r\n    // Simulate form submission\r\n    setTimeout(() => {\r\n      setIsSubmitting(false);\r\n      setSubmitStatus(\"success\");\r\n      setFormData({ name: \"\", email: \"\", phone: \"\", service: \"\", message: \"\" });\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <section className={styles.contactPage}>\r\n        <div className=\"container\">\r\n          {/* Hero Section */}\r\n          <div className={styles.hero}>\r\n            <h1 className={styles.pageTitle}>Contact Us</h1>\r\n            <p className={styles.pageSubtitle}>\r\n              Get in touch with us for appointments, questions, or course\r\n              information\r\n            </p>\r\n          </div>\r\n\r\n          <div className={styles.contactContainer}>\r\n            {/* Contact Information */}\r\n            <div className={styles.contactInfo}>\r\n              <h2 className={styles.sectionTitle}>Get in Touch</h2>\r\n\r\n              <div className={styles.infoCard}>\r\n                <div className={styles.infoItem}>\r\n                  <div className={styles.infoIcon}>📍</div>\r\n                  <div className={styles.infoContent}>\r\n                    <h3>Visit Us</h3>\r\n                    <p>\r\n                      123 Beauty Street\r\n                      <br />\r\n                      Style City, SC 12345\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className={styles.infoItem}>\r\n                  <div className={styles.infoIcon}>📞</div>\r\n                  <div className={styles.infoContent}>\r\n                    <h3>Call Us</h3>\r\n                    <p>\r\n                      Salon: (555) 123-4567\r\n                      <br />\r\n                      Academy: (555) 123-4568\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className={styles.infoItem}>\r\n                  <div className={styles.infoIcon}>✉️</div>\r\n                  <div className={styles.infoContent}>\r\n                    <h3>Email Us</h3>\r\n                    <p>\r\n                      info@thefringe.com\r\n                      <br />\r\n                      academy@thefringe.com\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className={styles.infoItem}>\r\n                  <div className={styles.infoIcon}>🕒</div>\r\n                  <div className={styles.infoContent}>\r\n                    <h3>Hours</h3>\r\n                    <p>\r\n                      Mon-Fri: 9:00 AM - 8:00 PM\r\n                      <br />\r\n                      Sat: 9:00 AM - 6:00 PM\r\n                      <br />\r\n                      Sun: 11:00 AM - 5:00 PM\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className={styles.emergencyContact}>\r\n                <h3>Emergency Cancellations</h3>\r\n                <p>\r\n                  For same-day cancellations or emergencies, please call us\r\n                  directly at <strong>(555) 123-4567</strong>\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Contact Form */}\r\n            <div className={styles.contactForm}>\r\n              <h2 className={styles.sectionTitle}>Send us a Message</h2>\r\n\r\n              {submitStatus === \"success\" && (\r\n                <div className={styles.successMessage}>\r\n                  <p>\r\n                    Thank you! Your message has been sent successfully. We'll\r\n                    get back to you within 24 hours.\r\n                  </p>\r\n                </div>\r\n              )}\r\n\r\n              <form onSubmit={handleSubmit} className={styles.form}>\r\n                <div className={styles.formGroup}>\r\n                  <label htmlFor=\"name\">Full Name *</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    value={formData.name}\r\n                    onChange={handleChange}\r\n                    required\r\n                    className=\"input\"\r\n                  />\r\n                </div>\r\n\r\n                <div className={styles.formGroup}>\r\n                  <label htmlFor=\"email\">Email Address *</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={formData.email}\r\n                    onChange={handleChange}\r\n                    required\r\n                    className=\"input\"\r\n                  />\r\n                </div>\r\n\r\n                <div className={styles.formGroup}>\r\n                  <label htmlFor=\"phone\">Phone Number</label>\r\n                  <input\r\n                    type=\"tel\"\r\n                    id=\"phone\"\r\n                    name=\"phone\"\r\n                    value={formData.phone}\r\n                    onChange={handleChange}\r\n                    className=\"input\"\r\n                  />\r\n                </div>\r\n\r\n                <div className={styles.formGroup}>\r\n                  <label htmlFor=\"service\">Service Interest</label>\r\n                  <select\r\n                    id=\"service\"\r\n                    name=\"service\"\r\n                    value={formData.service}\r\n                    onChange={handleChange}\r\n                    className=\"input\"\r\n                  >\r\n                    <option value=\"\">Select a service...</option>\r\n                    <option value=\"hair-styling\">Hair Styling</option>\r\n                    <option value=\"hair-coloring\">Hair Coloring</option>\r\n                    <option value=\"makeup\">Makeup Services</option>\r\n                    <option value=\"nail-art\">Nail Art</option>\r\n                    <option value=\"skincare\">Skincare</option>\r\n                    <option value=\"course-inquiry\">Course Information</option>\r\n                    <option value=\"general\">General Inquiry</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className={styles.formGroup}>\r\n                  <label htmlFor=\"message\">Message *</label>\r\n                  <textarea\r\n                    id=\"message\"\r\n                    name=\"message\"\r\n                    value={formData.message}\r\n                    onChange={handleChange}\r\n                    required\r\n                    rows={6}\r\n                    className=\"input\"\r\n                    placeholder=\"Tell us about your needs, preferred appointment times, or any questions you have...\"\r\n                  />\r\n                </div>\r\n\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                  className={`btn btn-primary btn-lg ${styles.submitButton}`}\r\n                >\r\n                  {isSubmitting ? \"Sending...\" : \"Send Message\"}\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n\r\n          {/* FAQ Section */}\r\n          <div className={styles.faqSection}>\r\n            <h2 className={styles.sectionTitle}>Frequently Asked Questions</h2>\r\n            <div className={styles.faqGrid}>\r\n              <div className={styles.faqItem}>\r\n                <h3>How far in advance should I book?</h3>\r\n                <p>\r\n                  We recommend booking 1-2 weeks in advance for regular\r\n                  services, and 3-4 weeks for special events or color services.\r\n                </p>\r\n              </div>\r\n\r\n              <div className={styles.faqItem}>\r\n                <h3>What's your cancellation policy?</h3>\r\n                <p>\r\n                  Please provide at least 24 hours notice for cancellations.\r\n                  Same-day cancellations may incur a fee.\r\n                </p>\r\n              </div>\r\n\r\n              <div className={styles.faqItem}>\r\n                <h3>Do you offer consultations?</h3>\r\n                <p>\r\n                  Yes! We offer complimentary consultations for all new clients\r\n                  and major color or cut changes.\r\n                </p>\r\n              </div>\r\n\r\n              <div className={styles.faqItem}>\r\n                <h3>What payment methods do you accept?</h3>\r\n                <p>\r\n                  We accept cash, all major credit cards, and digital payments\r\n                  including Apple Pay and Google Pay.\r\n                </p>\r\n              </div>\r\n\r\n              <div className={styles.faqItem}>\r\n                <h3>Do you offer group bookings?</h3>\r\n                <p>\r\n                  Absolutely! We specialize in bridal parties, special events,\r\n                  and group appointments. Contact us for special rates.\r\n                </p>\r\n              </div>\r\n\r\n              <div className={styles.faqItem}>\r\n                <h3>How do I enroll in courses?</h3>\r\n                <p>\r\n                  Course enrollment can be done online, over the phone, or in\r\n                  person. Financial aid options are available.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </Layout>\r\n  );\r\n}\r\n","size_bytes":9730},"src/app/login/page.tsx":{"content":"import { redirect } from \"next/navigation\";\n\nexport default function LoginRedirect() {\n  // Redirect generic /login to the student login route\n  redirect(\"/student/login\");\n}\n","size_bytes":175},"src/header/navLinks/FlowingMenu.js":{"content":"import React from \"react\";\r\nimport { gsap } from \"gsap\";\r\n\r\nimport \"./FlowingMenu.css\";\r\n\r\nfunction FlowingMenu({ items = [] }) {\r\n  return (\r\n      <div className=\"menu-wrap\">\r\n        <nav className=\"menu\">\r\n          {items.map((item, idx) => (\r\n            <MenuItem key={idx} {...item} />\r\n          ))}\r\n        </nav>\r\n      </div>\r\n  );\r\n}\r\n\r\nfunction MenuItem({ link, text, image }) {\r\n  const itemRef = React.useRef(null);\r\n  const marqueeRef = React.useRef(null);\r\n  const marqueeInnerRef = React.useRef(null);\r\n\r\n  const animationDefaults = { duration: 0.6, ease: \"expo\" };\r\n\r\n  const findClosestEdge = (mouseX, mouseY, width, height) => {\r\n    const topEdgeDist = distMetric(mouseX, mouseY, width / 2, 0);\r\n    const bottomEdgeDist = distMetric(mouseX, mouseY, width / 2, height);\r\n    return topEdgeDist < bottomEdgeDist ? \"top\" : \"bottom\";\r\n  };\r\n\r\n  const distMetric = (x, y, x2, y2) => {\r\n    const xDiff = x - x2;\r\n    const yDiff = y - y2;\r\n    return xDiff * xDiff + yDiff * yDiff;\r\n  };\r\n\r\n  const handleMouseEnter = (ev) => {\r\n    if (!itemRef.current || !marqueeRef.current || !marqueeInnerRef.current)\r\n      return;\r\n    const rect = itemRef.current.getBoundingClientRect();\r\n    const x = ev.clientX - rect.left;\r\n    const y = ev.clientY - rect.top;\r\n    const edge = findClosestEdge(x, y, rect.width, rect.height);\r\n\r\n    gsap\r\n      .timeline({ defaults: animationDefaults })\r\n      .set(marqueeRef.current, { y: edge === \"top\" ? \"-101%\" : \"101%\" }, 0)\r\n      .set(marqueeInnerRef.current, { y: edge === \"top\" ? \"101%\" : \"-101%\" }, 0)\r\n      .to([marqueeRef.current, marqueeInnerRef.current], { y: \"0%\" }, 0);\r\n  };\r\n\r\n  const handleMouseLeave = (ev) => {\r\n    if (!itemRef.current || !marqueeRef.current || !marqueeInnerRef.current)\r\n      return;\r\n    const rect = itemRef.current.getBoundingClientRect();\r\n    const x = ev.clientX - rect.left;\r\n    const y = ev.clientY - rect.top;\r\n    const edge = findClosestEdge(x, y, rect.width, rect.height);\r\n\r\n    gsap\r\n      .timeline({ defaults: animationDefaults })\r\n      .to(marqueeRef.current, { y: edge === \"top\" ? \"-101%\" : \"101%\" }, 0)\r\n      .to(marqueeInnerRef.current, { y: edge === \"top\" ? \"101%\" : \"-101%\" }, 0);\r\n  };\r\n\r\n  const repeatedMarqueeContent = Array.from({ length: 4 }).map((_, idx) => (\r\n    <React.Fragment key={idx}>\r\n      <span>{text}</span>\r\n      <div\r\n        className=\"marquee__img\"\r\n        style={{ backgroundImage: `url(${image})` }}\r\n      />\r\n    </React.Fragment>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"menu__item\" ref={itemRef}>\r\n      <a\r\n        className=\"menu__item-link\"\r\n        href={link}\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n      >\r\n        {text}\r\n      </a>\r\n      <div className=\"marquee\" ref={marqueeRef}>\r\n        <div className=\"marquee__inner-wrap\" ref={marqueeInnerRef}>\r\n          <div className=\"marquee__inner\" aria-hidden=\"true\">\r\n            {repeatedMarqueeContent}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FlowingMenu;\r\n","size_bytes":3055},"src/middleware.ts":{"content":"import { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n\n// Paths that don't require authentication\nconst publicPaths = [\n  '/',\n  '/login',\n  '/admin/login',\n  '/student/login',\n  '/about',\n  '/courses',\n  '/services',\n  '/contact',\n  '/book-now',\n  '/team',\n  '/reviews',\n];\n\n// Function to check if a path is public\nconst isPublicPath = (path: string) => {\n  return publicPaths.some(publicPath => path.startsWith(publicPath));\n};\n\nexport function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl;\n  const token = request.cookies.get('authToken')?.value;\n  const userRole = request.cookies.get('userRole')?.value;\n\n  // Allow access to public paths without authentication\n  if (isPublicPath(pathname)) {\n    return NextResponse.next();\n  }\n\n  // If no token is present and trying to access protected routes, redirect to login\n  if (!token) {\n    return NextResponse.redirect(new URL('/login', request.url));\n  }\n\n  // Handle admin routes\n  if (pathname.startsWith('/admin') && userRole !== 'admin') {\n    return NextResponse.redirect(new URL('/', request.url));\n  }\n\n  // Handle student routes\n  if (pathname.startsWith('/student') && userRole !== 'student') {\n    return NextResponse.redirect(new URL('/', request.url));\n  }\n\n  return NextResponse.next();\n}\n\nexport const config = {\n  matcher: [\n    '/((?!api|_next/static|_next/image|favicon.ico).*)',\n  ],\n};","size_bytes":1424},"postcss.config.js":{"content":"module.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}","size_bytes":81},"src/app/student/settings/page.tsx":{"content":"\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport StudentLayout from \"../../../components/layout/StudentLayout\";\r\nimport styles from \"./Settings.module.css\";\r\n\r\ninterface StudentSettings {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  phone?: string;\r\n  notifications: {\r\n    email: boolean;\r\n    sms: boolean;\r\n    courseUpdates: boolean;\r\n    certificateAlerts: boolean;\r\n  };\r\n  privacy: {\r\n    profileVisible: boolean;\r\n    shareProgress: boolean;\r\n  };\r\n}\r\n\r\nexport default function StudentSettingsPage() {\r\n  const [settings, setSettings] = useState<StudentSettings | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [showPasswordChange, setShowPasswordChange] = useState(false);\r\n  const [passwordData, setPasswordData] = useState({\r\n    currentPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const studentSession = localStorage.getItem(\"student_session\");\r\n    if (!studentSession) {\r\n      router.push(\"/student/login\");\r\n      return;\r\n    }\r\n    fetchSettings();\r\n  }, []);\r\n\r\n  const fetchSettings = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/student/settings\");\r\n      const data = await response.json();\r\n      \r\n      if (response.ok) {\r\n        setSettings(data.settings);\r\n      } else {\r\n        setMessage(\"Failed to load settings\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch settings:\", error);\r\n      setMessage(\"Failed to load settings\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdateSettings = async (updatedData: Partial<StudentSettings>) => {\r\n    if (!settings) return;\r\n\r\n    setIsSaving(true);\r\n    try {\r\n      const response = await fetch(\"/api/student/settings\", {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(updatedData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setSettings(data.settings);\r\n        setMessage(\"Settings updated successfully!\");\r\n        setTimeout(() => setMessage(\"\"), 3000);\r\n      } else {\r\n        const data = await response.json();\r\n        setMessage(data.error || \"Failed to update settings\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to update settings:\", error);\r\n      setMessage(\"Failed to update settings\");\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (passwordData.newPassword !== passwordData.confirmPassword) {\r\n      setMessage(\"New passwords don't match\");\r\n      return;\r\n    }\r\n\r\n    if (passwordData.newPassword.length < 6) {\r\n      setMessage(\"Password must be at least 6 characters long\");\r\n      return;\r\n    }\r\n\r\n    setIsSaving(true);\r\n    try {\r\n      const response = await fetch(\"/api/student/change-password\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          currentPassword: passwordData.currentPassword,\r\n          newPassword: passwordData.newPassword,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setMessage(\"Password changed successfully!\");\r\n        setShowPasswordChange(false);\r\n        setPasswordData({\r\n          currentPassword: \"\",\r\n          newPassword: \"\",\r\n          confirmPassword: \"\",\r\n        });\r\n        setTimeout(() => setMessage(\"\"), 3000);\r\n      } else {\r\n        const data = await response.json();\r\n        setMessage(data.error || \"Failed to change password\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to change password:\", error);\r\n      setMessage(\"Failed to change password\");\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <StudentLayout>\r\n        <div className={styles.loading}>Loading settings...</div>\r\n      </StudentLayout>\r\n    );\r\n  }\r\n\r\n  if (!settings) {\r\n    return (\r\n      <StudentLayout>\r\n        <div className={styles.error}>Failed to load settings</div>\r\n      </StudentLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <StudentLayout>\r\n      <div className={styles.settingsPage}>\r\n        <div className={styles.header}>\r\n          <h1 className={styles.title}>Account Settings</h1>\r\n          <p className={styles.subtitle}>Manage your account preferences and privacy settings</p>\r\n        </div>\r\n\r\n        {message && (\r\n          <div className={`${styles.message} ${message.includes('Failed') || message.includes(\"don't match\") || message.includes('must be') ? styles.error : styles.success}`}>\r\n            {message}\r\n          </div>\r\n        )}\r\n\r\n        <div className={styles.settingsGrid}>\r\n          {/* Profile Information */}\r\n          <div className={`card ${styles.settingCard}`}>\r\n            <div className={styles.cardHeader}>\r\n              <h2 className={styles.cardTitle}>Profile Information</h2>\r\n              <p className={styles.cardDescription}>\r\n                Update your personal information\r\n              </p>\r\n            </div>\r\n            <div className={styles.cardContent}>\r\n              <div className={styles.formGroup}>\r\n                <label>Full Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={settings.name}\r\n                  onChange={(e) => handleUpdateSettings({ name: e.target.value })}\r\n                  className=\"input\"\r\n                  disabled={isSaving}\r\n                />\r\n              </div>\r\n              <div className={styles.formGroup}>\r\n                <label>Email Address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  value={settings.email}\r\n                  onChange={(e) => handleUpdateSettings({ email: e.target.value })}\r\n                  className=\"input\"\r\n                  disabled={isSaving}\r\n                />\r\n              </div>\r\n              <div className={styles.formGroup}>\r\n                <label>Phone Number</label>\r\n                <input\r\n                  type=\"tel\"\r\n                  value={settings.phone || ''}\r\n                  onChange={(e) => handleUpdateSettings({ phone: e.target.value })}\r\n                  className=\"input\"\r\n                  placeholder=\"Enter your phone number\"\r\n                  disabled={isSaving}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Password Security */}\r\n          <div className={`card ${styles.settingCard}`}>\r\n            <div className={styles.cardHeader}>\r\n              <h2 className={styles.cardTitle}>Password & Security</h2>\r\n              <p className={styles.cardDescription}>\r\n                Keep your account secure\r\n              </p>\r\n            </div>\r\n            <div className={styles.cardContent}>\r\n              {!showPasswordChange ? (\r\n                <button\r\n                  onClick={() => setShowPasswordChange(true)}\r\n                  className=\"btn btn-primary\"\r\n                  disabled={isSaving}\r\n                >\r\n                  Change Password\r\n                </button>\r\n              ) : (\r\n                <form onSubmit={handlePasswordChange} className={styles.passwordForm}>\r\n                  <div className={styles.formGroup}>\r\n                    <label>Current Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      value={passwordData.currentPassword}\r\n                      onChange={(e) => setPasswordData({\r\n                        ...passwordData,\r\n                        currentPassword: e.target.value\r\n                      })}\r\n                      className=\"input\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className={styles.formGroup}>\r\n                    <label>New Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      value={passwordData.newPassword}\r\n                      onChange={(e) => setPasswordData({\r\n                        ...passwordData,\r\n                        newPassword: e.target.value\r\n                      })}\r\n                      className=\"input\"\r\n                      required\r\n                      minLength={6}\r\n                    />\r\n                  </div>\r\n                  <div className={styles.formGroup}>\r\n                    <label>Confirm New Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      value={passwordData.confirmPassword}\r\n                      onChange={(e) => setPasswordData({\r\n                        ...passwordData,\r\n                        confirmPassword: e.target.value\r\n                      })}\r\n                      className=\"input\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className={styles.formActions}>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        setShowPasswordChange(false);\r\n                        setPasswordData({\r\n                          currentPassword: \"\",\r\n                          newPassword: \"\",\r\n                          confirmPassword: \"\",\r\n                        });\r\n                      }}\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={isSaving}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary\"\r\n                      disabled={isSaving}\r\n                    >\r\n                      {isSaving ? \"Updating...\" : \"Update Password\"}\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Notification Preferences */}\r\n          <div className={`card ${styles.settingCard}`}>\r\n            <div className={styles.cardHeader}>\r\n              <h2 className={styles.cardTitle}>Notifications</h2>\r\n              <p className={styles.cardDescription}>\r\n                Choose how you want to be notified\r\n              </p>\r\n            </div>\r\n            <div className={styles.cardContent}>\r\n              <div className={styles.toggleGroup}>\r\n                <label className={styles.toggleLabel}>\r\n                  <span>Email Notifications</span>\r\n                  <div className={styles.toggle}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={settings.notifications.email}\r\n                      onChange={(e) => handleUpdateSettings({\r\n                        notifications: {\r\n                          ...settings.notifications,\r\n                          email: e.target.checked\r\n                        }\r\n                      })}\r\n                      disabled={isSaving}\r\n                    />\r\n                    <span className={styles.toggleSlider}></span>\r\n                  </div>\r\n                </label>\r\n                \r\n                <label className={styles.toggleLabel}>\r\n                  <span>SMS Notifications</span>\r\n                  <div className={styles.toggle}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={settings.notifications.sms}\r\n                      onChange={(e) => handleUpdateSettings({\r\n                        notifications: {\r\n                          ...settings.notifications,\r\n                          sms: e.target.checked\r\n                        }\r\n                      })}\r\n                      disabled={isSaving}\r\n                    />\r\n                    <span className={styles.toggleSlider}></span>\r\n                  </div>\r\n                </label>\r\n                \r\n                <label className={styles.toggleLabel}>\r\n                  <span>Course Updates</span>\r\n                  <div className={styles.toggle}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={settings.notifications.courseUpdates}\r\n                      onChange={(e) => handleUpdateSettings({\r\n                        notifications: {\r\n                          ...settings.notifications,\r\n                          courseUpdates: e.target.checked\r\n                        }\r\n                      })}\r\n                      disabled={isSaving}\r\n                    />\r\n                    <span className={styles.toggleSlider}></span>\r\n                  </div>\r\n                </label>\r\n                \r\n                <label className={styles.toggleLabel}>\r\n                  <span>Certificate Alerts</span>\r\n                  <div className={styles.toggle}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={settings.notifications.certificateAlerts}\r\n                      onChange={(e) => handleUpdateSettings({\r\n                        notifications: {\r\n                          ...settings.notifications,\r\n                          certificateAlerts: e.target.checked\r\n                        }\r\n                      })}\r\n                      disabled={isSaving}\r\n                    />\r\n                    <span className={styles.toggleSlider}></span>\r\n                  </div>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Privacy Settings */}\r\n          <div className={`card ${styles.settingCard}`}>\r\n            <div className={styles.cardHeader}>\r\n              <h2 className={styles.cardTitle}>Privacy</h2>\r\n              <p className={styles.cardDescription}>\r\n                Control your privacy preferences\r\n              </p>\r\n            </div>\r\n            <div className={styles.cardContent}>\r\n              <div className={styles.toggleGroup}>\r\n                <label className={styles.toggleLabel}>\r\n                  <span>Profile Visible to Others</span>\r\n                  <div className={styles.toggle}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={settings.privacy.profileVisible}\r\n                      onChange={(e) => handleUpdateSettings({\r\n                        privacy: {\r\n                          ...settings.privacy,\r\n                          profileVisible: e.target.checked\r\n                        }\r\n                      })}\r\n                      disabled={isSaving}\r\n                    />\r\n                    <span className={styles.toggleSlider}></span>\r\n                  </div>\r\n                </label>\r\n                \r\n                <label className={styles.toggleLabel}>\r\n                  <span>Share Progress with Instructors</span>\r\n                  <div className={styles.toggle}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={settings.privacy.shareProgress}\r\n                      onChange={(e) => handleUpdateSettings({\r\n                        privacy: {\r\n                          ...settings.privacy,\r\n                          shareProgress: e.target.checked\r\n                        }\r\n                      })}\r\n                      disabled={isSaving}\r\n                    />\r\n                    <span className={styles.toggleSlider}></span>\r\n                  </div>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </StudentLayout>\r\n  );\r\n}","size_bytes":15743},"src/lib/auth.ts":{"content":"/**\r\n * Frontend Auth Utilities\r\n * Note: These are placeholder implementations for frontend-only version.\r\n * In a real application, password hashing should be done on the server side.\r\n */\r\n\r\n// Frontend mock of password hashing - DO NOT USE IN PRODUCTION\r\nexport async function hashPassword(password: string): Promise<string> {\r\n  // In frontend-only version, we don't actually hash passwords\r\n  // This is just a placeholder\r\n  return password;\r\n}\r\n\r\n// Frontend mock of password verification - DO NOT USE IN PRODUCTION\r\nexport async function verifyPassword(password: string, hashedPassword: string): Promise<boolean> {\r\n  // In frontend-only version, we do a simple comparison\r\n  // This is just a placeholder\r\n  return password === hashedPassword;\r\n}\r\n\r\nexport function generateTemporaryPassword(): string {\r\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  let password = '';\r\n  for (let i = 0; i < 8; i++) {\r\n    password += chars.charAt(Math.floor(Math.random() * chars.length));\r\n  }\r\n  return password;\r\n}\r\n\r\n// Add utility functions for token management\r\nexport function getAuthToken(): string | null {\r\n  if (typeof window !== 'undefined') {\r\n    return localStorage.getItem('authToken');\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function setAuthToken(token: string): void {\r\n  if (typeof window !== 'undefined') {\r\n    localStorage.setItem('authToken', token);\r\n  }\r\n}\r\n\r\nexport function removeAuthToken(): void {\r\n  if (typeof window !== 'undefined') {\r\n    localStorage.removeItem('authToken');\r\n  }\r\n}\r\n\r\nexport function getUserRole(): string | null {\r\n  if (typeof window !== 'undefined') {\r\n    return localStorage.getItem('userRole');\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function setUserRole(role: string): void {\r\n  if (typeof window !== 'undefined') {\r\n    localStorage.setItem('userRole', role);\r\n  }\r\n}\r\n\r\nexport function removeUserRole(): void {\r\n  if (typeof window !== 'undefined') {\r\n    localStorage.removeItem('userRole');\r\n  }\r\n}\r\n\r\nexport function isAuthenticated(): boolean {\r\n  return !!getAuthToken();\r\n}\r\n\r\nexport function clearAuth(): void {\r\n  removeAuthToken();\r\n  removeUserRole();\r\n}","size_bytes":2151},"src/app/login/Login.module.css":{"content":".loginPage {\r\n    min-height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n    padding: 1rem;\r\n}\r\n\r\n.loginContainer {\r\n    width: 100%;\r\n    max-width: 400px;\r\n}\r\n\r\n.loginCard {\r\n    background: white;\r\n    border-radius: 10px;\r\n    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);\r\n    padding: 2rem;\r\n}\r\n\r\n.header {\r\n    text-align: center;\r\n    margin-bottom: 2rem;\r\n}\r\n\r\n.title {\r\n    font-size: 2rem;\r\n    font-weight: 700;\r\n    color: #333;\r\n    margin-bottom: 0.5rem;\r\n}\r\n\r\n.subtitle {\r\n    color: #666;\r\n    font-size: 1rem;\r\n}\r\n\r\n.errorMessage {\r\n    background-color: #fee;\r\n    color: #c33;\r\n    padding: 0.75rem;\r\n    border-radius: 5px;\r\n    margin-bottom: 1rem;\r\n    border: 1px solid #fcc;\r\n}\r\n\r\n.formGroup {\r\n    margin-bottom: 1.5rem;\r\n}\r\n\r\n.formGroup label {\r\n    display: block;\r\n    margin-bottom: 0.5rem;\r\n    font-weight: 500;\r\n    color: #333;\r\n}\r\n\r\n.formGroup input {\r\n    width: 100%;\r\n    padding: 0.75rem;\r\n    border: 1px solid #ddd;\r\n    border-radius: 5px;\r\n    font-size: 1rem;\r\n    transition: border-color 0.3s;\r\n}\r\n\r\n.formGroup input:focus {\r\n    outline: none;\r\n    border-color: #667eea;\r\n}\r\n\r\n.submitButton {\r\n    width: 100%;\r\n    padding: 1rem;\r\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n    color: white;\r\n    border: none;\r\n    border-radius: 5px;\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n    transition: transform 0.2s;\r\n}\r\n\r\n.submitButton:hover:not(:disabled) {\r\n    transform: translateY(-2px);\r\n}\r\n\r\n.submitButton:disabled {\r\n    opacity: 0.7;\r\n    cursor: not-allowed;\r\n}\r\n\r\n.footer {\r\n    text-align: center;\r\n    margin-top: 1.5rem;\r\n}\r\n\r\n.backLink {\r\n    color: #667eea;\r\n    text-decoration: none;\r\n    font-weight: 500;\r\n}\r\n\r\n.backLink:hover {\r\n    text-decoration: underline;\r\n}","size_bytes":1885},"src/services/auth.service.ts":{"content":"import { fetchApi, apiConfig } from '@/lib/api';\nimport { mockUsers } from './mockData';\n\nexport interface LoginCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'student' | 'admin';\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n}\n\nexport const authService = {\n  async login(credentials: LoginCredentials): Promise<AuthResponse> {\n    // If no API is configured, short-circuit to mock mode directly\n    if (!apiConfig.baseURL) {\n      // match email case-insensitively\n      const user = mockUsers.find((u) => u.email.toLowerCase() === credentials.email.toLowerCase());\n      if (!user) throw new Error('Invalid credentials');\n      // In mock data we store a plaintext password (only for local/dev). Validate it.\n      // NOTE: This is NOT secure and should never be used in production.\n      if ((user as any).password && (user as any).password !== credentials.password) {\n        throw new Error('Invalid credentials');\n      }\n\n      // Return a user object without the password field\n      const { password, ...safeUser } = user as any;\n\n      return {\n        user: safeUser,\n        token: 'mock-jwt-token-' + Date.now(),\n      };\n    }\n\n    try {\n      return await fetchApi<AuthResponse>('/auth/login', {\n        method: 'POST',\n        body: JSON.stringify(credentials),\n      });\n    } catch (error) {\n      console.log('Falling back to mock auth', error);\n      // In mock mode, simulate login with mock users\n      const user = mockUsers.find((u) => u.email.toLowerCase() === credentials.email.toLowerCase());\n      if (!user) throw new Error('Invalid credentials');\n      if ((user as any).password && (user as any).password !== credentials.password) {\n        throw new Error('Invalid credentials');\n      }\n\n      const { password, ...safeUser } = user as any;\n\n      return {\n        user: safeUser,\n        token: 'mock-jwt-token-' + Date.now(),\n      };\n    }\n  },\n\n  async register(data: LoginCredentials & { name: string }): Promise<AuthResponse> {\n    try {\n      return await fetchApi<AuthResponse>('/auth/register', {\n        method: 'POST',\n        body: JSON.stringify(data),\n      });\n    } catch (error) {\n      console.log('Simulating registration', error);\n      // In mock mode, create a new user\n      const newUser = {\n        id: 'user-' + Date.now(),\n        email: data.email,\n        name: data.name,\n        role: 'student' as const\n      };\n      \n      return {\n        user: newUser,\n        token: 'mock-jwt-token-' + Date.now()\n      };\n    }\n  },\n\n  async getCurrentUser(): Promise<User> {\n    try {\n      return await fetchApi<User>('/auth/me');\n    } catch (error) {\n      console.log('Falling back to mock user data', error);\n      // In mock mode, return the first mock user\n      const { password, ...safeUser } = mockUsers[0] as any;\n      return safeUser;\n    }\n  },\n\n  async logout(): Promise<void> {\n    try {\n      return await fetchApi<void>('/auth/logout', {\n        method: 'POST',\n      });\n    } catch (error) {\n      console.log('Simulating logout', error);\n    }\n  },\n\n  async resetPassword(email: string): Promise<void> {\n    try {\n      return await fetchApi<void>('/auth/reset-password', {\n        method: 'POST',\n        body: JSON.stringify({ email }),\n      });\n    } catch (error) {\n      console.log('Simulating password reset', error);\n    }\n  },\n};","size_bytes":3422}},"version":1}